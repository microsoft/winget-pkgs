# Rebuild pipeline for WinGet rest source.

# Name of the run
name: '$(Build.DefinitionName)-$(Build.DefinitionVersion)-$(Date:yyyyMMdd)-$(Rev:r)'

trigger: none
pr: none

resources:
  repositories:
  - repository: 1ESPipelineTemplates
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release
extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    pool:
      name: Azure-Pipelines-1ESPT-ExDShared
      image: windows-2022
      os: windows
    customBuildTags:
    - ES365AIMigrationTooling

    stages:
    - stage: WinGetSvc_Rest_Rebuild
      jobs:
      # Agent phase.
      - job: 'Rebuild'
        displayName: 'Start Rebuild'
        variables:
          skipComponentGovernanceDetection: ${{ true }}
          runCodesignValidationInjection: ${{ false }}
        timeoutInMinutes: 0
        steps:

        # Allow scripts to access the system token.
        - checkout: none
          persistCredentials: true

        - powershell: |
            Start-Process msiexec -ArgumentList ' /x {37CCEB8D-306A-4DB4-B25B-7608A093D184} /qn' -NoNewWindow -Wait
          displayName: "Uninstall Azure CLI"

        - powershell: |
            Invoke-WebRequest -Uri "https://azurecliprod.blob.core.windows.net/msi/azure-cli-2.76.0-x64.msi" -OutFile "azure-cli-2.76.0.msi"
            Start-Process msiexec -ArgumentList '/i "azure-cli-2.76.0.msi" /quiet /norestart' -NoNewWindow -Wait
          displayName: "Install Azure CLI 2.76.0"

        - script: |
            az version
          displayName: "Check Azure CLI version"

        # Downloads all the setup files and its dependencies.
        - task: AzureCLI@1
          displayName: 'Azure Setup'
          inputs:
            azureSubscription: '$(WinGet.Subscription)'
            scriptLocation: inlineScript
            inlineScript: 'az storage blob download-batch -d . --pattern * -s servicewrapper --output none'
          env:
            AZURE_STORAGE_CONNECTION_STRING: $(ValidationStorageAccountConnectionString)

        # WinGet setup
        - task: CmdLine@2
          name: 'wingetsetup'
          displayName: 'WinGet Setup'
          env:
            HOST_KEY: $(AzureFunctionHostKey)
            RESTSOURCE_REBUILD_ENDPOINT: $(AzFuncRestSourceRebuildEndpoint)
          inputs:
            script: 'winget_rebuild_setup.cmd'
            workingDirectory: scripts

      # Agentless phase. Depends on previous job.
      - job: 'PublishToRestSource'
        pool: server
        timeoutInMinutes: 1500
        displayName: 'Publish to rest source'
        dependsOn:
          - 'Rebuild'
        variables:
          HostKeySecret: $[ dependencies.Rebuild.outputs['wingetsetup.hostkey']]
          RestSourceRebuildEndpointSecret: $[ dependencies.Rebuild.outputs['wingetsetup.restsourceRebuildEndpoint']]
        steps:

        # Rebuild Rest source.
        - task: AzureFunction@1
          displayName: 'Publish to rest source'
          inputs:
            function: '$(RestSourceRebuildEndpointSecret)'
            key: '$(HostKeySecret)'
            body: |
              {
              "operationId": "$(Build.BuildNumber)",
              "buildId": "$(Build.BuildId)",
              "pipelineType": "RebuildPipeline",
              "projectId": "$(system.TeamProjectId)",
              "planId": "$(system.PlanId)", 
              "jobId": "$(system.JobId)", 
              "timelineId": "$(system.TimelineId)", 
              "taskInstanceId": "$(system.TaskInstanceId)",
              "authToken": "$(system.AccessToken)"
              }
            waitForCompletion: "true"
