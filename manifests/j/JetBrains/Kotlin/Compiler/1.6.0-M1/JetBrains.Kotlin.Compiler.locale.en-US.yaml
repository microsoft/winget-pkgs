# Created with Komac v1.9.1
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.4.0.schema.json

PackageIdentifier: JetBrains.Kotlin.Compiler
PackageVersion: 1.6.0-M1
PackageLocale: en-US
Publisher: JetBrains s.r.o.
PublisherUrl: https://jetbrains.com/opensource
Author: JetBrains s.r.o.
PackageName: Kotlin Compiler
PackageUrl: https://github.com/JetBrains/kotlin
License: Freeware
Copyright: Copyright (C) JetBrains s.r.o.
ShortDescription: The Kotlin Programming Language.
Moniker: kotlin-compiler
ReleaseNotes: |-
  Android
  - KT-48019 Bundle Kotlin Tooling Metadata into apk artifacts
  - KT-47733 JVM / IR: Android Synthetic don't generate _findCachedViewById function
  New Features
  - KT-12794 Allow runtime retention repeatable annotations when compiling under Java 8
  - KT-47984 In-place arguments inlining for @InlineOnly functions
  - KT-48194 Try to resolve calls where we don't have enough type information, using the builder inference despite the presence of the annotation
  - KT-26245 Add ability to specify generic type parameters as not-null
  - KT-45949 Kotlin/Native: Improve bound check elimination
  - KT-47699 Support programmatic creation of class annotations and corresponding feature flag on JVM
  - KT-47736 Support conversion from regular functional types to suspending ones in JVM IR
  - KT-39055 Support property delegate created via synthetic method instead of field
  Performance Improvements
  - KT-33835 Bytecode including unnecessary null checks for safe calls where left-hand side is non-nullable
  - KT-41510 Compilation of kotlin html DSL is still too slow
  - KT-48211 We spend a lot of time in ExpectActual declaration checker when there is very small amount of actual/expect declaration
  - KT-39054 Optimize delegated properties which call get/set on the given KProperty instance on JVM
  - KT-47918 JVM / IR: Performance degradation with const-bound for-cycles
  - KT-47785 Compilation time increased when trying to compile AssertJ DB expression in 1.5.21
  - KT-46615 Don't generate nullability assertions in methods for directly invoked lambdas
  Fixes
  - KT-48523 Kotlin/Native: cross-compilation from Linux to MinGW not working when platform.posix is used
  - KT-48295 JVM / IR: VerifyError: Bad access to protected data in getfield
  - KT-48440 JVM IR: Missing checkcast in generated bytecode causes VerifyError in Kotlin 1.5.30
  - KT-48794 Breaking change in 1.5.30: Builder inference lambda contains inapplicable calls so {1} cant be inferred
  - KT-48653 Warnings on non-exhaustive when statements missing in some cases with 1.6
  - KT-48394 JVM: Invalid locals caused by unboxing bytecode optimization
  - KT-48380 kotlin.RuntimeException: Unexpected receiver type
  - KT-47855 Kotlin/Native: compilation fails due to Escape Analysis
  - KT-48291 False positive [ACTUAL_MISSING] Declaration must be marked with 'actual' when implementing actual interface
  - KT-48613 Kotlin/Native fails to compile debug binaries for watchosArm64 target
  - KT-48618 Enable by default "suspend conversion" feature in 1.6
  - KT-48543 Native compiler crashes because of bridges for $default stubs
  - KT-47328 JVM / IR: NoSuchFieldError with missing CHECKCAST
  - KT-47638 Drop EXPERIMENTAL_IS_NOT_ENABLED diagnostic
  - KT-48349 OptIn markers are forbidden on local variable / value parameter / property getter only in presence of explicit Target annotation
  - KT-48589 KotlinTypeRefiner is lost, leading to TYPE_MISMATCH and OVERLOAD_RESOLUTION_AMBIGUITY issues with MPP projects
  - KT-48615 Inconsistent behavior with integer literals overflow (Implementation)
  - KT-47937 Implement deprecation of computing constant values of complex boolean expressions in when condition branches and conditions of loops
  - KT-47772 False negative WRONG_ANNOTATION_TARGET on type argument to function call
  - KT-48552 Kotlin/Native: iosArm64 debug build fails in 1.6.0-M1-139
  - KT-46182 Native: prohibit using dots in identifiers
  - KT-47917 JVM: "UTF8 string too large" caused by a big string
  - KT-46230 JVM IR: "IllegalArgumentException: Null argument in ExpressionCodegen for parameter VALUE_PARAMETER MOVED_DISPATCH_RECEIVER" with value class overriding function with default parameter
  - KT-48302 FIR: Investigate not-null assertion on generic Java method
  - KT-47422 -Xjspecify-annotations: If a class has a @Nullable type-parameter bound, Kotlin should still treat some users' type arguments as platform types
  - KT-48500 AE: "Last parameter type of suspend function must be Continuation, but it is kotlin.coroutines.experimental.
    Continuation" for kotlin-stdlib-common library
  - KT-48469 Problem with properties lazy initialization while using kotlinx.serialization plugin
  - KT-48432 Regression in IntRange.contains (and probably other ranges too) when used in-place
  - KT-48361 INTEGER_OPERATOR_RESOLVE_WILL_CHANGE is not reported in some positions
  - KT-44855 "AssertionError: SyntheticAccessorLowering should not attempt to modify other files" on smart cast of protected field owner
  - KT-47499 JVM / IR: java.lang.VerifyError: Bad access to protected data in invokevirtual when trying to clone the result of lambda invocation that is "this"  in an extension function
  - KT-46451 JVM Debugging: stepping on finally block end brace line before stepping into finally code
  - KT-48329 It's impossible to infer a type variables based on several builder inference lambdas
  - KT-48193 Don't use the builder inference for calls which can be resolved without it
  - KT-46450 JVM Debugging: some break statements in catch blocks have no line numbers and you cannot set breakpoints on them
  - KT-48172 "IllegalStateException: Cannot serialize error type: [ERROR : <LOOP IN SUPERTYPES>]" in 1.5.21 with java kotlin interop
  - KT-48262 "Inconsistent type" with JSpecify @NullMarked
  - KT-46697 IllegalStateException: IrTypeAliasSymbol expected: Unbound public symbol for public kotlinx.coroutines/CancellationException|null[0] compiling KMM module for Kotlin/Native with Kotlin 1.5
  - KT-47285 IR deserialization exception when dependency KLIB has class instead of typealias
  - KT-41378 Compilation failed: Deserializer for declaration public kotlinx.coroutines/SingleThreadDispatcher|null[0] is not found
  - KT-47988 JVM / IR: "VerifyError: Bad type on operand stack" when invoking apply with a local method reference
  - KT-47833 False positive "Type argument is not within its bounds " with upcasting in 1.5.30-M1
  - KT-47911 Native compiler on ios_arm64 target generates movi.2d instructions, which are mishandled by Apple hardware
  - KT-14392 Repeated annotation with use site target is not detected for getter and setter
  - KT-47493 Missed frontend diagnostic in try/catch
  - KT-47597 JVM IR: if statement doesn't eval correctly on 1.5.20 possible nullable type differences.
  - KT-47922 False negative type mismatch on empty when as last statement of lambda
  - KT-47830 Some code doesn't compile with unrestricted builder inference
  - KT-34594 Do not generate fake debugger variables initialization for @InlineOnly functions
  - KT-42139 NI: NEW_INFERENCE_NO_INFORMATION_FOR_PARAMETER for emptyList / listOf (with no arguments) / emptyMap / mapOf (with no arguments) inside if block inside sequence block
  - KT-47749 Incorrect scope of a local variable inside the coroutine
  - KT-47527 JVM / IR ClassCastException: "kotlin.
    Unit cannot be cast to java.lang.
    String"
  - KT-47941 "IllegalStateException: Expected some types" on a call with several excepted type constraints
  - KT-47854 "IllegalArgumentException: Type is inconsistent" with Android's @Nullable annotation starting in Kotlin 1.5.20
  - KT-47899 "AssertionError: Intersection type should not be marked nullable" with 1.5.21
  - KT-47846 Stack overflow when handling enhanced recursive type parameter
  - KT-47747 Introduce specific error for calls which could be resolved only with unrestricted builder inference
  - KT-47840 JVM / IR: "IllegalStateException: No mapping for symbol: VALUE_PARAMETER name: x" in nested local functions with recursive calls
  - KT-46448 JVM Debugging: Locals in finally blocks not always duplicated when the finally block is
  - KT-47396 <?> in @NullMarked code should permit nullable types
  - KT-47716 JVM / IR: NoSuchMethodError when trying to get MAX_VALUE from ULong in non-trivial try/finally context
  - KT-47762 JVM / IR: Properties with the same signatures in inline class and its companion object crashes the compiler with NullPointerException
  - KT-47729 False positive INTEGER_OPERATOR_RESOLVE_WILL_CHANGE warning: "expression will be resolved to Int in future releases"
  - KT-47741 JVM / IR: VerifyError: Bad type on operand stack with iterator and invoking method reference to IntIterator
  - KT-43696 ClassFormatError on @JvmStatic external fun in interface companion object
  - KT-47715 JVM / IR, R8: External getter cannot be represented in dex format
  - KT-47744 UninitializedPropertyAccessException compiler exception on nested builder inference calls
  - KT-47724 Type inference: False positive "Returning type parameter has been inferred to Nothing implicitly"
  - KT-47684 Add warning on is checks which are always false
  - KT-47685 False positive CAST_NEVER_SUCCEEDS on variable of intersection type
  - KT-32188 NI: False positive "This cast can never succeed"
  - KT-35687 NI: Poor cast can never succeed [CAST_NEVER_SUCCEEDS]
  - KT-41331 False negative USELESS_IS_CHECK with null
  - KT-47609 JVM IR: "AssertionError: Unexpected number of type arguments" when compiling an extension property with annotation and it extends a value class with a generic parameter
  - KT-47589 Using RequiresOptIn annotation on constructor property results in error even if the annotation has no VALUE_PARAMETER target
  - KT-47413 FIR: Rework FirDelegatedScope
  - KT-47120 JVM IR: NoClassDefFoundError when there are an extension and a regular function with the same name
  - KT-47492 Illegal use of DUP
  IDE. Gradle Integration
  - KT-47463 MPP: Import fails with Task 'runCommonizer' not found in root project if Kotlin configured only in module
  IDE. JS
  - KT-47557 KJS: With NPM dependency IDEA import fails when performed before Gradle build
  IDE. Multiplatform
  - KT-47604 kotlin-stdlib-common leaks into dependencies of Android-specific source sets
  JavaScript
  - KT-47700 Support instantiation of annotation classes on JS
  - KT-46204 KJS / IR: Support SuspendFunctionN as super type
  - KT-48344 KJS / IR: incorrect call with vararg argument from suspend function
  - KT-46551 KJS / IR: Add a basic sourcemap generation
  - KT-47751 Kotlin/JS: IR + IC: "argument has no effect without source map" warnings on build
  Libraries
  - KT-48587 Deprecate some of JS-only stdlib API
  - KT-48584 Introduce JVM readln() and readlnOrNull() top-level functions
ReleaseNotesUrl: https://github.com/JetBrains/kotlin/releases/tag/v1.6.0-M1
ManifestType: defaultLocale
ManifestVersion: 1.4.0
