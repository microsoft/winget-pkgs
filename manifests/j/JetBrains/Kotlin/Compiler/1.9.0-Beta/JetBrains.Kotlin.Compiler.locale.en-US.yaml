# Created with Komac v1.9.1
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.4.0.schema.json

PackageIdentifier: JetBrains.Kotlin.Compiler
PackageVersion: 1.9.0-Beta
PackageLocale: en-US
Publisher: JetBrains s.r.o.
PublisherUrl: https://jetbrains.com/opensource
Author: JetBrains s.r.o.
PackageName: Kotlin Compiler
PackageUrl: https://github.com/JetBrains/kotlin
License: Freeware
Copyright: Copyright (C) JetBrains s.r.o.
ShortDescription: The Kotlin Programming Language.
Moniker: kotlin-compiler
ReleaseNotes: |-
  New Features
  - KT-57930 Analysis API: provide an API for extending Kotlin resolution
  - KT-57636 K2: Add the return type of K2 reference shortener AA ShortenCommand::invokeShortening() e.g., ShorteningResultInfo to allow callers to access the shortening result PSI
  Fixes
  - KT-55626 Impossible to restore symbol by psi from script file
  - KT-57314 LL FIR: Combine LLFirProvider$SymbolProviders in session dependencies (optimization)
  - KT-55527 K2 IDE: Rewrite KtScopeContext class to allow to handle each scope separately
  - KT-55329 LL FIR: Unexpected ACTUAL_WITHOUT_EXPECT error on constructor and function declaration
  - KT-50732 LL API: fix compiler based tests
  - KT-57850 K2: contract violation due to SymbolLightAccessorMethod.propertyAccessorSymbol
  - KT-56543 LL FIR: rework lazy transformers so transformers modify only declarations they suppose to
  - KT-56721 K2: FirExtensionDeclarationsSymbolProvider: java.lang.
    IllegalStateException: Recursive update
  - KT-50253 Analysis API: Solve issues with ProcessCancelledException
  - KT-56800 K2 IDE: optimize deprecation calculation for symbols
  - KT-55006 Analysis API does not transform Java type refs for callable symbol return types
  - KT-57256 AA FIR: Reduce lazy resolve phase for deprecation status
  - KT-58141 K2: AA FIR: impossible to restore symbol for declaration with annotation with argument inside type
  - KT-57462 Symbol Light Classes: SymbolLightFieldForProperty should retrieve annotations not from KtPropertySymbol, but from the corresponding backing field
  - KT-58249 Analysis API: Disable error logging for FE10 implementation of resolveCall when resolve is not successful
  - KT-54864 Analysis API: add function to get expect KtSymbol list by actual KtSymbol
  - KT-56763 Analysis API: .
    KtSourceModuleImpl is missing in the map. on symbol restore when symbol cannot be seen from the use-site module
  - KT-56617 Analysis API: optimize KtFirSymbolProviderByJavaPsi.getNamedClassSymbol
  - KT-54430 K2: .getAllOverriddenSymbols() returns invalid results
  Backend. Native. Debug
  - KT-55440 Kotlin/Native debugger: inline function parameters are not visible during debugging
  Backend. Wasm
  - KT-57136 K/Wasm: Restrict non-external types in JS interop
  - KT-57060 Clarify the lack of support for dynamic in Kotlin/Wasm
  - KT-56955 K/Wasm: Support restricted version of K/JS js(code)
  - KT-57276 Wasm: "Body not found for function" error when compiling konform library with Kotlin/Wasm support
  - KT-56976 K/Wasm bug with calling override of external function with default parameters
  - KT-56584 K/Wasm: Can't link symbol class
  New Features
  - KT-49276 Warn about potential overload resolution change if Range/Progression starts implementing Collection
  - KT-55333 Allow secondary constructors in value classes with bodies
  - KT-54944 @Volatile support in native
  - KT-54746 Deprecate with ERROR JvmDefault annotation and old -Xjvm-default modes
  - KT-29378 K2: rework warnings/errors for equality/identity operators on incompatible types
  - KT-57010 Kotlin/Native: make it possible to compile bitcode in a separate compiler invocation
  - KT-55691 K2: Avoid inferring Nothing? in presence of other constraints (beside type parameter bounds)
  - KT-46288 Unexpected behavior of extension function on lambda with suspend receiver
  - KT-24779 Inconsistent smart cast behavior for bound data flow values
  Performance Improvements
  - KT-56906 FIR: Use cached instance of FirImplicitTypeRefImpl in FIR builders
  - KT-56276 LanguageVersion.getVersionString() allocates 5k objects on project opening
  Fixes
  - KT-56609 K2: False positive NULL_FOR_NONNULL_TYPE with -Xjsr305=strict and @Nullable annotation Java parameter
  - KT-56656 K1/K2: inconsistent NOTHING_TO_OVERRIDE with complex nullable annotations
  - KT-58332 K2: local fun with suspend type is not marked as suspend in IR
  - KT-57991 K2: Modifier 'suspend' is not applicable to 'anonymous function'
  - KT-4113 No smartcast for nullable lambda property (functional type) with implicit/operator invoke call
  - KT-54294 K2: "Not all type variables found" in builder inference with type parameters inferred through a union of two branches
  - KT-52597 Provide Alpha Support for Multiplatform in the K2 platform
  - KT-58523 K2: reference is resolved to imported type-alias instead of identically named top-level property
  - KT-57098 Native: avoid object initialization while accessing const val
  - KT-57973 32-th default value in inline classes override function is not used
  - KT-57714 "IllegalStateException: <B::!>" using reified generics
  - KT-57810 toString of object erroneously considered as constant function in string concatenation
  - KT-58076 K2: Incorrect inference of type of labeled receiver
  - KT-57929 K2: Arguments of annotations  are not calculated in a lot of strange locations
  - KT-55388 Consider enabling ProhibitUsingNullableTypeParameterAgainstNotNullAnnotated
  - KT-53041 NPE in Kotlin 1.7.0 when using RxJava Maybe.doOnEvent with anonymous parameters
  - KT-54829 Cleanup local types approximation logic
  - KT-38871 Kotlin Gradle DSL, MPP: UNUSED_VARIABLE when configuring a sourceset with delegated property
  - KT-58587 MUST_BE_INITIALIZED must take into account effectivelly final
  - KT-58524 K2: false-positive overload resolution ambiguity error on invoking a generic class's member function with id-shaped function-typed parameter on intersection-typed receiver
  - KT-53929 Enum.entries: consider changing scope behavior in K1
  - KT-58520 K2: FIR2IR: ISE during const evaluation of operator times with exposed
  - KT-56662 K1: false negative INVISIBLE_SETTER for a var with internal setter accessed from a derived class
  - KT-57770 K2: Support generation of serializer if base class for serializable class declared in different module
  - KT-58375 Kapt: "wrong number of type arguments. required 1" when more than 22 type arguments
  - KT-56077 K2: build atomicfu
  - KT-56074 K2: build Space JVM (snapshot 2022.3)
  - KT-48870 [FIR] Different behavior for explicit receiver resolution inside delegated constructors
  - KT-53865 Partial linkage: overriding function with parameter losing vararg: Native is successful, JS fails in runtime
  - KT-53568 Partial linkage: absent class as type parameter bound causes failure of compileProductionExecutableKotlinJs
  - KT-53608 Partial linkage: Kotlin/JS fails with IllegalStateException: "Validation failed in file" when overridden declaration was visible, but now private
  - KT-53663 Partial linkage: usage of property which becomes abstract: no IrLinkageError, but AssertionError in Native backend instead
  - KT-53938 Partial linkage: with turning interface into class and using as second parent Native build fails
  - KT-53939 Partial linkage: with turning object into class linkNative and jsTest tasks fail
  - KT-53941 Partial linkage: with turning class into object accessing member via parameterless constructor does not fail
  - KT-53970 Partial linkage: on turning nested class into inner JS tasks are successful, Native build fails
  - KT-53972 Partial linkage: turning inner class into nested: with usage in executable Native fails with NPE in backend
  - KT-53971 Partial linkage: turning inner class into nested: without usage in executable Native is successful, JavaScript fails
  - KT-53995 Partial linkage: on turning class to abstract and direct constructor call Naive fails, JavaScript is successful
  - KT-58013 K2: "Not enough information to infer type variable T" when using assert non-null (!!) and delegation
  - KT-54045 Partial linkage: turning class into type alias + calculating implicit function type: build fails with UninitializedPropertyAccessException: "lateinit property parent has not been initialized"
  - KT-54046 Partial linkage: turning type alias into class + using it as type: build fails with AssertionError: "Expected exactly one delegating constructor call but none encountered"
  - KT-53887 Partial linkage: turning from enum to regular class + reference to enum contant causes compileProductionExecutableKotlinJs fail with IllegalStateException
  - KT-54047 Partial linkage: reference to removed enum const causes JS fail with "IllegalStateException: Validation failed in file"
  - KT-54048 Partial linkage: reference to removed enum const in runtime causes Native fail with IllegalStateException at IrBindablePublicSymbolBase.getOwner()
  - KT-57784 "NullPointerException: Parameter specified as non-null is null:" with enum, companion object, 'entries' and map
  - KT-58365 K2: Fix stub types leakage in builder inference caused by implicit receiver type update with partially resolved calls (IGNORE_LEAKED_INTERNAL_TYPES for stub types)
  - KT-58214 Continuation parameter only exists in lowered suspend functions, but function origin is LOCAL_FUNCTION_FOR_LAMBDA
  - KT-58135 K2: Priority of extension property is lower than ordinary property
  - KT-57181 [K1/N, K2/N] Expect and Actual funs have different IdSignature.
    CommonSignature, if Expect has default argument
  - KT-56023 Constant operations (e.g. division) are not constant in K2 (JS, Native)
  - KT-57354 In suspend function default arguments are sometimes not deleted in IR
  - KT-55242 K2/MPP: basic build/link functionality
  - KT-57979 K2: Unresolved reference error when assigning to Java synthetic property with a different nullability getter
  - KT-58142 K2: val parameter with more specific type is lower priority
  - KT-54518 False negative NON_PUBLIC_CALL_FROM_PUBLIC_INLINE when calling internal method of super class
  - KT-58025 K2: Argument type mismatch when using Springs HandlerMethodArgumentResolver
  - KT-57373 K2: FIR properties synthesized when implementing interface by delegation don't have accessors
  - KT-58259 Unexpected unresolved function call with obvious invoke-convention desugaring
  - KT-57135 K2: Fir should take into account an annotation's allowed targets as well as the use-site target when deciding whether it applies to a property, a field, or a constructor parameter
  - KT-57958 K2: Initializer type mismatch when using extension property on type with star projection
  - KT-58149 K2: New inference error with buildList
ReleaseNotesUrl: https://github.com/JetBrains/kotlin/releases/tag/v1.9.0-Beta
ManifestType: defaultLocale
ManifestVersion: 1.4.0
