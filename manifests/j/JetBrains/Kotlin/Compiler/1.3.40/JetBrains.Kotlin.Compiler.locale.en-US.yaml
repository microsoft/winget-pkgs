# Created with Komac v1.9.1
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.4.0.schema.json

PackageIdentifier: JetBrains.Kotlin.Compiler
PackageVersion: 1.3.40
PackageLocale: en-US
Publisher: JetBrains s.r.o.
PublisherUrl: https://jetbrains.com/opensource
Author: JetBrains s.r.o.
PackageName: Kotlin Compiler
PackageUrl: https://github.com/JetBrains/kotlin
License: Freeware
Copyright: Copyright (C) JetBrains s.r.o.
ShortDescription: The Kotlin Programming Language.
Moniker: kotlin-compiler
ReleaseNotes: |-
  Fixes
  - KT-12402 Android DataBinding work correctly but the IDE show it as error
  - KT-31432 Remove obsolete code introduced in KT-12402
  New Features
  - KT-29915 Implement typeOf on JVM
  - KT-30467 Provide a way to to save compiled script(s) as a jar
  Performance Improvements
  - KT-17755 Optimize trimIndent and trimMargin on constant strings
  - KT-30603 Compiler performance issue: VariableLivenessKt.useVar performance
  Fixes
  - KT-19227 Load built-ins from dependencies by default in the compiler, support erroneous "fallback" built-ins
  - KT-23426 Actual typealias to Java enum does not match expected enum because of modality
  - KT-23854 Inference for common type of two captured types
  - KT-25105 False-positive warning "Remove final upper bound" on generic override
  - KT-25302 New inference: "Type mismatch" between star projection and Any? type argument in specific case
  - KT-25433 Wrong order of fixing type variables for callable references
  - KT-26386 Front-end recursion problem while analyzing contract function with call expression of self in implies
  - KT-26412 Wrong LVT generated if decomposed parameter of suspend lambda is not the first parameter.
  - KT-27097 JvmMultifileClass + JvmName causes NoSuchMethodError on sealed class hierarchy for top-level members
  - KT-28534 Local variable entries are missing in LVT for suspend lambda parameters
  - KT-28535 Rename result to $result in coroutines' LVT
  - KT-29184 Implement inference for coroutines according to the @BuilderInference contract in NI
  - KT-29772 Contracts don't work if contract function is fully qualified (FQN)
  - KT-29790 Incorrect version requirement in metadata of anonymous class for suspend lambda
  - KT-29948 NI: incorrect DSLMarker behaviour with generic star projection
  - KT-30021 +NewInference on Kotlin Native :: java.lang.
    StackOverflowError
  - KT-30242 Statements are not coerced to Unit in last expressions of lambda
  - KT-30243 Include FIR modules into compiler
  - KT-30250 Rewrite at slice exception for callable reference argument inside delegated expression
  - KT-30292 Reference to function is unresolved when LHS is a star-projected type
  - KT-30293 Wrong intersection type for common supertype from String and integer type
  - KT-30370 Call is completed too early when there is "Nothing" constraint
  - KT-30405 Support expected type from cast in new inference
  - KT-30406 Fix testIfOrWhenSpecialCall test for new inference
  - KT-30590 Report diagnostic about not enough information for inference in NI
  - KT-30620 Exception from the compiler when coroutine-inference is involved even with the explicitly specified types
  - KT-30656 Exception is occurred when functions with implicit return-stub types are involved in builder-inference
  - KT-30658 Exception from the compiler when getting callable reference to a suspend function
  - KT-30661 Disable SAM conversions to Kotlin functions in new-inference by default
  - KT-30676 Overload resolution ambiguity when there is a callable reference argument and candidates with different functional return types
  - KT-30694 No debug metadata is generated for suspend lambdas which capture crossinline
  - KT-30724 False positive error about missing equals when one of the operands is incorrectly inferred to Nothing
  - KT-30734 No smartcast inside lambda literal in then/else "if" branch
  - KT-30737 Try analysing callable reference preemptively
  - KT-30780 Compiler crashes on 'private inline' function accessing private constant in 'inline class' (regression)
  - KT-30808 NI: False negative SPREAD_OF_NULLABLE with USELESS_ELVIS_RIGHT_IS_NULL
  - KT-30816 BasicJvmScriptEvaluator passes constructor parameters in incorrect order
  - KT-30826 There isn't report about unsafe call in the new inference (by invalidating smartcast), NPE
  - KT-30843 Duplicate JVM class name for expect/actual classes in JvmMultifileClass-annotated file
  - KT-30853 Compiler crashes with NewInference and Kotlinx.
    Coroutines Flow
  - KT-30927 Data flow info isn't used for 'this' which is returned from lambda using labeled return
  - KT-31081 Implement ArgumentMatch abstraction in new inference
  - KT-31113 Fix failing tests from SlicerTestGenerated
  - KT-31199 Unresolved callable references with typealias
  - KT-31339 Inliner does not remove redundant continuation classes, leading to CNFE in JMH bytecode processing
  - KT-31346 Fix diagnostic DSL_SCOPE_VIOLATION for new inference
  - KT-31356 False-positive error about violating dsl scope for new-inference
  - KT-31360 NI: inconsistently prohibits member usage without explicit receiver specification with star projection and DSL marker
  - KT-18563 Do not generate inline reified functions as private in bytecode
  - KT-20849 Inference results in Nothing type argument in case of passing 'out T' to 'in T1'
  - KT-25290 New inference: KNPE at ResolutionPartsKt.getExpectedTypeWithSAMConversion() on out projection of Java class
  - KT-26418 Back-end (JVM) Internal error when compiling decorated suspend inline functions
  - KT-26925 Decorated suspend inline function continuation resumes in wrong spot
  - KT-28999 Prohibit type parameters for anonymous objects
  - KT-29307 New inference: false negative CONSTANT_EXPECTED_TYPE_MISMATCH with a Map
  - KT-29475 IllegalArgumentException at getAbstractTypeFromDescriptor with deeply nested expression inside function named with a right parenthesis
  - KT-29996 Properly report  errors on attempt to inline bytecode from class files compiled to 1.8 to one compiling to 1.6
  - KT-30289 Don't generate annotations on synthetic methods for methods with default values for parameters
  - KT-30410 [NI] Front-end recursion problem while analyzing contract function with call expression of self in implies
  - KT-30411 Fold recursive types to star-projected ones when inferring type variables
  - KT-30706 Passing noinline lambda as (cross)inline parameter result in wrong state-machine
  - KT-30707 Java interop of coroutines inside inline functions is broken
  - KT-30983 ClassCastException: DeserializedTypeAliasDescriptor cannot be cast to PackageViewDescriptor on star-import of expect enum class actualized with typealias
  - KT-31242 "Can't find enclosing method" proguard compilation exception with inline and crossinline
  - KT-31347 "IndexOutOfBoundsException: Insufficient maximum stack size" with crossinline and suspend
  - KT-31354 Suspend inline functions with crossinline parameters are inaccessible from java
  - KT-31367 IllegalStateException: Concrete fake override public open fun (...)  defined in TheIssue[PropertyGetterDescriptorImpl@1a03c376] should have exactly one concrete super-declaration: []
  - KT-31461 NI: NONE_APPLICABLE instead of TYPE_MISMATCH when invoking convention plus operator
  - KT-31503 Type mismatch with recursive types and SAM conversions
  - KT-31507 Enable new type inference algorithm for IDE analysis
  - KT-31514 New inference generates multiple errors on generic inline expression with elvis operator
  - KT-31520 False positive "not enough information" for constraint with star projection and covariant type
  - KT-31606 Rewrite at slice on using callable reference with array access operator
  - KT-31620 False-positive "not enough information" for coroutine-inference when target method is assigned to a variable
  - KT-31624 Type from declared upper bound in Java is considered more specific than Nothing producing type mismatch later
  - KT-31860 Explicit type argument isn't considered as input type causing errors about "only input types"
  - KT-31866 Problems with using star-projections on LHS of callable reference
  - KT-31868 No type mismatch error when using NoInfer annotation
  - KT-31941 Good code red in IDE with smart cast on parameter of a generic type after null check
  New Features
  - KT-11242 Action to copy project diagnostic information to clipboard
  - KT-24292 Support external nullability annotations
  - KT-30453 Add plugin option (registry?) to enable new inference only in IDE
  Performance Improvements
  - KT-13841 Classes and functions should be lazy-parseable
  - KT-27106 Performance issue with optimize imports
  - KT-30442 Several second lag on project open in KotlinNonJvmSourceRootConverterProvider
  - KT-30644 ConfigureKotlinInProjectUtilsKt freezes UI
  Fixes
  - KT-7380 Imports insertion on paste does not work correctly when there were alias imports in the source file
  - KT-10512 Do not delete imports with unresolved parts when optimizing
  - KT-13048 "Strip trailing spaces on Save" should not strip trailing spaces inside multiline strings in Kotlin
  - KT-17375 Optimize Imports does not remove unused import alias
  - KT-27385 Uast: property references should resolve to getters/setters
  - KT-28627 Invalid detection of Kotlin jvmTarget inside Idea/gradle build
  - KT-29267 Enable ultra-light classes by default
  - KT-29892 A lot of threads are waiting in KotlinConfigurationCheckerComponent
  - KT-30356 Kotlin facet: all JVM 9+ target platforms are shown as "Target Platform = JVM 9" in Project Structure dialog
  - KT-30514 Auto-import with "Add unambiguous imports on the fly" imports enum members from another package
  - KT-30583 Kotlin light elements should be isEquivalentTo to it's origins
  - KT-30688 Memory leak in the PerModulePackageCacheService.onTooComplexChange method
  - KT-30949 Optimize Imports removes used import alias
  - KT-30957 Kotlin UAST: USimpleNameReferenceExpression in "imports" for class' member resolves incorrectly to class, not to the member
  - KT-31090 java.lang.NoSuchMethodError: org.jetbrains.kotlin.idea.
    UtilsKt.addModuleDependencyIfNeeded on import of a multiplatform project with Android target (191 IDEA + master)
  - KT-31092 Don't check all selected files in CheckComponentsUsageSearchAction.update()
  - KT-31319 False positive "Unused import" for provideDelegate extension
  - KT-31332 Kotlin AnnotatedElementsSearch does't support Kotlin object
  - KT-31129 Call only Kotlin-specific reference contributors for getting Kotlin references from PSI
  - KT-31693 Project with no Kotlin: JPS rebuild fails with NCDFE for GradleSettingsService at KotlinMPPGradleProjectTaskRunner.canRun()
  - KT-31466 SOE in Java highlighting when a Kotlin ultra-light method is invoked
ReleaseNotesUrl: https://github.com/JetBrains/kotlin/releases/tag/v1.3.40
ManifestType: defaultLocale
ManifestVersion: 1.4.0
