# Created with Komac v1.9.1
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.4.0.schema.json

PackageIdentifier: JetBrains.Kotlin.Compiler
PackageVersion: 1.3.60-eap-23
PackageLocale: en-US
Publisher: JetBrains s.r.o.
PublisherUrl: https://jetbrains.com/opensource
Author: JetBrains s.r.o.
PackageName: Kotlin Compiler
PackageUrl: https://github.com/JetBrains/kotlin
License: Freeware
Copyright: Copyright (C) JetBrains s.r.o.
ShortDescription: The Kotlin Programming Language.
Moniker: kotlin-compiler
ReleaseNotes: |-
  Android
  - KT-27170 Android lint tasks fails in Gradle with MPP dependency
  New Features
  - KT-31230 Refine rules for allowed Array-based class literals on different platforms: allow Array::class everywhere, disallow Array<...>::class on non-JVM
  - KT-33413 Allow 'break' and 'continue' in 'when' statement to point to innermost surrounding loop
  Performance Improvements
  - KT-14513 Suboptimal compilation of lazy delegated properties with inline getValue
  - KT-28507 Extra InlineMarker.mark invocation in generated suspending function bytecode
  - KT-29229 Intrinsify 'in' operator for unsigned integer ranges
  Fixes
  - KT-7354 Confusing error message when trying to access package local java class
  - KT-9310 Don't make interface and DefaultImpls methods synchronized
  - KT-11430 Improve diagnostics for dangling lambdas
  - KT-16526 Provide better error explanation when one tries to delegate var to read-only delegate
  - KT-20258 Improve annotation rendering in diagnostic messages
  - KT-22275 Unify exceptions from null checks
  - KT-27503 Private functions uses from inside of suspendCoroutine go though accessor
  - KT-28938 Coroutines tail-call optimization does not work for generic returns that had instantiated to Unit
  - KT-29385 "AnalyzerException: Expected an object reference, but found I" for EXACTLY_ONCE non-inline contract with captured class constructor parameter
  - KT-29510 "RuntimeException: Trying to access skipped parameter" with EXACTLY_ONCE contract and nested call of crossinline lambda
  - KT-29614 java.lang.VerifyError: Bad type on operand stack  - in inlining,  crossinline in constructor with EXACTLY_ONCE contract
  - KT-30275 Get rid of session in FirElement
  - KT-30744 Invoking Interface Static Method from Extension method generates incorrect jvm bytecode
  - KT-30785 Equality comparison of inline classes results in boxing
  - KT-32217 FIR: support delegated properties resolve
  - KT-32433 NI: UninferredParameterTypeConstructor with class property
  - KT-32587 NI: Type mismatch "String" vs "String" in IDE on generic .invoke on generic delegated property
  - KT-32689 Shuffled line numbers in suspend functions with elvis operator
  - KT-32851 Constraint for callable reference argument doesn't take into account use-site variance
  - KT-32864 The line number of assertFailsWith in suspending function is lost
  - KT-33125 NI: "Rewrite at slice INDEXED_LVALUE_SET" with Mutable Map set index operator inside "@kotlin.
    BuilderInference" block
  - KT-33414 'java.lang.AssertionError: int type expected, but null was found in basic frames' in kotlin-io while building library train
  - KT-33421 Please make NOTHING_TO_INLINE warning shorter
  - KT-33504 EA-209823 - ISE: ProjectResolutionFacade$computeModuleResolverProvider$resolverForProject$$.invoke: Can't find builtIns by key CacheKeyBySdk
  - KT-33572 Scripting import with implicit receiver doesn't work
  - KT-33821 Compiler should not rely on the default locale when generating boxing for suspend functions
  Docs & Examples
  - KT-26212 Update docs to explicitly mention that union is opposite of intersect
  - KT-34086 Website, stdlib api docs: unresolved link jvm/stdlib/kotlin.text/-charsets/Charset
  Fixes
  - KT-8581 'Move Statement' doesn't work for statement finished by semicolon
  - KT-9204 Shorten references and some other IDE features have problem when package name clash with class name
  - KT-17993 Annotations are colored the same as language keywords
  - KT-21037 LazyLightClassMemberMatchingError$WrongMatch “Matched :BAR MemberIndex(index=0) to :BAR MemberIndex(index=1) in KtLightClassImpl” after duplicating values inside enum class
  - KT-23305 We should be able to see platform-specific errors in common module
  - KT-23461 Move statement up/down attaches a comment block to the function being moved
  - KT-26960 IDE doesn't report actual without expect placed into a custom platform-agnostic source set
  - KT-27243 LazyLightClassMemberMatchingError when overriding hidden member
  - KT-28404 Gradle configuration page is missing from a New Project Wizard creation flow for multiplatform templates
  - KT-30824 No highlighting of declaration/usage of function with functional-type (lambda) parameter on its usage
  - KT-31117 AssertionError at CompletionBindingContextProvider._getBindingContext when typing any character within string with injected Kotlin
  - KT-31139 "Override members" on enum inserts semicolon before enum body
  - KT-31810 Paste inside indented .trimIndent() raw string doesn't respect indentation
  - KT-32401 Exceptions while running IDEA in headless mode for building searchable options
  - KT-32543 UltraLight support for Kotlin collections.
  - KT-32544 Support UltraLight classes for local/anonymous/enum classes
  - KT-32799 2019.2 RC (192.5728.74) Kotlin plugin exception during build searchable options (Directory index may not be queried for default project)
  - KT-33008 IDEA does not report in MPP: Upper bound of a type parameter cannot be an array
  - KT-33316 Kotlin Facet: make sure the order of allPlatforms value is fixed
  - KT-33561 LazyLightClassMemberMatchingError when overloading synthetic member
  - KT-33584 Make kotlin light classes return no-arg constructor when no-arg (or jpa) compiler plugin is enabled
  - KT-33775 please remove usages of org.intellij.plugins.intelliLang.inject.
    InjectorUtils#putInjectedFileUserData(com.intellij.lang.injection.
    MultiHostRegistrar, com.intellij.openapi.util.
    Key<T>, T) deprecated eons ago
  - KT-33813 Poor formatting of 'Selected target platforms' and 'Depends on' in facet settings
  - KT-33937 delay() completion from kotlinx.coroutines causes happening of root package in code
  - KT-33973 Kotlin objects could abuse idea plugin functionality
  - KT-34000 Import quickfix does not work for extension methods from objects
  - KT-34070 "No target platforms selected" message for commonTest facet at mobile shared library project
  - KT-34191 Since-build .. until-build compatibility ranges are the same for 192 and 193 IDE plugins
  IDE. Completion
  - KT-10340 Import completion unable to shorten fq-names when there is a conflict between package name and local identifier
  - KT-17689 Code completion for enum typealias doesn't show members
  - KT-28998 Slow completion for build.gradle.kts (Kotlin Gradle DSL script)
  - KT-30996 DSL extension methods which are not applicable are offered for completion
  - KT-31902 Fully qualified name is used for delay instead of  import and just method name
  - KT-33903 Duplicating completion for imported extensions from companion objects
  IDE. Debugger
  - KT-10984 Disallow placing line breakpoints without executable code (changed)
  - KT-22116 Support function breakpoints
  - KT-24408 @InlineOnly: Misleading status for breakpoints in inline functions
  - KT-27645 Debugger breakpoints do not work in suspend function executed in SpringBoot controller (MVC and WebFlux)
  - KT-32687 Disallow breakpoints for @InlineOnly function bodies
  - KT-32813 Exception on invoking "Smart Step Into"
  - KT-32830 NPE on changing class property in Evaluate Expression window
  - KT-33064 “Read access is allowed from event dispatch thread or inside read-action only” from KotlinLineBreakpointType.createLineSourcePosition on adding new line before the current one while stopping on breakpoint
  IDE. Folding
  - KT-6314 Folding of "when" construction
  IDE. Gradle
  - KT-33038 Package prefix is not imported in non-MPP project
  - KT-33987 Serialization exception during importing Kotlin project in IDEA 192
  IDE. Gradle. Script
  - KT-31766 Gradle Kotlin DSL new project template: use type-safe model accessors
  New Features
  - KT-26431 Quickfix to remove redundant label
  - KT-28049 Suggest import quickfix for operator extension functions
  - KT-29622 "Move to separate file" intention should also work for sealed class
  - KT-33178 Use a new compiler flag -Xinline-classes during enabling the feature via IDEA intention
  - KT-33586 "Constructors are not allowed for objects" diagnostic needs quickfix to change object to class
  Fixes
  - KT-12291 Override/Implement Members: better member positioning inside the class
  - KT-14899 Quickfix "Create member function" inserts too many semicolons when applied to Enum
  - KT-15700 "Convert lambda to reference" does not work with backtick-escaped references
  - KT-18772 "Introduce subject to when": don't choose an object or a constant as the subject
  - KT-21172 Join declaration and assignment should place the result at the assignment, not at declaration
  - KT-25697 Replace with dot call quickfix breaks formatting
  - KT-26635 An empty line is added after actual modifier on "Create actual annotation class..." quick fix applied to annotation if it is annotated with comment
  - KT-27270 "Add jar to classpath" quick fix modifies build.gradle of MPP project in a way that fails to be imported
  - KT-28471 "Add initializer" quickfix initializes non-null variable with null
  - KT-28538 create expected ... quick fix illegally creates expect member with a usage of a platform-specific type
  - KT-28549 Create actual/expect quick fix for class/object doesn't add import for an inherited member
  - KT-28620 Create expect/actual ... quick fix could save @Test annotation on generation
  - KT-28740 AE “2 declarations in var bar: [ERROR : No type, no body]” after applying “Create actual class” quick fix for class with property which has not specified type
  - KT-28947 Backing field has created after applying “Create expected class in common module...” intention
  - KT-30136 False negative "Redundant explicit 'this'" with local variable
  - KT-30794 Quickfix for unchecked cast produces invalid code
  - KT-31133 Liveness analysis on enum does not take into account calls to 'values'
  - KT-31433 Incorrect "Create expected class..." for class with supertype
  - KT-31475 "Create expect..." should delete 'override' modifier
  - KT-31587 Redundant private modifier before primary constructor after create actual class
  - KT-31921 "Create expected ..."/"Create actual..." quick fix: val and vararg modifiers are misordered in the generated expect/actual declaration
  - KT-31999 "Variable declaration could be moved into when" inspection suggests to inline expression containing return (throw) statement
ReleaseNotesUrl: https://github.com/JetBrains/kotlin/releases/tag/v1.3.60-eap-23
ManifestType: defaultLocale
ManifestVersion: 1.4.0
