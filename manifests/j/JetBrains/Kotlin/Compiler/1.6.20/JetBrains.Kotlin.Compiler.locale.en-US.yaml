# Created with Komac v1.9.1
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.4.0.schema.json

PackageIdentifier: JetBrains.Kotlin.Compiler
PackageVersion: 1.6.20
PackageLocale: en-US
Publisher: JetBrains s.r.o.
PublisherUrl: https://jetbrains.com/opensource
Author: JetBrains s.r.o.
PackageName: Kotlin Compiler
PackageUrl: https://github.com/JetBrains/kotlin
License: Freeware
Copyright: Copyright (C) JetBrains s.r.o.
ShortDescription: The Kotlin Programming Language.
Moniker: kotlin-compiler
ReleaseNotes: |-
  New Features
  - KT-48217 Add an annotation JvmDefaultWithCompatibility to allow generating DefaultImpls classes if -Xjvm-default=all option is used
  - KT-49929 [FIR] Support programmatic creation of annotation class instances
  - KT-49276 Warn about potential overload resolution change if Range/Progression starts implementing Collection
  - KT-47902 Do not propagate method deprecation through overrides
  - KT-49857 Require Xcode 13 for building Kotlin/Native compiler
  - KT-47701 Support instantiation of annotation classes on Native
  - KT-46085 Support experimental parallel compilation of a single module in the JVM backend
  - KT-46603 Generate SAM-conversions to Java interfaces extending 'java.io.
    Serializable' as serializable using java.lang.invoke.
    LambdaMetafactory
  Performance Improvements
  - KT-50156 HMPP: Slow frontend/ide performance in OKIO (ExpectActualDeclarationChecker)
  - KT-50073 Performance regression in adapted function references
  - KT-50076 Performance regression in super call to an interface member in $DefaultImpls
  - KT-50080 Performance regression in string template with generic property with primitive upper bound
  - KT-50084 Performance regression in concatenation with 'String?'
  - KT-50078 Performance regression in for-in-array loop
  - KT-50039 Performance regression in inner class constructor call with default parameters
  - KT-48784 An anonymous class has fields for variables that are only used in the constructor
  - KT-42010 Generate IINC instruction for postfix increment in JVM_IR
  - KT-48433 JVM_IR don't generate null check on 'this$0' parameter of inner class constructor
  - KT-48435 JVM_IR ConstForLoopBenchmark performance regression
  - KT-48507 JVM_IR ForLoopBenchmark regressions
  - KT-48640 Performance regression in 'longDownToLoop' benchmarks
  - KT-29822 Generate specialized bytecode for loops withIndex over unsigned arrays
  - KT-48669 Generate optimizable counter loop for loops over indices of unsigned arrays
  - KT-49444 Possible performance degradation with UInt downTo loop
  - KT-48944 Possible performance regression with comparison of local KFunctions
  - KT-17111 Eliminate redundant store/load instructions when the value stored is simple
  - KT-36837 Generate more compact code for for-in-range loop in JVM_IR
  - KT-48947 JVM / IR Possible performance regression with string templates
  - KT-48931 JVM / IR: Performance degradation with string concatenation
  - KT-36654 Generate more compact bytecode for safe call in JVM_IR
  Fixes
  - KT-24643 Prohibit using a type parameter declared for an extension property inside delegate
  - KT-51747 Make KtCallableDeclaration.getContextReceivers default to preserve compatibility
  - KT-49658 NI: False negative TYPE_MISMATCH on nullable type with when
  - KT-43493 NI: @BuilderInference prevents compilation error of "Operator '==' cannot be applied to 'Long' and 'Int'"
  - KT-51649 Kotlin/Native: reduce binary size of watchosArm32 and iosArm32 targets by limiting inlining of runtime functions
  - KT-48626 JVM IR: incorrect behavior for captured for-loop parameter since 1.6.20-dev-723
  - KT-51036 JVM / IR: "NullPointerException: Parameter specified as non-null is null"  with synchronized and companion object
  - KT-51471 Native: incorrect debug information when inheriting suspend fun invoke implementation
  - KT-51352 "ClassCastException: class ScopeCoroutine cannot be cast to class Iterable" caused by coroutines and context receivers
  - KT-51271 "ArrayIndexOutOfBoundsException: Index 3 out of bounds for length 3" with inlining of context function
  - KT-47084 JVM IR: "AssertionError: inconsistent parent function for CLASS LAMBDA_IMPL" with tailrec function default parameter nested inline lambda
  - KT-30616 Script: "Don't know how to generate outer expression" for top-level variable reference from static context (companion object, enum)
  - KT-50520 "NPE: containingDeclaration.acâ€¦lDeclarationType.
    REGULAR) must not be null" with implicit type on self-referencing lambda in a builder
  - KT-51353 IncompatibleClassChangeError: Expected non-static field com.soywiz.korim.color.
    Colors.
    BLACK
  - KT-48945 JVM IR: special bridge for get is not generated in a Map subclass
  - KT-48499 Interface call with an inline/value parameter generates AbstractMethodError after rebuilding the module, but NOT the file.
  - KT-49998 JVM: missing default value for annotation parameter of an unsigned type
  - KT-49793 JVM: IncompatibleClassChangeError: Expected non-static field  when property delegation uses receiver of another delegated property
  - KT-51302 Kotlin/Native 1.6.20-M1 compiler fails because of assertion in NativeAnnotationImplementationTransformer
  - KT-51148 "AssertionError: At this stage there should be no remaining variables with proper constraints" caused by two type parameters
  - KT-50970 Kotlin/Native: use arm instruction set instead of thumb-2 for iosArm32 and watchosArm32 targets
  - KT-50843 Kotlin/Native: LLVM constant merge pass does not work for Kotlin constants
  - KT-51157 JVM / IR: "IndexOutOfBoundsException: Index: 1, Size: 1" caused by interface hierarchy and UInt method parameter
  - KT-50498 Exception after analysing an erroneous lambda
  - KT-50258 equals() returns false on the same enum instances if we check it for the second time in when
  - KT-51062 Progressions resolve changing warning isn't reported for Java methods
  - KT-48544 JVM / IR: "UnsupportedOperationException: Unknown structure of ADAPTER_FOR_CALLABLE_REFERENCE" with callable reference ::arrayOf
  - KT-50978 [Native] Error while building static cache: NoSuchElementException at IrTypeInlineClassesSupport.getInlinedClassUnderlyingType(InlineClasses.kt:341)
  - KT-50977 [Native] Error while building static cache: IllegalStateException: Class CLASS ENUM_ENTRY is not found at KonanIrlinkerKt.findClass(KonanIrlinker.kt:229)
  - KT-50976 [Native] Error while building static cache: IllegalStateException: No descriptor found at DescriptorByIdSignatureFinder.findDescriptorForPublicSignature(DescriptorByIdSignatureFinder.kt:157)
  - KT-51040 Type inference fails on 1.6: "Cannot use 'CapturedType(*)' as reified type parameter" with EnumSet and elvis operator
  - KT-51080 Line number in mapping for the first instruction is lost
  - KT-49526 JVM IR: Function reference with non-denotable intersection type argument is not inlined and is incorrectly approximated
  - KT-50399 Error: unexpected variance in super type argument: out @0
  - KT-50649 JVM IR: ClassCastException when returning Result as generic type
  - KT-50617 JVM IR: java.lang.IndexOutOfBoundsException "Empty list doesn't contain element at index 0" when class and interface have the same name and extension function is used
  - KT-50856 SAM conversion generates invalid bytecode for generics
  - KT-45693 False negative INCOMPATIBLE_TYPES with when with generic subject
  - KT-49903 JVM IR: InlineOnly optimization leads to behavior change for println with mutating System.out
  - KT-51022 Fix error messages for resolution ambiguity with stub types
  - KT-51035 PSI2IR: "org.jetbrains.kotlin.psi2ir.generators.ErrorExpressionException: null: KtCallExpression:" caused by recursive call of java function
  - KT-50797 Implement fix for false negative UPPER_BOUND_VIOLATED with generic typealias using not all type parameters as arguments for underlying type
  - KT-50878 Usage of contextual declarations from third-party library is allowed without -Xcontext-receivers
  - KT-49829 Wrong "cast can never succeed" diagnostic with builder inference
  - KT-49828 Improve builder inference diagnostics with overload resolution ambiguity
  - KT-50989 CCE cause by EmptySubstitutor in ResolutionWithStubTypesChecker
  - KT-49729 Implement deprecation warning for private constructors of sealed classes
  - KT-49349 Implement deprecation for invalid if as expression in rhs of elvis
  - KT-46285 [SEALED_SUPERTYPE_IN_LOCAL_CLASS] Error message isn't adopted to local objects and sealed interfaces
  - KT-49002 Allow OptIn marker on override if base class has the same marker
  - KT-48899 Report warnings on overrides with wrong types nullability
  - KT-49461 Implement prohibitation of access to members of companion of enum class from initializers of entries of this enum
  - KT-49754 Kotlin/JS: @JsExport on enum class reports NON_EXPORTABLE_TYPE warning
  - KT-49598 Misleading error message "Using @JvmRecord is only allowed with -jvm-target 15 and -Xjvm-enable-preview flag enabled"
  - KT-44133 Inline classes: class literal in annotation arguments uses underlying type
  - KT-47703 ClassCastException: Programmatically created annotation can't hold Array<KClass<*>>
  - KT-47549 JVM / IR: Null argument in ExpressionCodegen for parameter VALUE_PARAMETER CONTINUATION_CLASS caused by suspend function inside "fun interface" in another file
  - KT-50120 HMPP: False positive [NO_VALUE_FOR_PARAMETER] for expect function usages
  - KT-49864 JVM IR: NoSuchMethodError calling default interface method with inline class return type in -Xjvm-default=all mode
  - KT-49812 JVM / IR: "java.lang.VerifyError: Bad return type" when using Result type attribute + extension function with same name
  - KT-49936 Extension property in a data class with the same name as the constructor parameter leads to incorrect component function being resolved and generated
  - KT-48181 "ISE: Null argument in ExpressionCodegen for parameter VALUE_PARAMETER" on creating instance of kotlin.
    Metadata
  - KT-50215 VerifyError caused by missing cast after is check in when
  - KT-49977 "Parameter specified as non-null is null" when inline class implements interface method with default parameters
  - KT-50385 DUPLICATE_LABEL_IN_WHEN is reported on incorrect branches
  - KT-49092 JVM: ArrayIndexOutOfBoundsException on compiling call with if expression and TODO() arguments
  - KT-48987 JVM / IR: Smartcast, which never succeed, crashes the compiler
  - KT-50277 Invalid bytecode generated for inline lambda in suspend function
  - KT-50219 FIR DFA/CFA: no smart cast after null check and assignment
  - KT-44561 FIR DFA: extract non-null info from comparison against variable with initial constant value
ReleaseNotesUrl: https://github.com/JetBrains/kotlin/releases/tag/v1.6.20
ManifestType: defaultLocale
ManifestVersion: 1.4.0
