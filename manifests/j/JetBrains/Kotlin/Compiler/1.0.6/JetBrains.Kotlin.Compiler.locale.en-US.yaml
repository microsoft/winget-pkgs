# Created with Komac v1.9.1
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.4.0.schema.json

PackageIdentifier: JetBrains.Kotlin.Compiler
PackageVersion: 1.0.6
PackageLocale: en-US
Publisher: JetBrains s.r.o.
PublisherUrl: https://jetbrains.com/opensource
Author: JetBrains s.r.o.
PackageName: Kotlin Compiler
PackageUrl: https://github.com/JetBrains/kotlin
License: Freeware
Copyright: Copyright (C) JetBrains s.r.o.
ShortDescription: The Kotlin Programming Language.
Moniker: kotlin-compiler
ReleaseNotes: |-
  Compiler
  - KT-12224 Add a diagnostic message for @JvmOverloads on interface methods
  - KT-14186 Vararg parameters were generated as simple array parameters for Java
  - KT-12664 Inner class was not found when a sub-directory with the same name is present in an outer class directory
  - KT-14408 No-arg constructor should always be generated if all primary constuctor arguments have a default value
  - KT-14469 StackOverflowError at EffectiveVisibilityKt.forVisibility
  - KT-14581 NullPointerException at StackTransformationUtils when inlining extension function to a do-while loop condition
  - KT-14678 Internal error with @JvmOverloads on constructor of inner class
  - KT-14751 Class can't be resolved (related to annotation on types)
  - KT-14774 Incorrect inner class modifier was generated for sealed inner classes
  Stdlib
  - KT-14883 Performance tune: Use byte array buffer directly to read the entire contents of a file
  JS
  - KT-12976 Print human-friendly error message on wrong modules order
  - KT-13792 Inner class of local class did not capture the enclosing class properly
  - KT-13912 NullPointerException at JsSourceGenerationVisitor when a Lambda with empty if block passed to inline function
  - KT-14535 Fix broken modification of captured variables defined by a destructuring declaration
  - KT-14752 Fix exception while typing @JsName annotation in editor
  - Update JavaScript platform declarations (DOM, Events, etc) to latest spec
  - Types that exist in runtime are now generated as abstract classes while non-existing types are now interfaces
  IDE
  - KT-14215 Show members of anonymous objects in File Structure window
  - KT-14217 Support visibility filters in File Structure window
  - Implement Kotlin facet
  - KT-13811 Expose JVM target setting in IntelliJ IDEA plugin compiler configuration UI
  Issues fixed
  - KT-6535 "Go to Symbol" did not include Enum constants
  - KT-10700 Run tests via Gradle does not work for Kotlin sources
  - KT-12385 Closing quote was not automatically inserted when typing Char literal
  - KT-12445 Fix IllegalStateException in the class chooser if Kotlin script file exists
  - KT-13279 Deleting < in function call expression should delete matching >
  - KT-13795 Escaped chars in char literals was not highlighted
  - KT-14411 Code folding did not work in lambdas after some declatation
  - KT-14585 ConvertJavaCopyPasteProcessor showed a dialog under write action
  - KT-14741 Default JVM target was inferred to 1.8 for module with dependency on JDK 1.7
  - KT-13354 Fix unstable resolve of value parameter types in IDE tests
  - KT-13400 KDoc: Fully-qualified names were resolved incorrectly
  - KT-13197 KDoc: Code completion should suggest relevant identifiers for reference-value tags
  - KT-10665 KDoc: Do not show full KDoc popup on ctrl-hovering over declarations
  - KT-13038 Quick doc: HTML entities in code blocks should be escaped
  - KT-13389 Quick Doc: Hyperlinks to properties and functions did nothing
  - KT-7739 Quick Doc: Type names in should be navigable
  - KT-7995 Quick Doc: ReplaceWith value should be shown for deprecated elements
  - KT-13197ã€€Quick Doc: Markdown indented code blocks were not recognized
  - KT-11032 Quick Doc: @sample was ignored
  - KT-13699 Quick documentation should show supertype docs for overridden Java methods
  - KT-14804 Avoid loading ast for decompiled files
  - KT-5897 Pressing Enter after binary operations places the caret at the wrong indentation
  - KT-10828 Support empty Unit function formatting on one line
  - KT-15123 Do indent adjustment on the fly only for the first element in the line
  - KT-15128 Do not assign type parameters from original proto if type is substituted with Any
  Inspections, Intentions and Quickfixes
  - KT-12095 Implement "Join Declaration and Assignment" intention
  - KT-12701 Add a quickfix for @JvmOverloads on functions without default parameters, fix corresponding inspection range
  - KT-14326 Implement Intention + Inspection to remove empty secondary constructor body
  - KT-14521 Add Inspection to remove empty primary constructor
  - KT-14569 Convert Property to Function Intention: Search occurrences using progress dialog
  - KT-14501 Create from Usage: Support array access expressions/binary expressions with type mismatch errors
  - KT-14500 Create from Usage: Suggest functional type based on the call with lambda argument and unresolved invoke()
  - KT-13259 "Redundant if statement" inspection: report also assignments (as done for Java)
  - KT-13393 Implement intention to convert function reference to lambda
  - KT-12100 Add "Convert try-finally to use" intention
  - KT-14459 Initialize with Constructor Parameter: Fix IDE freeze on properties in generic class
  - KT-14044 Fix exception on deleting unused declaration in IDEA 2016.3
  - KT-14019 Create from Usage: Support generation of abstract members for superclasses
  - KT-14246 Intentions: Convert function type parameter to receiver
  - KT-14246 Intentions: Convert function type receiver to parameter
  - KT-14729 Implement "Add names to call arguments" intention
  - KT-11760 Create from Usage: Support adding type parameters to the referenced type
  Issues fixed
  - KT-14396 "Remove redundant .let call" was not proposed for binary operations
  - KT-14552 ChangeParameterTypeFix held a strong reference to PSI
  - KT-14745 Fix KotlinNullPointerException in ConvertPrimaryConstructorToSecondary
  - KT-14791 Fix incorrect "remove redundant .let" inspection for value with smart cast
  - KT-14733 Fix incorrect intention to add out/in variance with inner classes
  - KT-13777 Simplify condition intention should work in case booleanCond == true
  - KT-14890 Inspection to remove curly braces from class definition should not trigger for nested classes followed by a secondary constructor
  - KT-12633 Intention "Specify type explicitly" should offer all bounds for platform types
  - KT-14100 Auto-import should suggest Enum constants
  - KT-15087 Don't suggest something == true simplification for flexible types
  - KT-14982 "Convert reference to lambda" worked incorrectly with static methods
  - KT-14985 "Convert reference to lambda" worked incorrectly with apply
  - KT-15028 Fix ClassCastException: KtParameter cannot be cast to KtFunction
  - KT-14063 No "Change return type of enclosing function" for mismatched types
  - KT-15030 "Remove redundant calls of conversion methods": Fix false positive for toList()
  - KT-15142 "Remove redundant calls of conversion methods": Bogus warning for Any?.toString
  - KT-13443 Do not try to calculate icon for invalid PSI elements (fix PsiInvalidElementAccessException)
  - KT-15074 Fix occasional freezes on startup (remove unnecessary cyclic dependency between KtStubElementTypes and KtNodeTypes)
  - KT-14732 Fix Slow typing, copy-pasting, highlighting in Kotlin files due to auto-import suggestion calculation
  - KT-15227 "Replace if with elvis" silently changed semantics
  Issues fixed
  - KT-14583 Change Signature: Use new signature when looking for redeclaration conflicts
  - KT-14854 Extract Interface: Fix NPE on dialog opening
  - KT-14814 Rename: Fix renaming of .kts file to .kt and vice versa
  - KT-14361 Rename: Do not report redeclaration conflict for private top-level declarations located in different files
  - KT-14596 Safe Delete: Fix exception on deleting Java class used in Kotlin import directive(s)
  - KT-14325 Rename: Fix exceptions on moving file with facade class to another package
  - KT-14197 Move: Fix callable reference processing when moving to another package
  - KT-13781 Extract Function: Do not wrap companion member references inside of the with call
  J2K
  - KT-14604 Floating-point literals: "dot" + "exponent" char sequence was processed incorrectly
  - KT-14885 Conversion-on-paste should not add duplicated import statements
  Debugger
  - KT-13485 Fix: Smart Step Into can't enter function in object
  - KT-14374 Fix bad step-over behaviour for inline calls in Android Studio
  - KT-12612 Breakpoint inside cross-inlined lambda did never hit
  - KT-11521 KT-12734 KT-12470 Fix breakpoints in function literals in inline calls
  - KT-14822 Can't call member extension in an object in Evaluate Expression
  - KT-14916 Navigation to inline functions doesn't work for thread dump captured using "Get thread dump" button in debugger
  - KT-14615 Now able to set breakpoint to lambda in return statement
  - KT-14602 Fix slow editing while debugging (run full resolve with write action priority)
  - KT-14892 Fix UI hangs on stepping in Kotlin code
  Android support
  - KT-12880 Implement "Create XML resources" quickfix
  - KT-12020 Implement "Suppress" intention
  - KT-14439 Lint: Filter only R class from the current module in the import quickfix
  - KT-13243 Lint: Exception type in a try..catch block is checked now
  - KT-14826 Lint: Fix exception from destructuring declarations
  - KT-14047 Lint: Fix overloaded method detection in the API detector
  - KT-14470 Lint: Fix false positives in FragmentManager.beginTransaction() inside SAM constructors
  - KT-14610 Lint: Super call detector showed that super is not called when it is
  - KT-14610 Lint: Fix "Unexpected container" exception for local class instance creation
  - KT-15002 Lint: "API Level" inspection did not recognize throw expressions
  - KT-12024 Lint: "Calling new methods on older versions" did not take control flow into account
  - KT-14737 Lint: Fix false positives with some if structures
  - KT-14825 Lint: "Calling new methods on older versions" did not report call on receiver in extension function
  - KT-12023 Lint: Cast should trigger minSdk error
  - KT-15018 Lint: Fix PluginException at IntellijLintUtils.getLocation()
  - KT-14067 Android Extensions: Remove obsolete JPS plugin
  - KT-12741 Android Extensions: Enable IDE integration only if it is enabled in the build.gradle file (apply plugin: 'kotlin-android-extensions')
  - KT-14308 Fix hangs in IDEA/Android Studio on unresolved references (Data Binding)
  Gradle
  - KT-14724 main() was not called
  - KT-15120 Gradle JS test compile task doesn't pick up production code
  - KT-15217 Fix compatibility with Android Gradle plugin 2.3
  Kapt
  - KT-14937 Use javac annotation processing implementation, generate AST stubs for Kotlin classes (this replaces kapt2 implementation)
ReleaseNotesUrl: https://github.com/JetBrains/kotlin/releases/tag/v1.0.6
ManifestType: defaultLocale
ManifestVersion: 1.4.0
