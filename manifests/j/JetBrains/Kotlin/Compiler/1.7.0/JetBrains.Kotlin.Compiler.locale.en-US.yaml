# Created with Komac v1.9.1
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.4.0.schema.json

PackageIdentifier: JetBrains.Kotlin.Compiler
PackageVersion: 1.7.0
PackageLocale: en-US
Publisher: JetBrains s.r.o.
PublisherUrl: https://jetbrains.com/opensource
Author: JetBrains s.r.o.
PackageName: Kotlin Compiler
PackageUrl: https://github.com/JetBrains/kotlin
License: Freeware
Copyright: Copyright (C) JetBrains s.r.o.
ShortDescription: The Kotlin Programming Language.
Moniker: kotlin-compiler
ReleaseNotes: |-
  Analysis API. FIR
  - KT-50864 Analysis API: ISE: "KtCallElement should always resolve to a KtCallInfo" is thrown on call resolution inside plusAssign target
  - KT-50252 Analysis API: Implement FirModuleResolveStates for libraries
  - KT-50862 Analsysis API: do not create use site subsitution override symbols
  Analysis API. FIR Low Level API
  - KT-50729 Type bound is not fully resolved
  - KT-50728 Lazy resolve of extension function from 'kotlin' package breaks over unresolved type
  - KT-50271 Analysis API: get rid of using FirRefWithValidityCheck
  Backend. Native. Debug
  - KT-50558 K/N Debugger.
    Error is not displayed in variables view for catch block
  New Features
  - KT-26245 Add ability to specify generic type parameters as not-null
  - KT-45165 Remove JVM target version 1.6
  - KT-27435 Allow implementation by delegation to inlined value of inline class
  - KT-47939 Support method references to functional interface constructors
  - KT-50775 Support IR partial linkage in Kotlin/Native (disabled by default)
  - KT-51737 Kotlin/Native: Remove unnecessary safepoints on watchosArm32 and iosArm32 targets
  - KT-44249 NEW_INFERENCE_NO_INFORMATION_FOR_PARAMETER with type usage in higher order function
  Performance Improvements
  - KT-48233 Switching to JVM IR backend increases compilation time by more than 15%
  - KT-51699 Kotlin/Native: runtime has no LTO in debug binaries
  - KT-34466 Use optimized switch over enum only when all entries are constant enum entry expressions
  - KT-50861 FIR: Combination of array set convention and plusAssign works exponentially
  - KT-47171 For loop doesn't avoid boxing with value class iterators (JVM)
  - KT-29199 'next' calls for iterators of merged primitive progressive values are not specialized
  - KT-50585 JVM IR: Array constructor loop should use IINC
  - KT-22429 Optimize 'for' loop code generation for reversed arrays
  - KT-50074 Performance regression in String-based 'when' with single equality clause
  - KT-22334 Compiler backend could generate smaller code for loops using range such as integer..array.size -1
  - KT-35272 Unnecessary null check on unsafe cast after not-null assertion operator
  - KT-27427 Optimize nullable check introduced with 'as' cast
  Fixes
  - KT-46762 Finalize support for jspecify
  - KT-51499 @file:OptIn doesn't cover override methods
  - KT-52037 FIR: add error in 1.7.0 branch if run with non-compatible plugins
  - KT-46756 Release the K2/JVM compiler in Alpha
  - KT-49715 IR: "IllegalStateException: Function has no body: FUN name:toString" during IR lowering with shadowed extension inside interface
  - KT-45508 False negative ABSTRACT_CLASS_MEMBER_NOT_IMPLEMENTED on a fake override with an abstract super class member
  - KT-28078 Report error "Public property exposes its private type" for primary constructor properties instead of warning
  - KT-49017 Forbid usages of super or super<Some> if in fact it accesses an abstract member
  - KT-38078 Prohibit calling methods from Any with "super" qualifier once they are overridden as abstract in superclass
  - KT-52363 Evaluate impact of qualified this behavior change warnings
  - KT-52561 JVM: Coroutine state machine loses value after a check-induced smart cast
  - KT-52311 java.lang.VerifyError: Bad type on operand stack
  - KT-41124 Inconsistency of exceptions at init block for an enum entry with and without a qualifier name
  - KT-46860 Make safe calls always nullable
  - KT-52503 New green code appeared at the callable reference resolution
  - KT-51925 Native: "IllegalStateException: Symbol for kotlinx.cinterop/CStructVar|null[0] is unbound" caused by inline function
  - KT-49317 "IllegalStateException: Parent of this declaration is not a class: FUN LOCAL_FUNCTION_FOR_LAMBDA" with parameter of suspend type with the default parameter
  - KT-51844 New errors in overload resolution involving vararg extension methods
  - KT-52006 "java.lang.Throwable: Unbalanced tree Exception" on indexing kotlin project
  - KT-51223 Report warning about conflicting inherited members from deserialized dependencies
  - KT-51439 FE 1.0: implement type variance conflict deprecation on qualifier type arguments
  - KT-51433 FE 1.0: implement warnings about label resolve changes
  - KT-51317 Regression in resolution of lambdas where expected type has an extension receiver parameter
  - KT-45935 JVM IR: Add not-null assertion for explicit definitely not-null parameters
  - KT-51818 "ClassCastException: class CoroutineSingletons cannot be cast to class" with suspendCoroutineUninterceptedOrReturn and coroutines
  - KT-51718 JVM / IR: "VerifyError: Bad type on operand stack" caused by nullable variable inside suspend function
  - KT-51927 Native: The symbol of unexpected type encountered during IR deserialization error when multiple libraries have non-conflicting declarations with the same name
  - KT-52394 JVM: Missing annotation on method with value class return type when a subclass is present in the same file in Kotlin 1.7.0-Beta
  - KT-51640 FIR: remove warning about "far from being production ready"
  - KT-45553 FIR: support hiding declaration from star import by as import
  - KT-52404 Prolong deprecation cycle for errors at contravariant usages of star projected argument from Java
  - KT-50734 TYPE_MISMATCH: NonNull parameter with a type of Nullable type argument causes compiler warning
  - KT-51235 JVM / IR: "AbstractMethodError: Receiver class does not define or inherit an implementation of the resolved method" when property with inline class type is overridden to return Nothing?
  - KT-48935 NI: Multiple generic parameter type constraints are not applied as expected when the parameter is of function type
  - KT-49661 NI: No TYPE_INFERENCE_UPPER_BOUND_VIOLATED when argument is inferred by return type
  - KT-50877 Inconsistent flexible type
  - KT-51988 "NPE: getContainingDeclarationâ€¦lDeclarationType.
    REGULAR) must not be null" when using @BuilderInference with multiple type arguments
  - KT-48890 Revert Opt-In restriction "Overriding methods can only have opt-in annotations that are present on their basic declarations."
  - KT-52035 FIR: add error in 1.7.0 branch if run on JS / Native configuration
  - KT-45461 NI: False negative TYPE_INFERENCE_UPPER_BOUND_VIOLATED when passing an argument to a function with generic constraints
  - KT-52146 JVM IR: "AssertionError: Primitive array expected" on vararg of SAM types with self-type and star projection
  - KT-50730 Implement error for a super class constructor call on a function interface in supertypes list
  - KT-52040 JVM: ClassFormatError Illegal method name "expectFailure$<init>__proxy-0"
  - KT-50845 Postpone rxjava errors reporting in the strict mode till 1.8 due to found broken cases
  - KT-51979 "AssertionError: No modifier list, but modifier has been found by the analyzer" exception on incorrect Java interface override
  - KT-51759 FIR DFA: false positive "Variable must be initialized"
  - KT-50378 Unresolved reference for method in Jsoup library in a kts script file
  - KT-34919 "Visibility is unknown yet" when named parameter in a function type used in a typealias implemented by an abstract class
  - KT-51893 Duplicated [OVERRIDE_DEPRECATION] on overridden properties
  - KT-41034 K2: Change evaluation semantics for combination of safe calls and convention operators
  - KT-51843 Functional interface constructor references are incorrectly allowed in 1.6.20 without any compiler flags
  - KT-51914 False positive RETURN_TYPE_MISMATCH in intellij ultimate
  - KT-51711 Compiler warning is displayed in case there is 'if' else branch used with elvis
  - KT-33517 Kotlin ScriptEngine does not respect async code when using bindings
  - KT-51850 FIR cannot resolve ambiguity with different SinceKotlin/DeprecatedSinceKotlin
  - KT-44705 Deprecate using non-exhaustive if's and when's in rhs of elvis
  - KT-44510 FIR DFA: smartcast after elvis with escaping lambda
  - KT-44879 FIR DFA: Track inc and dec operator calls in preliminary loop visitor
  - KT-51758 FIR: explicit API mode errors should not be reported for effectively internal / private entities
  - KT-51203 FIR: Inconsistent RETURN_TYPE_MISMATCH and TYPE_MISMATCH reporting on functions and properties
  - KT-51624 FIR: false-positive INAPPLICABLE_LATEINIT_MODIFIER for lateinit properties with unresolved types
  - KT-51204 FIR IC: Incremental compilation fails on nested crossinline
  - KT-51798 Fix ISE from IR backend when data class inherits equals/hashCode/toString with incompatible signature
  - KT-46187 FIR: OVERLOAD_RESOLUTION_AMBIGUITY on SAM-converted callable reference to List::plus
  - KT-51761 Incorrect NONE_APPLICABLE in expect class
  - KT-51756 FIR: false positive NO_VALUE_FOR_PARAMETER in expect class delegated constructor call
  - KT-49778 Support cast to DefinitelyNotNull type in Native
  - KT-51441 -Xpartial-linkage option specified in Gradle build script is not passed to Native linker
  - KT-34515 NI: "AssertionError: Base expression was not processed: POSTFIX_EXPRESSION" with double not-null assertion to brackets
  - KT-48546 PSI2IR: "org.jetbrains.kotlin.psi2ir.generators.ErrorExpressionException: null: KtCallExpression" with recursive property access in lazy block
  - KT-28109 "AssertionError: No setter call" for incrementing parenthesized result of indexed access convention operator
  - KT-46136 Unsubstituted return type inferred for a function returning anonymous object upcast to supertype
  - KT-51364 FIR: ambiguity due to String constructors clash
  - KT-51621 FIR: visible VS invisible qualifier conflict
  - KT-50468 FIR compilers fails with CCE when meets top-level destruction
  - KT-51557 Inline stack frame is not shown for default inline lambda
  - KT-51358 OptIn: show default warning/error message in case of empty message argument
  - KT-44152 FIR2IR fails on declarations from java stdlib if java classes are loaded from PSI instead of binaries
  - KT-50949 PSI2IR: NSEE from ArgumentsGenerationUtilsKt.createFunctionForSuspendConversion with providing lambda as argument with suspend type
  - KT-39256 ArrayStoreException with list of anonymous objects with inferred types created in reified extension function
ReleaseNotesUrl: https://github.com/JetBrains/kotlin/releases/tag/v1.7.0
ManifestType: defaultLocale
ManifestVersion: 1.4.0
