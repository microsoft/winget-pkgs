# Created with Komac v1.9.1
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.4.0.schema.json

PackageIdentifier: JetBrains.Kotlin.Compiler
PackageVersion: 1.6.20-M1
PackageLocale: en-US
Publisher: JetBrains s.r.o.
PublisherUrl: https://jetbrains.com/opensource
Author: JetBrains s.r.o.
PackageName: Kotlin Compiler
PackageUrl: https://github.com/JetBrains/kotlin
License: Freeware
Copyright: Copyright (C) JetBrains s.r.o.
ShortDescription: The Kotlin Programming Language.
Moniker: kotlin-compiler
ReleaseNotes: |-
  New Features
  - KT-48217 Add an annotation JvmDefaultWithCompatibility to allow generating DefaultImpls classes if -Xjvm-default=all option is used
  - KT-49857 Require Xcode 13 for building Kotlin/Native compiler
  - KT-47701 Support instantiation of annotation classes on Native
  - KT-46085 Support experimental parallel compilation of a single module in the JVM backend
  - KT-46603 Generate SAM-conversions to Java interfaces extending 'java.io.
    Serializable' as serializable using java.lang.invoke.
    LambdaMetafactory
  Performance Improvements
  - KT-50156 HMPP: Slow frontend/ide performance in OKIO (ExpectActualDeclarationChecker)
  - KT-50073 Performance regression in adapted function references
  - KT-50076 Performance regression in super call to an interface member in $DefaultImpls
  - KT-50080 Performance regression in string template with generic property with primitive upper bound
  - KT-50084 Performance regression in concatenation with 'String?'
  - KT-50078 Performance regression in for-in-array loop
  - KT-50039 Performance regression in inner class constructor call with default parameters
  - KT-48784 An anonymous class has fields for variables that are only used in the constructor
  - KT-42010 Generate IINC instruction for postfix increment in JVM_IR
  - KT-48433 JVM_IR don't generate null check on 'this$0' parameter of inner class constructor
  - KT-48435 JVM_IR ConstForLoopBenchmark performance regression
  - KT-48507 JVM_IR ForLoopBenchmark regressions
  - KT-48640 Performance regression in 'longDownToLoop' benchmarks
  - KT-29822 Generate specialized bytecode for loops withIndex over unsigned arrays
  - KT-48669 Generate optimizable counter loop for loops over indices of unsigned arrays
  - KT-49444 Possible performance degradation with UInt downTo loop
  - KT-48944 Possible performance regression with comparison of local KFunctions
  - KT-17111 Eliminate redundant store/load instructions when the value stored is simple
  - KT-36837 Generate more compact code for for-in-range loop in JVM_IR
  - KT-48947 JVM / IR Possible performance regression with string templates
  - KT-48931 JVM / IR: Performance degradation with string concatenation
  - KT-36654 Generate more compact bytecode for safe call in JVM_IR
  Fixes
  - KT-48544 JVM / IR: "UnsupportedOperationException: Unknown structure of ADAPTER_FOR_CALLABLE_REFERENCE" with callable reference ::arrayOf
  - KT-49658 NI: False negative TYPE_MISMATCH on nullable type with when
  - KT-50978 [Native] Error while building static cache: NoSuchElementException at IrTypeInlineClassesSupport.getInlinedClassUnderlyingType(InlineClasses.kt:341)
  - KT-50977 [Native] Error while building static cache: IllegalStateException: Class CLASS ENUM_ENTRY is not found at KonanIrlinkerKt.findClass(KonanIrlinker.kt:229)
  - KT-50976 [Native] Error while building static cache: IllegalStateException: No descriptor found at DescriptorByIdSignatureFinder.findDescriptorForPublicSignature(DescriptorByIdSignatureFinder.kt:157)
  - KT-51080 Line number in mapping for the first instruction is lost
  - KT-49526 JVM IR: Function reference with non-denotable intersection type argument is not inlined and is incorrectly approximated
  - KT-50399 Error: unexpected variance in super type argument: out @0
  - KT-50649 JVM IR: ClassCastException when returning Result as generic type
  - KT-50617 JVM IR: java.lang.IndexOutOfBoundsException "Empty list doesn't contain element at index 0" when class and interface have the same name and extension function is used
  - KT-45693 False negative INCOMPATIBLE_TYPES with when with generic subject
  - KT-50797 Implement fix for false negative UPPER_BOUND_VIOLATED with generic typealias using not all type parameters as arguments for underlying type
  - KT-43493 NI: @BuilderInference prevents compilation error of "Operator '==' cannot be applied to 'Long' and 'Int'"
  - KT-48945 JVM IR: special bridge for get is not generated in a Map subclass
  - KT-49829 Wrong "cast can never succeed" diagnostic with builder inference
  - KT-49828 Improve builder inference diagnostics with overload resolution ambiguity
  - KT-50989 CCE cause by EmptySubstitutor in ResolutionWithStubTypesChecker
  - KT-48899 Report warnings on overrides with wrong types nullability
  - KT-49461 Implement prohibitation of access to members of companion of enum class from initializers of entries of this enum
  - KT-49754 Kotlin/JS: @JsExport on enum class reports NON_EXPORTABLE_TYPE warning
  - KT-49598 Misleading error message "Using @JvmRecord is only allowed with -jvm-target 15 and -Xjvm-enable-preview flag enabled"
  - KT-44133 Inline classes: class literal in annotation arguments uses underlying type
  - KT-47703 ClassCastException: Programmatically created annotation can't hold Array<KClass<*>>
  - KT-47549 JVM / IR: Null argument in ExpressionCodegen for parameter VALUE_PARAMETER CONTINUATION_CLASS caused by suspend function inside "fun interface" in another file
  - KT-50120 HMPP: False positive [NO_VALUE_FOR_PARAMETER] for expect function usages
  - KT-48499 Interface call with an inline/value parameter generates AbstractMethodError after rebuilding the module, but NOT the file.
  - KT-49864 JVM IR: NoSuchMethodError calling default interface method with inline class return type in -Xjvm-default=all mode
  - KT-49812 JVM / IR: "java.lang.VerifyError: Bad return type" when using Result type attribute + extension function with same name
  - KT-49936 Extension property in a data class with the same name as the constructor parameter leads to incorrect component function being resolved and generated
  - KT-48181 "ISE: Null argument in ExpressionCodegen for parameter VALUE_PARAMETER" on creating instance of kotlin.
    Metadata
  - KT-50215 VerifyError caused by missing cast after is check in when
  - KT-49977 "Parameter specified as non-null is null" when inline class implements interface method with default parameters
  - KT-50385 DUPLICATE_LABEL_IN_WHEN is reported on incorrect branches
  - KT-49092 JVM: ArrayIndexOutOfBoundsException on compiling call with if expression and TODO() arguments
  - KT-48987 JVM / IR: Smartcast, which never succeed, crashes the compiler
  - KT-49998 JVM: missing default value for annotation parameter of an unsigned type
  - KT-50277 Invalid bytecode generated for inline lambda in suspend function
  - KT-44561 FIR DFA: extract non-null info from comparison against variable with initial constant value
  - KT-44560 FIR DFA: propagate non-null info to original variables in not-null assertion or cast expression
  - KT-50258 equals() returns false on the same enum instances if we check it for the second time in when
  - KT-47483 JVM IR: "NoSuchElementException: Sequence contains no element matching the predicate" on compiling Array instantiation with TODO
  - KT-49765 JVM: ClassCastException when trying to add object to EmptyList
  - KT-46879 "AssertionError: Stack should be spilled before suspension call" with Flow and reified type
  - KT-50172 "AssertionError: Not a callable reflection type" on local function reference with the same name as local variable
  - KT-49443 JVM IR, Script: "IllegalStateException: No mapping for symbol: VALUE_PARAMETER INSTANCE_RECEIVER" with constructor call of class that has a top-level extension function call
  - KT-50193 Garbage collection is not working the same way after jvm-ir-backend change
  - KT-19424 Compilation exception for script with property delegate calling operator invoke on an object
  - KT-43995 Script: "IllegalStateException: No mapping for symbol: VALUE_PARAMETER INSTANCE_RECEIVER" if companion object initializer calls method on list
  - KT-30616 Script: "Don't know how to generate outer expression" for top-level variable reference from static context (companion object, enum)
  - KT-47000 Allow graceful migration to -Xjvm-default=all-compatibility by allowing to inherit from interfaces even in the old (-Xjvm-default=disable) mode
  - KT-50171 JVM IR: "UninitializedPropertyAccessException: Parent not initialized: IrVariableImpl" on SAM-converted property setter reference with Double parameter inside lambda
  - KT-50140 Internal error on explicit string concatenation of generic type value with 'String' upper bound
  - KT-49992 Anonymous object should not have access to private members from supertypes
  - KT-49973 Check existing of default error message for all diagnostics
  - KT-50019 Property delegated to callable reference: "ISE: Local class should have its name computed in InventNamesForLocalClasses" with -Xno-optimized-callable-references
  - KT-49645 JVM / IR: "IllegalStateException: Local class should have its name computed" caused by default suspend function in interface and value class
  - KT-50028 Incorrect implicit casts from Unit
  - KT-49615 JVM / IR: "Exception during IR lowering" with list of value classes with non-trivial constructor inside suspend lambda
  - KT-49127 FIR: smart cast is not performed after comparison
  - KT-48708 Incorrect cast from Unit to Int
  - KT-48376 FIR: False positive UNITIALIZED_VARIABLE after try/finally with return from try
  - KT-48113 FIR: (false) positive EQUALITY_NOT_APPLICABLE for intersection with platform type
  - KT-48305 FIR: incorrect raw type cast
  - KT-48378 FIR: synthetic accessor lowering should not attempt to modify other files
  - KT-48634 FIR: false property-setter-function resolve cycle
  - KT-48621 FIR: SyntheticAccessorLowering should not attempt to modify other files for protected JvmField
  - KT-48381 Invalid LLVM module: verification failure of createInlineClassInArgumentPosition.kt
  - KT-48527 Native: top-level properties in files with @Test functions are initialized eagerly even if lazy initialization is enabled
  - KT-48559 IllegalArgumentException: Unexpected super type argument: * @ 0  during IR lowering
  - KT-48687 IR dump mismatch after deep copy with symbols in IR text test
  - KT-44811 [FIR] Exception in body resolve of new contracts
  - KT-48363 FIR behaves differently in case of resolution between classifier and top-level property
  - KT-48801 "AssertionError: Stack should be spilled before suspension call" with Flow and crossinline
ReleaseNotesUrl: https://github.com/JetBrains/kotlin/releases/tag/v1.6.20-M1
ManifestType: defaultLocale
ManifestVersion: 1.4.0
