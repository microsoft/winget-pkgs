# Created with komac v2.8.0
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.9.0.schema.json

PackageIdentifier: JetBrains.QodanaCLI
PackageVersion: 2025.1.0
PackageLocale: en-US
Publisher: JetBrains s.r.o.
PublisherUrl: https://www.jetbrains.com/
PublisherSupportUrl: https://www.jetbrains.com/help/qodana/getting-started.html
PrivacyUrl: https://www.jetbrains.com/legal/docs/privacy/privacy
Author: JetBrains s.r.o.
PackageName: Qodana CLI
PackageUrl: https://www.jetbrains.com/qodana
License: Apache-2.0
LicenseUrl: https://github.com/JetBrains/qodana-cli/blob/HEAD/LICENSE
Copyright: Copyright Â© JetBrains s.r.o.
ShortDescription: Qodana is a simple cross-platform command-line tool to run Qodana linters anywhere with minimum effort required.
Moniker: qodana
Tags:
- code-quality
- code-scanning
- jetbrains
- qodana
ReleaseNotes: "Changelog\n- :arrow_up: Bump go to 1.22.8\n- :arrow_up: Bump go to 1.24.0\n- :arrow_up: Bump actions/setup-java from 3 to 4 in the dependencies group\n- :arrow_up: Bump config loader â€“ better output on invalid yaml\n- :arrow_up: Bump config-loader-cli.jar to 0.0.16\n- :arrow_up: Bump github.com/boyter/scc/v3\n- :arrow_up: Bump github.com/go-enry/go-enry/v2\n- :arrow_up: Bump github.com/go-enry/go-enry/v2\n- :arrow_up: Bump github.com/pterm/pterm\n- :arrow_up: Bump github.com/stretchr/testify\n- :arrow_up: Bump github.com/stretchr/testify\n- :arrow_up: Bump github.com/zalando/go-keyring\n- :arrow_up: Bump golang.org/x/crypto from 0.24.0 to 0.31.0 in /cli\n- :arrow_up: Bump golang.org/x/crypto from 0.24.0 to 0.31.0 in /core\n- :arrow_up: Bump golang.org/x/crypto from 0.24.0 to 0.31.0 in /platform\n- :arrow_up: Bump golang.org/x/crypto from 0.26.0 to 0.31.0 in /cmd\n- :arrow_up: Bump golang.org/x/net from 0.30.0 to 0.33.0 in /cmd\n- :arrow_up: Bump the dependencies group across 1 directory with 2 updates\n- :arrow_up: Bump the dependencies group across 4 directories with 1 update\n- :arrow_up: Bump the dependencies group across 4 directories with 2 updates\n- :arrow_up: QD-11257 Fixed empty yaml reading, bump config-loader-cli.jar to 0.0.17\n- :bug: Escape special Windows characters (QD-11070)\n- :bug: Fix CLI completion generation (QD-9907)\n- :bug: Fix GitLab/BitBucket reports with baseline and no new problems (QD-10038)\n- :bug: Fix contributors log options\n- :bug: Fix view command options\n- :bug: Fix forwarding testing endpoint to containers (QD-10281)\n- :bug: Fix qodana-clang build on master\n- :bug: Fix setting --report-dir for container runs (QD-10890)\n- :bug: Handle errors for .idea cache and add logging (QD-9927)\n- :bug: QD-10572 qodana-clang should respect arguments property\n- :bug: QD-10573 qodana-clang should work for master and release branches\n- :bug: QD-10590 Plugins must be installed only inside native mode (inside docker is native)\n- :bug: QD-10662: qodana-cli incorrectly retrieves current branch name (#549)\n- :bug: QD-10767 Update submodules when checkout performed in full history and scoped script (#519)\n- :bug: QD-10955 Add QODANA_TOKEN to docker env, QODANA_LICENSE_ONLY_TOKEN accessed only by os.Getenv\n- :bug: QD-10984 introduce whitelist for quick-fixes support and include QDNET in it (#548) (#555)\n- :bug: QD-11241 Converter no longer needed for sending reports to cloud\n- :bug: QD-11241 Create final results dir in third-party linters\n- :bug: QD-11255 Handle absolute custom yaml config path\n- :bug: QD-11263 qodana-cdnet supports partialFingerprints\n- :bug: QD-11276: qodana-cli tests fail on Windows when java exe has spaces in path (#552)\n- :bug: QD-11375 Python: sync jdk.table.xml with python environment\n- :bug: QD-11482 Support user defined protocol\n- :bug: Scoped script should keep baseline for the second run and track coverage feature usage.\n- :bug: When falling back to default scenario, reset options that lead to changes analysis\n- :bug: When launching docker linter, log folder does not exist for CLI\n- :bug: respect environment when creating a docker client in pull command (#532)\n- :bug:QD-10274 Stop modifying unnecessary files in native mode\n- :bug:QD-10360 Fix an order of setting variables custom JVM properties\n- :bug:QD-10360 Force installPlugins to use qodana attributes of EAP and version\n- :bug:QD-10360 Refactor passing options to installPlugins, add necessary options to common part with scan options\n- :bug:QD-10419 Set up plugins once even in scoped script\n- :children_crossing: Check args length before comparing\n- :children_crossing: Fallback to default execution scenario when revision is missing in history\n- :children_crossing: Fix output for CI, add simple tests\n- :children_crossing: Format CI messages for more visibility\n- :children_crossing: Make non-CI warning similar to other warnings\n- :children_crossing: Produce warnings if the linter version is incompatible\n- :loud_sound: Remove incorrect \"See log above for details\", the placement of exception in stdout(err) is not guaranteed\n- :rewind: (reverting for rebasing, commit is brought back later) Revert \"QD-10767 Update submodules when checkout performed in full history and scoped script (#519)\"\n- :sparkles: QD-10856 Address review #527\n- :sparkles: QD-10856 Create effective configuration in qodana cli\n- :sparkles: QD-10955 Now in qodana init we require token if it's needed\n- :sparkles: QD-11220: Support jetbrains/qodana-cpp as the docker image for QDCPP in CLI (#537)\n- :sparkles: QD-11228 Provide effective qodana yaml to frontend as qodana yaml\n- :wrench: QD-10955 Codestyle\n- :zap: Bump linters versions\n- :zap: QD-10306 Add logging for native configuration\n- :zap: QD-11553 Bump Qodana CLI to 2025.1 linters, 251 is released\n- :zap: QD-11553 Mute test which verify existense of 2025 linters in feed, because it's not yet released\n- :zap: Switch from 2024.3 EAP to Release\n- :zap: Switch to released 2024.2 images\n- :zap: Unset Ruby-related variables for QDRUBY (RUBY-29231)\n- Iurko/251 cdnet fix (#553)\n- QD-10767 Update submodules when checkout performed in full history and scoped script (#519)\nInstall\nðŸ’¡ The Qodana CLI is distributed and run as a binary. The Qodana linters with inspections are Docker Images or, starting from version 2023.2, your local/downloaded by CLI IDE installations (experimental support).\n- To run Qodana with a container (the default mode in CLI), you must have Docker or Podman installed and running locally to support this: https://www.docker.com/get-started, and, if you are using Linux, you should be able to run Docker from the current (non-root) user (https://docs.docker.com/engine/install/linux-postinstall/#manage-docker-as-a-non-root-user)\n- To run Qodana without a container, you must have the IDE installed locally to provide the IDE installation path to the CLI or specify the product code, and CLI will try to download the IDE automatically (experimental support).\n\nmacOS and Linux\nInstall with Homebrew (recommended)\nbrew install jetbrains/utils/qodana\n\nInstall with our installer\ncurl -fsSL https://jb.gg/qodana-cli/install | bash\n\nAlso, you can install nightly or any other version (e.g. v2023.2.9) the following way:\ncurl -fsSL https://jb.gg/qodana-cli/install | bash -s -- nightly\n\nWindows\nInstall with Windows Package Manager (recommended)\nwinget install -e --id JetBrains.QodanaCLI\n\nInstall with Chocolatey\nchoco install qodana\n\nInstall with Scoop\nscoop bucket add jetbrains \nscoop install qodana\n\nAnywhere else\nAlternatively, you can install the latest binary (or the apt/rpm/deb/archlinux package) from this page.Update\nUpdate to the latest version depends on how you choose to install qodana on your machine.Update with Homebrew\nbrew upgrade qodana\n\nUpdate with Scoop\nscoop update qodana\n\nUpdate with Chocolatey\nchoco upgrade qodana\n\nUpdate on Linux and macOS with the installer script\ncurl -fsSL https://jb.gg/qodana-cli/install | bash\n\nAlternatively, you can grab the latest binary (or the apt/rpm/deb package) from this page."
ReleaseNotesUrl: https://github.com/JetBrains/qodana-cli/releases/tag/v2025.1.0
ManifestType: defaultLocale
ManifestVersion: 1.9.0
