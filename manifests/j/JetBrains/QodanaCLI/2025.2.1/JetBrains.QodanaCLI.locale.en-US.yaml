# Created with komac v2.8.0
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.9.0.schema.json

PackageIdentifier: JetBrains.QodanaCLI
PackageVersion: 2025.2.1
PackageLocale: en-US
Publisher: JetBrains s.r.o.
PublisherUrl: https://www.jetbrains.com/
PublisherSupportUrl: https://www.jetbrains.com/help/qodana/getting-started.html
PrivacyUrl: https://www.jetbrains.com/legal/docs/privacy/privacy
Author: JetBrains s.r.o.
PackageName: Qodana CLI
PackageUrl: https://www.jetbrains.com/qodana
License: Apache-2.0
LicenseUrl: https://github.com/JetBrains/qodana-cli/blob/HEAD/LICENSE
Copyright: Copyright © JetBrains s.r.o.
ShortDescription: Qodana is a simple cross-platform command-line tool to run Qodana linters anywhere with minimum effort required.
Moniker: qodana
Tags:
- code-quality
- code-scanning
- jetbrains
- qodana
ReleaseNotes: |-
  Changelog
  - :arrow_up: Bump go to 1.22.8
  - :arrow_up: Bump go to 1.24.0
  - :arrow_up: Bump actions/setup-java from 3 to 4 in the dependencies group
  - :arrow_up: Bump config loader – better output on invalid yaml
  - :arrow_up: Bump config-loader-cli.jar to 0.0.16
  - :arrow_up: Bump github.com/boyter/scc/v3
  - :arrow_up: Bump github.com/go-enry/go-enry/v2
  - :arrow_up: Bump github.com/go-enry/go-enry/v2
  - :arrow_up: Bump github.com/pterm/pterm
  - :arrow_up: Bump github.com/stretchr/testify
  - :arrow_up: Bump github.com/stretchr/testify
  - :arrow_up: Bump github.com/zalando/go-keyring
  - :arrow_up: Bump golang.org/x/crypto from 0.24.0 to 0.31.0 in /cli
  - :arrow_up: Bump golang.org/x/crypto from 0.24.0 to 0.31.0 in /core
  - :arrow_up: Bump golang.org/x/crypto from 0.24.0 to 0.31.0 in /platform
  - :arrow_up: Bump golang.org/x/crypto from 0.26.0 to 0.31.0 in /cmd
  - :arrow_up: Bump golang.org/x/net from 0.30.0 to 0.33.0 in /cmd
  - :arrow_up: Bump golang.org/x/net from 0.33.0 to 0.36.0 in /cmd
  - :arrow_up: Bump the dependencies group across 1 directory with 2 updates
  - :arrow_up: Bump the dependencies group across 4 directories with 1 update
  - :arrow_up: Bump the dependencies group across 4 directories with 2 updates
  - :arrow_up: QD-11257 Fixed empty yaml reading, bump config-loader-cli.jar to 0.0.17
  - :arrow_up: QD-11903 Upgrade config-loader-cli.jar
  - :arrow_up: QD-11903 Upgrade config-loader-cli.jar
  - :arrow_up: Update publisher to 3.0.7
  - :brics: Add native run configuration
  - :brics: QD-10741 Add --linter and --within-container parameters for scan command
  - :brics: QD-10741 Fix qodana-clang
  - :brics: QD-12003  Cleanup. Split GuessAnalyzer method.
  - :brics: QD-12003  Tests fixes
  - :brics: QD-12003 Handle review. Add test for choosing NativePathAnalyzer.
  - :brics: QD-12003 Refactor selection of linter parameters and datastructures
  - :brics: QD-12017 Add optional auth for downloading linter distribution
  - :brics: QD-12017 Add status check on HEAD request
  - :brics: QD-12093 Add detailed output on tar failure
  - :bug: Escape special Windows characters (QD-11070)
  - :bug: Fix CLI completion generation (QD-9907)
  - :bug: Fix GitLab/BitBucket reports with baseline and no new problems (QD-10038)
  - :bug: Fix contributors log options
  - :bug: Fix view command options
  - :bug: Fix custom plugin setup for darwin (QD-9921)
  - :bug: Fix custom plugins container location (QD-9921)
  - :bug: Fix forwarding testing endpoint to containers (QD-10281)
  - :bug: Fix qodana-clang build on master
  - :bug: Fix setting --report-dir for container runs (QD-10890)
  - :bug: Handle errors for .idea cache and add logging (QD-9927)
  - :bug: QD-10572 qodana-clang should respect arguments property
  - :bug: QD-10573 qodana-clang should work for master and release branches
  - :bug: QD-10590 Plugins must be installed only inside native mode (inside docker is native)
  - :bug: QD-10627 Don't fail analysis step if changeset is empty in case of scoped analysis. (#507)
  - :bug: QD-10662: qodana-cli incorrectly retrieves current branch name (#549)
  - :bug: QD-10767 Update submodules when checkout performed in full history and scoped script (#519)
  - :bug: QD-10955 Add QODANA_TOKEN to docker env, QODANA_LICENSE_ONLY_TOKEN accessed only by os.Getenv
  - :bug: QD-10984 introduce whitelist for quick-fixes support and include QDNET in it (#548)
  - :bug: QD-11241 Converter no longer needed for sending reports to cloud
  - :bug: QD-11241 Create final results dir in third-party linters
  - :bug: QD-11255 Handle absolute custom yaml config path
  - :bug: QD-11263 qodana-cdnet supports partialFingerprints
  - :bug: QD-11266 Add report saving for third party linters
  - :bug: QD-11266 Pass corrected ResultsDir for permissions correction
  - :bug: QD-11276: qodana-cli tests fail on Windows when java exe has spaces in path (#552)
  - :bug: QD-11375 Python: sync jdk.table.xml with python environment
  - :bug: QD-11458: 3rd party linters should update their binary in cache (#567)
  - :bug: QD-11464: clang subproject's tests do not work (#568)
  - :bug: QD-11482 Support user defined protocol
  - :bug: QD-11516: Ensure subprocess termination on Windows (#589)
  - :bug: QD-11538: qodana-clang fails to send report (#574)
  - :bug: QD-11584 if cloud is http, use host network for docker. Env variables used both by CLI and docker are stored and accessed separately in global variable
  - :bug: QD-11753 Ruby is eap only for now. Same for QDCPP.
  - :bug: QD-12099 Add test. Replace %s with %w on error creation.
  - :bug: QD-12099 Always try to clean up the temp folder
  - :bug: QD-12099 Replace extracting dist to target with extracting to temp and move.
  - :bug: QD-12099 Use 0755 permission for dist dir, use 0700 for download dir
  - :bug: QD-12099 Use MkdirTemp instead MkdirAll
  - :bug: QD-12139: Fix inter-module dependency managment (#623)
  - :bug: QD-12168 Fix messages for errors of linter's downloading
  - :bug: QD-12252 Add copying as a fallback after linter unpack
  - :bug: QD-12252 Fix wrong condition on returning error
  - :bug: QD-12266: Fix qodana-cdnet build process (#629)
  - :bug: QD-12327: Fix multiple problems with 'go generate' (#641) (#642)
  - :bug: QD-12352 Change exec.Command to functions from utils (#648)
  - :bug: QD-9921 Fix linux and windows custom-plugin path
  - :bug: QD-9921 Remove quotes on passing disabled_plugins. Parameters passed through file should not be quoted.
  - :bug: Scoped script should keep baseline for the second run and track coverage feature usage.
  - :bug: When falling back to default scenario, reset options that lead to changes analysis
  - :bug: When launching docker linter, log folder does not exist for CLI
  - :bug: respect environment when creating a docker client in pull command (#532)
  - :bug:QD-10274 Stop modifying unnecessary files in native mode
  - :bug:QD-10360 Fix an order of setting variables custom JVM properties
  - :bug:QD-10360 Force installPlugins to use qodana attributes of EAP and version
  - :bug:QD-10360 Refactor passing options to installPlugins, add necessary options to common part with scan options
  - :bug:QD-10419 Set up plugins once even in scoped script
  - :children_crossing: Check args length before comparing
  - :children_crossing: Fallback to default execution scenario when revision is missing in history
  - :children_crossing: Fix output for CI, add simple tests
  - :children_crossing: Format CI messages for more visibility
  - :children_crossing: Make non-CI warning similar to other warnings
  - :children_crossing: Produce warnings if the linter version is incompatible
  - :loud_sound: Remove incorrect "See log above for details", the placement of exception in stdout(err) is not guaranteed
  - :rewind: (reverting for rebasing, commit is brought back later) Revert "QD-10767 Update submodules when checkout performed in full history and scoped script (#519)"
  - :sparkles: QD-10856 Address review #527
  - :sparkles: QD-10856 Create effective configuration in qodana cli
  - :sparkles: QD-10955 Now in qodana init we require token if it's needed
  - :sparkles: QD-11220: Support jetbrains/qodana-cpp as the docker image for QDCPP in CLI (#537)
  - :sparkles: QD-11228 Provide effective qodana yaml to frontend as qodana yaml
  - :wrench: QD-10955 Codestyle
  - :zap: Bump linters versions
  - :zap: QD-10306 Add logging for native configuration
  - :zap: QD-11553 Bump Qodana CLI to 2025.1 linters, 251 is released
  - :zap: QD-11553 Mute test which verify existense of 2025 linters in feed, because it's not yet released
  - :zap: QD-11553 in feed eap is 2024.3, no 2025.1 eap in feed
  - :zap: Switch from 2024.3 EAP to Release
  - :zap: Switch to released 2024.2 images
  - :zap: Unset Ruby-related variables for QDRUBY (RUBY-29231)
  - If a GitHub Actions job or workflow has no explicit permissions set, then the repository permissions are used. Repositories created under organizations inherit the organization permissions. The organizations or repositories created before February 2023 have the default permissions set to read-write. Often these permissions do not adhere to the principle of least privilege and can be reduced to read-only, leaving the write permission only to a specific types as issues: write or pull-requests: write.
  - Merge QDCL and QDCLC into a single linter (#566)
  - Merge pull request #627 from JetBrains/bump-version-to-252
  - Merge pull request #644 from JetBrains/252-cherrypick-release
  - QD-10767 Update submodules when checkout performed in full history and scoped script (#519)
  - QD-11753 Add Ruby project recognition
  - QD-12076 bump publisher-cli version
  - QD-12099 Compilation fix
  - QD-12104 Fix tests
  - QD-12104 bump eap version to 252
  - QD-12104 set 252 as release (#640)
  - QD-12168 Replace backticks in error messages
  - Revert ":zap: QD-11553 Mute test which verify existense of 2025 linters in feed, because it's not yet released"
  - 🐛 QD-11565: Revert "Use canonical paths for ComputeChangedFiles (#584)" (#587)
  - 🐛 QD-11565: Use canonical paths for ComputeChangedFiles (#584)
  Install
  💡 The Qodana CLI is distributed and run as a binary. The Qodana linters with inspections are Docker Images or, starting from version 2023.2, your local/downloaded by CLI IDE installations (experimental support).
  - To run Qodana with a container (the default mode in CLI), you must have Docker or Podman installed and running locally to support this: https://www.docker.com/get-started, and, if you are using Linux, you should be able to run Docker from the current (non-root) user (https://docs.docker.com/engine/install/linux-postinstall/#manage-docker-as-a-non-root-user)
  - To run Qodana without a container, you must have the IDE installed locally to provide the IDE installation path to the CLI or specify the product code, and CLI will try to download the IDE automatically (experimental support).

  macOS and Linux
  Install with Homebrew (recommended)
  brew install jetbrains/utils/qodana

  Install with our installer
  curl -fsSL https://jb.gg/qodana-cli/install | bash

  Also, you can install nightly or any other version (e.g. v2023.2.9) the following way:
ReleaseNotesUrl: https://github.com/JetBrains/qodana-cli/releases/tag/v2025.2.1
ManifestType: defaultLocale
ManifestVersion: 1.9.0
