# Created with YamlCreate.ps1 v2.4.1 Dumplings Mod $debug=QUSU.CRLF.7-4-2.Win32NT
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.6.0.schema.json

PackageIdentifier: JetBrains.FleetLauncher.Preview
PackageVersion: 1.34.94
PackageLocale: en-US
Publisher: JetBrains s.r.o.
PublisherUrl: https://www.jetbrains.com/
PublisherSupportUrl: https://www.jetbrains.com/support/
PrivacyUrl: https://www.jetbrains.com/legal/docs/privacy/privacy/
Author: JetBrains s.r.o.
PackageName: Fleet Launcher (Public Preview)
PackageUrl: https://www.jetbrains.com/help/fleet/install-on-a-remote-machine.html
License: Proprietary
LicenseUrl: https://www.jetbrains.com/legal/docs/toolbox/user_eap/
Copyright: Copyright © 2000-2024 JetBrains s.r.o.
# CopyrightUrl:
ShortDescription: Install JetBrains Fleet on a remote machine for remote development
Description: You can install JetBrains Fleet on a remote machine for remote development. This addresses the case when you have a powerful box at home or in the office, and you want to use your local workstation as a thin client. This approach allows you to leverage higher compute capacity and avoid running heavy tasks locally.
# Moniker:
Tags:
- fleet
ReleaseNotes: |-
  Fleet 1.34 Release Notes
  Here are some noteworthy changes:
  - We're excited to introduce AI code completion for Python and Kotlin! The new gray-text code completion, powered by JetBrains' own model, provides great performance and accuracy. To explore the code completion feature, select AI Assistant from the Tools menu or invoke an AI-powered action from the Actions menu. Log in with your JetBrains account if needed. You can also start a free JetBrains AI trial (no credit card required).
  - We’ve added the Force Step Into action to Fleet. This action lets you debug methods defined in the APIs or libraries. If the source code of the API or library is not available, Fleet decompiles and debugs it for you.
  - It was already possible to debug Kotlin/Wasm applications in the browser. Now, you can debug applications built with Kotlin/Wasm right inside Fleet.
  - You can now enable relative line numbering.
  - In this update, we also made many improvements to the Markdown preview. The most important one is the synchronized scrolling of the Markdown preview and the editor.
  - You can now run simple Java applications without the need to create a project with a build tool, such as Maven or Gradle.
  - Fleet already supported syntax highlighting for .env files. Starting with Fleet 1.34, .env.* files, such as .env.local, .env.example, etc., are now supported as well.
  - Files can now be configured to end with a new line. To enable this, add insert_final_newline = true to your .editorconfig.
  - Fleet 1.34 introduces the option to enable smooth caret animation. Open Settings and go to Editor | Caret.
  - Fleet no longer opens a new window when connecting to WSL or SSH.
  - We’ve added aliases for programming languages when using the language dialog box. For example, you can now type c# or csharp, and you will find the language you are looking for.
  - If you are running an Android application in Fleet, the log will be displayed in a separate window instead of a tab in the current Fleet window.
  We've also fixed a number of bugs:
  - HTML and XML indentations now work as intended.
  - Selected text now scrolls continuously beyond the boundaries of the editor.
  - Gemfiles now have syntax highlighting.
  - You can create a new file while following a collaborator.
  See full release notes for the details about all the changes.
ReleaseNotesUrl: https://youtrack.jetbrains.com/issues/FL?q=Fix%20versions:%201.34%20%20sort%20by:votes%20%23%7BReady%20for%20test%7D%20%23Verified
# PurchaseUrl:
# InstallationNotes:
# Documentations:
ManifestType: defaultLocale
ManifestVersion: 1.6.0
