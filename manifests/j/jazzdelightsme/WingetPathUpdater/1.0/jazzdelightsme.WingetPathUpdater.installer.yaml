# Created using wingetcreate 1.2.8.0
# yaml-language-server: $schema=https://aka.ms/winget-manifest.installer.1.4.0.schema.json

PackageIdentifier: jazzdelightsme.WingetPathUpdater
PackageVersion: 1.0
Installers:
- InstallerUrl: https://github.com/jazzdelightsme/PowershellStub/releases/download/v1.0/PowershellStub.exe
  Architecture: x64
  InstallerType: exe
  Scope: machine
  InstallerSha256: F0E3AAC6D5605D7507BE86D81F55092FC88D4AF53FC85AF9D4CFAF6DB7C876A4
  InstallModes:
  - interactive
  - silent
  - silentWithProgress
  InstallerSwitches:
    # These command lines are pretty beefy... below is a bit of explanation.
    #
    # The summary is that at runtime it downloads the script to run, and runs it. It
    # handles passing in additional custom arguments (from winget's --custom option), and
    # ensures that powershell will exit with the proper exit code. Most error handling
    # should be done by the script itself, but we also have some on the command line here
    # to handle cases like bogus custom options from the user, syntax errors in the
    # script, etc.
    #
    # Note the presence of "$args" in the command: this is to plumb in other command line
    # args (from winget's --custom option) to the script. Example:
    #
    #    winget install jazzdelightsme.WingetPathUpdater -i --custom "-Force -Verbose"
    #
    # Also, a handy trick for testing out changes to the script is to either change the
    # URL, *or* you could even just use a local file by replacing "Invoke-WebRequest url"
    # with "Get-Content -Raw path/to/local/file".
    #
    # Another trick: prefix the command line with -NoExit, so that you have a chance to
    # manually inspect errors.
    #                                                                                                                                                                                                            < run >                                                                                                                                                             < be sure to use    >
    #                    <------- standard powershell.exe args -------->       <-------------------------- for legacy PS/.NET, don't accidentally blow up over TLS stuff ------------------------------------->  < this >     <------------ download this script code from the interwebs ------------------------------------------------------------->    <-- args to the script -->   < correct exit code > <-- handles problems like bad custom args or script bugs ----------------------------------------------------------------------------->
    Silent:             '-NoProfile -ExecutionPolicy Bypass -Command . { try { [Net.ServicePointManager]::SecurityProtocol = [Net.ServicePointManager]::SecurityProtocol -bor [Net.SecurityProtocolType]::Tls12 ; iex \"& { $(iwr -UseBasicParsing https://raw.githubusercontent.com/jazzdelightsme/WingetPathUpdater/v1.0/WingetPathUpdaterInstall.ps1) } -Silent $args\"             ; exit $LastExitCode } catch { Write-Error $_ ; $_ | fl * -Force | Out-String | sc $env:TEMP\WingetPathUpdaterFailure2.txt ; start-sleep -seconds 15 ; exit -3 } }'
    SilentWithProgress: '-NoProfile -ExecutionPolicy Bypass -Command . { try { [Net.ServicePointManager]::SecurityProtocol = [Net.ServicePointManager]::SecurityProtocol -bor [Net.SecurityProtocolType]::Tls12 ; iex \"& { $(iwr -UseBasicParsing https://raw.githubusercontent.com/jazzdelightsme/WingetPathUpdater/v1.0/WingetPathUpdaterInstall.ps1) } -SilentWithProgress $args\" ; exit $LastExitCode } catch { Write-Error $_ ; $_ | fl * -Force | Out-String | sc $env:TEMP\WingetPathUpdaterFailure2.txt ; start-sleep -seconds 15 ; exit -3 } }'
    Interactive:        '-NoProfile -ExecutionPolicy Bypass -Command . { try { [Net.ServicePointManager]::SecurityProtocol = [Net.ServicePointManager]::SecurityProtocol -bor [Net.SecurityProtocolType]::Tls12 ; iex \"& { $(iwr -UseBasicParsing https://raw.githubusercontent.com/jazzdelightsme/WingetPathUpdater/v1.0/WingetPathUpdaterInstall.ps1) } -Interactive $args\"        ; exit $LastExitCode } catch { Write-Error $_ ; $_ | fl * -Force | Out-String | sc $env:TEMP\WingetPathUpdaterFailure2.txt ; start-sleep -seconds 15 ; exit -3 } }'
    Log:                '-LogPath <LOGPATH>'
  ElevationRequirement: elevationRequired
ManifestType: installer
ManifestVersion: 1.4.0
