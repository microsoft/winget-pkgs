# Created with YamlCreate.ps1 v2.2.0 $debug=QUS2.CRLF.7-2-6.Win32NT
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.2.0.schema.json

PackageIdentifier: Unity.Unity.2020
PackageVersion: 2020.2.3f1
PackageLocale: en-US
Publisher: Unity Technologies ApS
PublisherUrl: https://unity.com/
PublisherSupportUrl: https://support.unity.com/
PrivacyUrl: https://unity.com/legal/privacy-policy
Author: Unity Technologies ApS
PackageName: Unity
PackageUrl: https://unity.com/download
License: Proprietary
LicenseUrl: https://unity.com/legal/terms-of-service
Copyright: (c) 2021 Unity Technologies ApS. All rights reserved.
CopyrightUrl: https://unity.com/legal/trademarks
ShortDescription: The worldâ€™s leading platform for real-time content creation
Description: Unity is the ultimate game development platform. Use Unity to build high-quality 3D and 2D games, deploy them across mobile, desktop, VR/AR, consoles or the Web, and connect with loyal and enthusiastic players and customers.
# Moniker:
Tags:
- develop
- development
- game
- unity
- unity3d
# Agreements:
ReleaseNotes: |-
  System Requirements Changes

  Fixes
  - 2D: Fixed TilemapRenderer in Individual mode not rendering Tiles with Tilemap Color. (1295449)
  - Android: Fix Application.targetFrameRate and Screen.currentResolution.refreshRate on some variable refresh rate displays (1297149)
  - Android: Fixed Android Export Project option when Il2CPP used with C++ Compiler Configuration Master (1273917)
  - Animation: Fixed a bug where the most recent Animation Event is not triggered again when resetting Playable Time with SetTime(-1) (1230810)
  - Asset Import: Removed unsupported layerElement reference mode error logs. (1225010)
  - Audio: Fixed DSPGraph mixer thread exceptions. (1297730)
  - Audio: Fixed DSPGraph playback not pausing when player is paused.
  - Build Pipeline: Fix Unity command line player build failing due to invalid path argument to '-buildLinux64Player' (1285375)
  - Burst: Support for loading additional burst libraries in playmode/standalone for modding support. (1294664)
  - DX12: Fix for shader resource view of indirect argument buffer (1276431)
  - Editor: Added missing keycode mappings for special characters (e.g. ^, ~, |) (1281473)
  - Editor: Ensure there's proper Prefab and context menu handling for a ReorderableList as a whole, also when removing elements from the list. (1292522)
  - Editor: Exposed BuildUtility.BuildCanBeAppended to check for possibility of BuildOptions.AcceptExternalModificationsToPlayer usage (1288856)
  - Editor: Fix SceneHierarchy renaming using the context menu while a renaming is already active. (981190)
  - Editor: Fixed an issue where Asset Database dependencies were not included when exporting packages. (1250495)
  - Editor: Fixed AppStatusBar throwing MissingReferenceException when the Editor Layout is reset during Progress Bar updates. (1296666)
  - Editor: Fixed audio clip preview playback position when clicking on the waveform. (1294273)
  - Editor: Fixed Game Objects with Playable Director component can't be turned into a prefab when Timeline window is open in preview mode. (1223541)
  - Editor: Fixed ReorderableList not being drawn correctly while in horizontal layout (1289222)
  - Editor: Fixed serialized private inherited arrays not being reorderable by default (1298115)
  - Editor: Fixed [NonReorderable] not being applied to a private arrays inside a struct (1298288)
  - GI: Fixed color space for directional lightmap while baking with progressive updates. (1296784)
  - GI: Increase numerical stability in tetrahedralization code. (1287878)
  - Graphics: Added support for CreateExternalTexture with the Vulkan API
  - Graphics: Fixed an issue where the was no warning about double usage in shaders on metal. (1281502)
  - Graphics: Fixed incorrect shadows when using DrawMeshInstancedIndirect. (1281700)
  - Graphics: Fixed issue where speedtree textures were becoming unbound after clicking "Regenerate materials". (1231184)
  - Graphics: Fixed metal/vulkan shaders sometimes referencing inputs omitted by the compiler. (1277144)
  - Graphics: Fixed metal/vulkan shaders sometimes referencing outputs omitted by the compiler. (1290551)
  - Graphics: Fixed shaders that use immediate consts failing compilation under some circumstances (1283218)
  - Graphics: Fixed situation where Hybrid Renderer could throw errors because of invalid reflection data
  - Graphics: Issue an error message when trying to use the Hybrid Renderer V2 with SRP Batcher OFF. Also deterministically skip the rendering in this case. (1300072)
  - Graphics: Readded VSync Count tooltip in Quality Settings (1296699)
  - Graphics: Removed excessive CustomRenderTexture updates and fixed various dependency issues. (1249916, 1279212)
  - Graphics: Support for Crunched 16k textures. (1286157)
  - Graphics: Texture2D.PackTextured changes so that compressed textures with mips and a padding greater than zero are now decompressed (see documentation for details) (1063640)
  - IL2CPP: Avoid a crash on startup for assemblies that use nested types in the type. Google Ad Mobs has one such assembly, for example. (1287997)
  - IL2CPP: Fixed file and directory patterns ending with ".*" incorrectly including files names that partially match on non Windows platforms. (1286554)
  - IMGUI: Fixed the MissingMethodException when adding elements to ReorderableList with String type (1289219)
  - iOS: When selected XCode project build destination is not allowed (root project folder, Assets folder, etc.) warning is displayed.
  - Linux: Fixed an issue where the Linux Downloader would not properly extract files (1278063)
  - Linux: Fixed tooltip shows up in the window switcher as a separate window (1287440)
  - macOS: When selected XCode project build destination is not allowed (root project folder, Assets folder, etc.) warning is displayed.
  - Networking: UnityWebRequest: DownloadHandler.text will handle exception if encoding is not supported (fallback to UTF-8). (1288445)
  - Package Manager: Fixed 'My Registries' menu not showing up after configuring a scoped registry.
  - Package Manager: Fixed an issue where missing localhost in the hosts file configuration could prevent Unity from connecting to the Unity Package Manager. (1295543)
  - Package Manager: Fixed issues when using Unity Package Manager on Intel's 10th generation processor. (1238432)
  - Package Manager: Fixed issues where updates to outdated Assets does not show up in the Package Manager UI (1304459)
  - Package Manager: Fixed the issue where Open in Unity from Asset Store results in endless loading in Package Manager (1297749)
  - Particles: Fixed ParticleSystemRenderer GetMeshes freezing when one of its meshes had been destroyed and had gone null. (1238765)
  - Physics: Display Linear and Angular damping in the root of the ArticulationBody.
  - Prefabs: Fixed that dragging a Prefab asset to the Scene view while in Prefab Mode in Context did not render the dragged object normally but instead using the context render mode. (1279539)
  - Profiler: Fixed crash due to used textures stats counting when gfx jobs are enabled (1293569)
  - Profiler: Fixed ProfilerRecorder for "GC Allocated In Frame" reports 0 bytes if the Profiler isn't currently recording (1293607)
  - Profiler: Prevent disabled Profiler modules from pulling Profiler statistics. (1293059)
  - Profiler: Prevent the chart separator lines from disappearing when resizing or scrolling in the Profiler window. (1293049)
  - Scripting: Changed NativeArray limit of 2GiB in size, and now it can contain 2^31 items instead. (1262850)
  - Scripting: Fixed ApiUpdater internal recursion when assigning to deprecated Component.rigidbody (1276562)
  - Scripting: Fixed hang that would be encountered when mono's finalizer thread would compete with the debugger thread for a lock. (1288953)
  - Scripting: Fixed potential AsseblyUpdater assembly corruption when applying Camera.GetScreenHeight() / GetScreenWidth() -> Screen.height/width updates.
  - Scripting: Fixed potential AsseblyUpdater assembly corruption when field name and type needs updating.
  - Serialization: Fixed crash reordering array of struct, containing SerializeReference fields and non SerializeReference fields as well under certain circumstances. (1302360)
  - Serialization: FormerlySerializedAs attribute now correctly new value instead of old value if both are present. (1296458)
  - Serialization: ProjectSettings will now get re-serialized as text instead of as binary. (1289736)
  - Shaders: Fixed a crash when trying to set keywords on a material that has no shader assigned (1297087)
  - Shaders: Fixed compute and raytracing shader caching regression. (1306116)
  - Shaders: Fixed handling of the scalar after the matrix that is not 4xN. (1242345)
  - Shaders: Fixed local keyword from UsePass not working in the shader that uses the pass (1292128)
  - Shaders: Fixed shader memory being attributed to ShaderLab instead of individual shaders (1292198)
  - Terrain: Fix the case where terrain appears temporarily white during a scene save. (1304414)
  - Terrain: Fixed a crash when neighboring terrains have inconsistent heightmap settings. (1300660)
  - Terrain: Fixed terrain GI baking where holes are painted. (1300585)
  - Terrain: Fixed terrain normal maps and mask textures around holes. (1301214)
  - Terrain: Fixed the terrain geometry after painting holes. (1299939)
  - UI: Fix issue where a Graphic could be set as a raycast target even is disabled. (1290917)
  - UI Toolkit: Fixed performance of Line Renderer list of positions when its size is big enough to require scroll on the Inspector view. (1296193)
  - Video: [osx] Fixed a crash when playing a video at speed > 2x. (1240116)
  - XR: Fix Vulkan broken on Oculus Quest. (1304463)

  Changes
  - Shaders: Increased the global shader keyword limit to 384.
  - XR: The Oculus XR Plugin package has been updated to 1.7.0.
  - XR: Updated Windows XR SDK Plug-in to 4.4.0
  - XR: Updated XR Plug-in Management to 3.2.17

  Improvements
  - Physics: Rearrange the ArticulationBody properties so that damping and friction is located right after mass and is not visually separated from it by the anchor properties
  - Prefabs: Undo operations on objects in nested prefabs has been optimized by up to 30%
  - Shaders: Improved a warning about arrays in property sheets being capped to previous size (1297245)
ReleaseNotesUrl: https://unity3d.com/unity/whats-new/2020.2.3
PurchaseUrl: https://store.unity.com/
# InstallationNotes:
Documentations:
- DocumentLabel: Manual
  DocumentUrl: https://docs.unity3d.com/2020.2/Documentation/Manual/
ManifestType: defaultLocale
ManifestVersion: 1.2.0
