# Created with YamlCreate.ps1 v2.2.0 using InputObject ðŸ¤– $debug=QUSU.CRLF..7-2-10
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.2.0.schema.json

PackageIdentifier: Unity.Unity.2022
PackageVersion: 2022.2.9f1
PackageLocale: en-US
Publisher: Unity Technologies ApS
PublisherUrl: https://unity.com/
PublisherSupportUrl: https://support.unity.com/
PrivacyUrl: https://unity.com/legal/privacy-policy
Author: Unity Technologies ApS
PackageName: Unity 2022
PackageUrl: https://unity.com/download
License: Proprietary
LicenseUrl: https://unity.com/legal/terms-of-service
Copyright: Â© 2023 Unity Technologies ApS. All rights reserved.
CopyrightUrl: https://unity.com/legal/trademarks
ShortDescription: The worldâ€™s leading platform for real-time content creation
Description: Unity is the ultimate game development platform. Use Unity to build high-quality 3D and 2D games, deploy them across mobile, desktop, VR/AR, consoles or the Web, and connect with loyal and enthusiastic players and customers.
# Moniker:
Tags:
- develop
- development
- game
- unity
- unity3d
# Agreements:
ReleaseNotes: |+
  Improvements

  - Burst: Added a Burst AOT setting for the kind of debug information generated for player builds.
  - Burst: Added a toggle for filtering out ".Generated" jobs from the Burst Inspector target job list.
  - Burst: Added selection of line and highlight of selected line and selected lines register usage.
  - Burst: Added SIMD smell test to the Burst Inspector, highlighting ARM or x86-64 SIMD instruction differently depending on whether they work for packed or scalar inputs.
  - Burst: FunctionPointerMarkdig.Syntax.Inlines.HtmlEntityInlinedelegateMarkdig.Syntax.Inlines.HtmlEntityInline()::Invoke usage is now checked and patched to ensure the calling convention is compatible with burst.
  - Networking: Clarified error message in the logs when attempting to build a dedicated server player without having that platform's corresponding Dedicated Server Build support module installed. (UUM-22128)

  Changes

  - Burst: Burst now only generates full debug information when "Native Debug Mode Compilation" and script debug information is enabled.
  - Burst: Changed burst inspector source location comments from "===" to either ";" or "#" depending on the given assembly kind.
  - Burst: Changed horizontal code focus in the Burst Inspector to only scroll when branches fill more than half the space.
  - Burst: Changed so target job list in the Burst Inspector is a fold-able/expandable tree view, instead of a simple list.
  - Burst: Improved how optimisation remarks are displayed in the "LLVM IR Optimisation Diagnostics" tab in Burst Inspector to make them more useful.

  Fixes

  - 2D: Store directory path instead of file path as the last used asset path when doing a drag and drop to create a Tile Asset. ("UUM-25250")
  - Android: Do not move files in custom asset packs to src/main/assets, preserve the directory structure as it is. (UUM-15109)
  - Android: Fixed an issue causing build to fail, if custom asset pack does not have a valid structure. ("UUM-25501")
  - Android: Fixed an issue where Network.OperationalStatus would always return Unknown for Android. ("UUM-19683")
  - Android: Fixed the Time.deltaTime values so they are now stable on Android devices. ("UUM-10244")
  - Asset Bundles: Fixed issue where UnloadAllAssetBundles does not unload scene bundles. ("UUM-13510")
  - Asset Import: Fixed import of file with extension as file name. ("UUM-21730")
  - Build Pipeline: Fixed a BuildPipeline issue for the Android platform and MacStandalone builds which asks for a name and directory, despite having the last saved location details. This is triggered by using Ctrl+B (Windows) or Cmd+B (macOS). ("UUM-19897")
  - Burst: "LLVM IR Optimisation Diagnostics" tab in Burst Inspector was blank if "Native Debug Mode Compilation" was enabled; this is now fixed.
  - Burst: An issue that could cause function pointers to point to the wrong burst function, if a domain reload occurs and a compilation started before the reload, completes soon after.
  - Burst: Burst now updates its list of assembly paths if they change, for instance - adding packages that contain precompiled assemblies.
  - Burst: Crashes on 32bit cpus when an entry point with byvalue paramaters was called, when using dispatch (multiple supported cpu targets).
  - Burst: Enum values cast to integers in a format string previously output the enum type name; now the integer value is correctly output.
  - Burst: Fixed "Assertion failed on expression: "exception == SCRIPTING_NULL" errors and editor crash when the project path contained multi-byte Unicode characters.
  - Burst: Fixed "Callee/caller attribute ABI did not match!" error that could occur in certain player builds when calling an entry point that had at least one struct-by-value parameter.
  - Burst: Fixed "Plain Without Debug Information" outputting assembly with debug information.
  - Burst: Fixed a hashing error that could occur when a struct implements a generic interface multiple times with different generic parameters.
  - Burst: Fixed a stall that could occur at Editor shutdown.
  - Burst: Fixed a BadImageFormatException error that could occur in DOTS Runtime builds.
  - Burst: Fixed an issue the definition order of overloaded methods with function pointer parameters would decide which overload was actually being used.
  - Burst: Fixed AoT linking error on Windows Link based linkers when file paths (typically user names/home folders) contain non-ASCII characters.
  - Burst: Fixed ARM vector registers not being highlighted.
  - Burst: Fixed BC1361 error when trying to compile large static readonly arrays.
  - Burst: Fixed bug in a small set of managed fallback versions of intrinsics, where the bitwise representation of float values would not be maintained.
  - Burst: Fixed Burst compilation on QNX Arm.
  - Burst: Fixed Burst Inspector sometimes throwing ArugmentOutOfRangeException when copying without color-tags from assembly that is colored.
  - Burst: Fixed burst tree view items leading to wrong job if some jobs where hidden from view by filter or similar.
  - Burst: Fixed compilation error when using CompileFunctionPointer from Burst in code compiled with Roslyn on  .NET 7+.
  - Burst: Fixed compiler AccessViolationException that could occur when compiling two or more types with the same name but different source assemblies.
  - Burst: Fixed compiler crash when invoking FunctionPointers based on a generic delegate in DOTS Runtime.
  - Burst: Fixed error when calling direct call method from background thread without having previously called a BurstCompiler API from the main thread.
  - Burst: Fixed internal compiler error that occurred when creating debug metadata from certain obfuscated dlls.
  - Burst: Fixed internal compiler error when implcitly converting an array to a Span.
  - Burst: Fixed managed fallback implementation of Sse4_2.cmpestrs.
  - Burst: Fixed module verification errors when using overloaded functions as function pointers.
  - Burst: Fixed namespace collision that could occur between Unity.Burst.Cecil.dll and the com.unity.nuget.mono-cecil package.
  - Burst: Fixed player build error that could occur if the project contains an assembly whose name doesn't match the assembly filename.
  - Burst: Fixed the inspector job tree view splitting jobs, with '.' in their parameters.
  - Burst: Fixed visual artifact in Burst Inspector, where block of enhanced code was cut at the bottom.
  - Editor: Added more protection if an error happens when loading a layout. That said there seems to be something fishy in the Luna package that creates the corrupted state in the first place. Package is shipped as a dll so I cannot debug it more. ("UUM-12892")
  - Editor: Allow opening Focus inspector on non multi-edit objects. ("UUM-19504")
  - Editor: Copy hideflags to the cloned object when instantiating a GameObject. (UUM-22863)
  - Editor: Fixed a bug where AssetBundle builds could fail due to incorrectly reported errors about script serialization mismatches. ("UUM-19452")
  - Editor: Fixed a crash on shutdown when using the cli option -cacheServerWaitForUploadCompletion.
  - Editor: Fixed a regression that changed the default behaviour of animators on disabled. (UUM-27229)
  - Editor: Fixed an issue with the initialization of raytracing which could fail during certain frames. (UUM-26885)
  - Editor: Fixed backspace allowing to delete script name in AddComponent dialog. ("UUM-3440")
  - Editor: Fixed drag and drop crashes the editor if the window is docked. ("UUM-23241")
  - Editor: Fixed error when opening the "Select Preset" window while having a user defined Preset class assets. ("UUM-11334")
  - Editor: Fixed error while deleting a QueryBlock. ("UUM-19945")
  - Editor: Fixed hangup when evaluating SearchExpression, synchronous in main thread. (UUM-14546)
  - Editor: Fixed Mac Editor crash on sprite Drag Markdig.Syntax.Inlines.HtmlEntityInline Drop. ("UUM-20950")
  - Editor: Fixed potential crash with non-gameobject selections during domain reload.
  - Editor: Fixed Slowdown spikes when moving an object in the scene caused by the PropertyDatabase. ("UUM-22631")
  - Editor: Fixed the inspector Transform Component foldout not responding to input on the top half. ("UUM-16138")
  - Editor: Fixed the prefab override indicator not being shown when the component was overridden. ("UUM-3473")
  - Editor: Make Light Probes be affected by back-facing triangles when baking with the GPU Lightmapper. (UUM-7699)
  - Editor: MeshFilter header update title on multi edit. ("UUM-19502")
  - Editor: Show simple Unity version in release build. In source build or devMode: show the full version with revision. ("UUM-23056")
  - Entities Graphics: Fixed an issue where lightmaps involving lights inside subscenes could be too bright. (UUM-26371)
  - Entities Graphics: Fixed BatchRendererGroup occlusion probe sampling for HDRP. (UUM-24996)
  - GI: Fixed an issue where lightmaps would be swapped when entering playmode when the "Reload Scene" option is disabled. ("UUM-21437")
  - GI: Fixed the help link at the top of the Lighting Window. ("UUM-25787")
  - Graphics: Fixed glitches on macOS when the rendering path is set to deferred. ("UUM-21567")
  - Graphics: Fixed SSAO in URP when using non-uniform rendering. (UUM-15795)
  - HDRP: Fixed a serialization issue affecting other objects.
  - IL2CPP: Fixed crash when memory profiler is enabled. ("UUM-18685")
  - IL2CPP: Fixed the InvalidCastException being thrown when you serialize jagged arrays using BinaryFormatter. ("UUM-23156")
  - IL2CPP: Fixed UnintializedDataAccessException when processing a function pointer that has a function pointer as a parameter. ("UUM-9030")
  - Kernel: Fixed broken RECORD_ALLOCATION_SITES functionalit. (UUM-26702)
  - Kernel: Fixed crash resulting from UnityDefaultAllocator not tracking all allocations. (UUM-23090)
  - Kernel: Fixed potential crash at app shutdown. (UUM-26528)
  - Kernel: Fixed unstable test ThreadSafeLinearAllocator AllocDealloc_On10Threads_DoesNotCrash. (UUM-20607)
  - Linux: Fixed panel focus switching when arrow keys are pressed while in play mode. ("UUM-21632")
  - Linux: Fixed the Null Reference Exception thrown when you rotate in Scene View and move the cursor outside the boundary. ("UUM-21895")
  - macOS: The macOS Player no longer contains an empty area gap on each screen vertical side when rendering fullscreen on Macs with a notch. (UUM-12632)
  - Particles: Corrected sub-emitter simulation to ensure particle ribbons are connected in the correct order. ("UUM-945")
  - Particles: Fixed a Particle System rendering corruption. ("UUM-21106")
  - Prefabs: Disabled IMGUI ReorderableList elements when previewing overridden values PrefabMode InContext. ("UUM-13618")
  - Scene/Game View: Fixed windows implementing ISupportOverlays incorrectly showing Overlays targeting implementing classes. (UUM-26841)
  - Scripting: Fixed domain reload and reference issues on assets that reference scripts from a Plugin that's not loaded in the domain. ("UUM-21935")
  - Scripting: Fixed possible crash when handling of asmdef compiled assemblies thats, thats been copied into the Project.
  - Scripting: Moving scripts around in project breaks GameObject's. ("UUM-25445")
  - Scripting: When using additional file in rsp breaks MonoBehaviours. ("UUM-25109")
  - uGUI: Fixed CanvasRenderer color reset on Clear. ("UUM-3527")
  - uGUI: Fixed NullReferenceException in Image.sprite when setting a new Sprite and the current Sprite.Texture is null. ("UUM-13053")
  - uGUI: Fixed setting "Additional Shader Channels" in Canvas for all cases. ("UUM-24730")
  - UI Elements: Fixed unable to expand import result in inspectorMarkdig.Syntax.Inlines.HtmlInline
    - First, the ListView w/ Foldout header that is created by PropertyField was missing a setting so that it could receive pointer events when disabledMarkdig.Syntax.Inlines.HtmlInline
    - Second, the Clickable manipulator did not treat events properly when disabled. (UUM-26082)
  - UI Toolkit: Fixed color tint transitions not working for sprites. ("UUM-25743")
  - UI Toolkit: Fixed ListView binding with negative indexes when a negative scrolloffset was applied. ("UUM-12868")
  - UI Toolkit: Fixed the UI document so it now has the correct size for multiple displays. ("UUM-18757")
  - Universal RP: Fixed an issue so that deferred rendering now works correctly in builds with Accurate GBuffer Normals enabled. ("UUM-25112")
  - Universal RP: Fixed issue where disabling/enabling ShadowCaster2Ds can create duplicate shadows. ("UUM-16927")
  - URP: 2D - Fixed 2D Sprite Light Markdig.Syntax.Inlines.HtmlEntityInline Freeform Light fast normal map quality setting to correctly use normal map. (UUM-4613)
  - URP: 2D - Fixed a bug with ShadowCaster2D's shadow mesh bounds which was causing shadows to disappear. ("UUM-19090")
  - URP: 2D - Fixed GC.Allocs with sorting layers in Light2D. ("UUM-1929")
  - VFX Graph: Added extra memory to allow external threads to steal VFX update jobs. (UUM-22049)
  - VFX Graph: Added missing DepthNormal pass for Unlit Markdig.Syntax.Inlines.HtmlEntityInline Unify SSAO integration with Unlit for URP. ("UUM-19559")
  - VFX Graph: Enabled renamed blackboard categories that have been duplicated to stay on screen. ("UUM-17435")
  - VFX Graph: Fixed a serialization issue causing a potential crash due to bounds computation. ("UUM-25009")
  - VFX Graph: Fixed an error raised in the console when undoing shader assignment in the Mesh output node. ("UUM-16367")
  - VFX Graph: Fixed an issue where VFXs were not culled properly, causing flickering shadows. ("UUM-14271")
  - VFX Graph: Fixed bounds padding so they are no longer ignored. ("UUM-15655")
  - VFX Graph: Fixed the play / pause button in the VFX Graph control panel so it now switches the icon depending on the current state. ("UUM-5065")
  - VFX Graph: Fixed unroll related shader compilation issue on DXC. (UUM-6058)
  - VFX Graph: Removed blackboard category with only spaces in the name. ("UUM-17495")
  - VFX Graph: Safer GPUEvent when trying to append more event than destination capacity. ("UUM-572")
  - Video: Fixed a crash in ImageFilters::Blit when saving a Timeline containing a Video while the Timeline is playing. ("UUM-12908")
  - Video: Fixed error when adding file:// to point at a local file in the VideoPlayer on Android. ("UUM-16166")
  - Windows: Fixed a potential crash during Windows Player cleanup. ("UUM-25383")
  - Windows: Fixed Build to source folder when the project build dir is deleted. (UUM-25240)
  - XR: Fixed TAA to work correctly with Foveated Rendering when using Non-Uniform Raster. (UUM-16324)

ReleaseNotesUrl: https://unity3d.com/unity/whats-new/2022.2.9
PurchaseUrl: https://store.unity.com/
# InstallationNotes:
Documentations:
- DocumentLabel: Manual
  DocumentUrl: https://docs.unity3d.com/2022.1/Documentation/Manual/
ManifestType: defaultLocale
ManifestVersion: 1.2.0
