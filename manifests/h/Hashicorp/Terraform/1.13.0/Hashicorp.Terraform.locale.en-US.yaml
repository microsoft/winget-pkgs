# Created with YamlCreate.ps1 Dumplings Mod
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.10.0.schema.json

PackageIdentifier: Hashicorp.Terraform
PackageVersion: 1.13.0
PackageLocale: en-US
Publisher: HashiCorp
PublisherUrl: https://www.hashicorp.com/
PublisherSupportUrl: https://github.com/hashicorp/terraform/issues
PrivacyUrl: https://www.hashicorp.com/privacy
Author: HashiCorp, Inc.
PackageName: HashiCorp Terraform
PackageUrl: https://developer.hashicorp.com/terraform
License: BUSL-1.1
LicenseUrl: https://github.com/hashicorp/terraform/blob/HEAD/LICENSE
Copyright: Copyright (c) 2025 HashiCorp, Inc.
ShortDescription: A tool for building, changing, and versioning infrastructure safely and efficiently.
Description: |-
  Terraform is a tool for building, changing, and versioning infrastructure safely and efficiently. Terraform can manage existing and popular service providers as well as custom in-house solutions.
  The key features of Terraform are:
  - Infrastructure as Code: Infrastructure is described using a high-level configuration syntax. This allows a blueprint of your datacenter to be versioned and treated as you would any other code. Additionally, infrastructure can be shared and re-used.
  - Execution Plans: Terraform has a "planning" step where it generates an execution plan. The execution plan shows what Terraform will do when you call apply. This lets you avoid any surprises when Terraform manipulates infrastructure.
  - Resource Graph: Terraform builds a graph of all your resources, and parallelizes the creation and modification of any non-dependent resources. Because of this, Terraform builds infrastructure as efficiently as possible, and operators get insight into dependencies in their infrastructure.
  - Change Automation: Complex changesets can be applied to your infrastructure with minimal human interaction. With the previously mentioned execution plan and resource graph, you know exactly what Terraform will change and in what order, avoiding many possible human errors.
Moniker: terraform
ReleaseNotes: |-
  NEW FEATURES:
  - The new command terraform stacks exposes some stack operations through the cli. The available subcommands depend on the stacks plugin implementation. Use terraform stacks -help to see available commands. (#36931)
  ENHANCEMENTS:
  - Filesystem functions are now checked for consistent results to catch invalid data during apply (#37001)
  - Allow successful init when provider constraint matches at least one valid version (#37137)
  - Performance fix for evaluating high cardinality resources (#37154)
  - TF Test: Allow parallel execution of teardown operations (#37169)
  - terraform test: Test authors can now specify definitions for external variables that are referenced within test files directly within the test file itself. (#37195)
  - terraform test: File-level variable blocks can now reference run outputs and other variables." (#37205)
  - skip redundant comparisons when comparing planned set changes (#37280)
  - type checking: improve error message on type mismatches. (#37298)
  BUG FIXES:
  - Added a missing warning diagnostic that alerts users when child module contains an ignored cloud block. (#37180)
  - Nested module outputs could lose sensitivity, even when marked as such in the configuration (#37212)
  - workspace: Updated validation to reject workspaces named "" (#37267)
  - workspace: Updated the workspace delete command to reject "" as an invalid workspace name (#37275)
  - plan: truncate invalid or dynamic references in the relevant attributes (#37290)
  - Test run Parallelism of 1 should not result in deadlock (#37292)
  - static validation: detect invalid static references via indexes on objects. (#37298)
  - Fixes resource identity being dropped from state in certain cases (#37396)
  NOTES:
  - The command terraform rpcapi is now generally available. It is not intended for public consumption, but exposes certain Terraform operations through an RPC interface compatible with go-plugin. (#37067)
  UPGRADE NOTES:
  - terraform test: External variables referenced within test files should now be accompanied by a variable definition block within the test file. This is optional, but users with complex external variables may see error diagnostics without the additional variable definition. (#37195)
ReleaseNotesUrl: https://github.com/hashicorp/terraform/releases/tag/v1.13.0
Documentations:
- DocumentLabel: Documentation
  DocumentUrl: https://developer.hashicorp.com/terraform/docs
- DocumentLabel: Tutorials
  DocumentUrl: https://developer.hashicorp.com/terraform/tutorials
ManifestType: defaultLocale
ManifestVersion: 1.10.0
