# Created with WinGet Updater using komac v2.12.1
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.10.0.schema.json

PackageIdentifier: AGSProjectTeam.AdventureGameStudio
PackageVersion: 3.6.2.12
PackageLocale: en-US
Publisher: AGS Project Team
PublisherUrl: https://www.adventuregamestudio.co.uk/
PublisherSupportUrl: https://www.adventuregamestudio.co.uk/site/community
Author: AGSProjectTeam
PackageName: Adventure Game Studio
PackageUrl: https://github.com/adventuregamestudio/ags
License: Artistic License 2.0
LicenseUrl: https://github.com/adventuregamestudio/ags/blob/HEAD/License.txt
Copyright: Copyright (c) 1999-2011 Chris Jones and 2011-2024 various contributors.
CopyrightUrl: https://github.com/adventuregamestudio/ags/blob/master/Copyright.txt
ShortDescription: Adventure Game Studio (AGS) provides the tools to make your own adventure, for free!
Moniker: ags
ReleaseNotes: |-
  This is a 3.6.2 Patch 2.
  Editor:
  - The multiline Text edit window can now be called for all the "free text" properties in the game, by pressing the "..." button.
  - "Edit Custom Properties" and "Edit property schema" dialogs are now resizable, and remember their size and position.
  - When making a game template Editor will now use an optional "template.files" file, if one is found in the project folder. This file should contain include/exclude filepath patterns, and lets include subfolders into the template too.
  - Fixed Editor application freezing at the Splash screen if any exception occured when starting up. Now it should close itself properly.
  - Fixed "Export sprites" dialog visual style and being cut on Windows 11.
  - Fixed script preprocessor not recognizing macros which begin with a underscore.
  - Fixed that error reports occuring when opening a room had only their first line displayed in a message box, instead of a full error message.
  - Fixed wrongly issued warnings about voice-over filenames not matching selected naming style.
  - Fixed that during a test game run new function names may still be auto-inserted into the object's event property when user clicks on "..." button (or double clicks the gui control), while actual functions won't be added to script, as the script is forbidden from being modified during game test.
  - Fixed that if there was already a function name inserted into a gui control's event property, but actual function not present in script, the function is not created when user double clicks the gui control.
  Compiler:
  - Fixed error occuring when processing a global variable which type is an empty struct.
  Script API:
  - Fixed default values for save slots range in FillSaveGameList(), RestoreGameDialog() and SaveGameDialog(), they did not match historical behavior of these functions. The default slots range is now 0-99.
  Engine:
  - Fixed game refusing to load if a font file is not found, use font 0 as a fallback instead.
    (This restores a historical behavior, but now it works for any font, not only WFNs.)
  - Fixed characters being forcedly moved to a walkable area after a call to FaceLocation() or a similar function.
  - Fixed a single black frame displayed before the video when PlayVideo() is called.
  - Fixed "fade-out" transition could sometimes not play to the end.
  - Fixed mouse cursor and @OVERHOTSPOT@ labels displayed for 1 frame between fade-in and "After fade-in" event, which could cause them flickering unexpectedly if "After fade-in" script contains blocking cutscene.
  - Fixed @OVERHOTSPOT@ labels not redrawing after blocking action ends if the cursor remains over the same hotspot where it was before the action.
  - Fixed game interface could become enabled for a single game frame each time right before the Dialog options are displayed. This could cause e.g. a "normal" cursor or @OVERHOTSPOT@ text to appear for the split second.
  - Fixed gui texts aligned to Bottom or Right had a position mistake in 1 pixel.
  - Fixed slightly broken slider's handle position for thin sliders with very small handle sprites.
  - Fixed SayAt() not being clamped at the screen width (as it was historically).
  - Fixed AudioClip.IsAvailable not working correctly.
  - Fixed sprite cache or texture cache not initializing properly if their size in config is assigned to a too large number. The cache sizes will be now correctly limited to the max possible size available to the current engine build (32-bit or 64-bit).
  Compatibility:
  - Corrected a fix for the misaligned text centering on buttons in pre-3.6.0 games (the previous fix introduced in 3.6.2 Patch 1 happened to be breaking some other cases).
  WinSetup:
  - If any of the cache sizes in config is set to a value not present in the option lists, the list will be assigned to the nearest matching value, instead of resetting to default.
ReleaseNotesUrl: https://github.com/adventuregamestudio/ags/releases/tag/v3.6.2.12
ManifestType: defaultLocale
ManifestVersion: 1.10.0
