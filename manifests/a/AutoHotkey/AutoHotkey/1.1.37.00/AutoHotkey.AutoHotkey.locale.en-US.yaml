# Created with YamlCreate.ps1 v2.2.8 $debug=QUSU.CRLF.7-3-5.Win32NT
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.4.0.schema.json

PackageIdentifier: AutoHotkey.AutoHotkey
PackageVersion: 1.1.37.00
PackageLocale: en-US
Publisher: AutoHotkey Foundation LLC
PublisherUrl: https://www.autohotkey.com/
PublisherSupportUrl: https://www.autohotkey.com/boards/
# PrivacyUrl:
Author: Steve Gray
PackageName: AutoHotkey
PackageUrl: https://www.autohotkey.com/
License: GPL-2.0
LicenseUrl: https://github.com/AutoHotkey/AutoHotkey/blob/alpha/license.txt
# Copyright:
# CopyrightUrl:
ShortDescription: Macro-creation and automation-oriented scripting utility for Windows.
Description: AutoHotkey is a free, open source macro-creation and automation software utility that allows users to automate repetitive tasks. It is driven by a custom scripting language that has special provision for defining keyboard shortcuts, otherwise known as hotkeys.
Moniker: ahk
Tags:
- automate
- automation
- hotkey
- macro
- shortcut
ReleaseNotes: |-
  Changed COM method and property calls to pass large integers as VT_I8, not VT_R8 (floating-point), so the original type and precision is retained. Integers in the 32-bit range are still passed as VT_I4.
  Added support for two-variable enumerators (for-loops) with IDispatch-wrapped AutoHotkey objects. Both the script invoking the object and the object itself must be running a supported AutoHotkey version.
  Added support for ByRef VARIANT in incoming COM calls. Instead of receiving a ComObject wrapper with the VT_BYREF|VT_VARIANT variant type, the script receives a temporary variable compatible with a normal ByRef parameter.
  Added support for omitting parameters in incoming COM calls. IDispatch allows omitting parameters by specifying a VARIANT of type VT_ERROR with value DISP_E_PARAMNOTFOUND. These values are now translated automatically instead of being wrapped in an object. The reverse translation was already done when calling COM methods in previous versions.
  Fixed VerCompare(a, ">" b) and reduced code size marginally.
  Fixed AltTab-related load-time errors to be consistent with other errors.
  Fixed errors thrown by a ComObject wrapper not being propagated correctly if it is called via an object/COM.
  Fixed the Hotkey GUI control to allow setting the symbols ^, ! and + as hotkeys.
  Fixed the Hotkey control to include modifiers when its value is set to a symbol.
  Fixed Menu Add overwriting items which were appended by Menu Insert.
  Fixed potential misbehaviour of InputHook.KeyOpt() with single chars.
  - Option removal potentially not affecting the corresponding SC.
  - Options potentially also being applied to sc000.
  Fixed a bug with custom combos where a set of hotkeys like a & b::, a:: and a up:: would fail to suppress the release of a if a:: alone is disabled with #If.
  Fixed a bug where a key-down event is correctly suppressed by a hotkey, but sending an additional key-down with SendLevel > 0 would prevent the subsequent key-up from being suppressed, even if the sent event is ignored due to #InputLevel.
  Fixed a & b up:: not suppressing b if a & b:: is present but disabled by #If.
  Optimized allocation of cached COM property names for built-in IDispatch.
  Refactored code to support a build configuration for AutoHotkey as a DLL.
ReleaseNotesUrl: https://github.com/AutoHotkey/AutoHotkey/releases/tag/v1.1.37.00
# PurchaseUrl:
# InstallationNotes:
Documentations:
- DocumentLabel: Documentation
  DocumentUrl: https://www.autohotkey.com/docs/v1/
ManifestType: defaultLocale
ManifestVersion: 1.4.0
