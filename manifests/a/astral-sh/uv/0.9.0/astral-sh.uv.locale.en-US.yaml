# Created with YamlCreate.ps1 Dumplings Mod
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.10.0.schema.json

PackageIdentifier: astral-sh.uv
PackageVersion: 0.9.0
PackageLocale: en-US
Publisher: Astral Software Inc.
PublisherUrl: https://astral.sh/
PublisherSupportUrl: https://github.com/astral-sh/uv/issues
Author: Astral Software Inc.
PackageName: uv
PackageUrl: https://github.com/astral-sh/uv
License: Apache-2.0 or MIT
LicenseUrl: https://github.com/astral-sh/uv/blob/HEAD/README.md#license
Copyright: Copyright (c) 2024 Astral Software Inc.
ShortDescription: An extremely fast Python package and project manager, written in Rust.
Description: An extremely fast Python package and project manager, written in Rust. Designed as a single tool to replace pip, pip-tools, pipx, poetry, pyenv, twine, virtualenv workflows, and more.
Moniker: uv
Tags:
- python
ReleaseNotes: |-
  Released on 2025-10-07.
  Breaking changes
  This breaking release is primarily motivated by the release of Python 3.14, which contains some breaking changes (we recommend reading the "What's new in Python 3.14" page). uv may use Python 3.14 in cases where it previously used 3.13, e.g., if you have not pinned your Python version and do not have any Python versions installed on your machine. While we think this is uncommon, we prefer to be cautious. We've included some additional small changes that could break workflows.
  There are no breaking changes to uv_build. If you have an upper bound in your [build-system] table, you should update it.
  - Python 3.14 is now the default stable version
    The default Python version has changed from 3.13 to 3.14. This applies to Python version installation when no Python version is requested, e.g., uv python install. By default, uv will use the system Python version if present, so this may not cause changes to general use of uv. For example, if Python 3.13 is installed already, then uv venv will use that version. If no Python versions are installed on a machine and automatic downloads are enabled, uv will now use 3.14 instead of 3.13, e.g., for uv venv or uvx python. This change will not affect users who are using a .python-version file to pin to a specific Python version.
  - Allow use of free-threaded variants in Python 3.14+ without explicit opt-in (#16142)
    Previously, free-threaded variants of Python were considered experimental and required explicit opt-in (i.e., with 3.14t) for usage. Now uv will allow use of free-threaded Python 3.14+ interpreters without explicit selection. The GIL-enabled build of Python will still be preferred, e.g., when performing an installation with uv python install 3.14. However, e.g., if a free-threaded interpreter comes before a GIL-enabled build on the PATH, it will be used. This change does not apply to free-threaded Python 3.13 interpreters, which will continue to require opt-in.
  - Use Python 3.14 stable Docker images (#16150)
    Previously, the Python 3.14 images had an -rc suffix, e.g., python:3.14-rc-alpine or
    python:3.14-rc-trixie. Now, the -rc suffix has been removed to match the stable
    upstream images. The -rc images tags will no longer be
    updated. This change should not break existing workflows.
  - Upgrade Alpine Docker image to Alpine 3.22
    Previously, the uv:alpine Docker image was based on Alpine 3.21. Now, this image is based on Alpine 3.22. The previous image can be recovered with uv:alpine3.21 and will continue to be updated until a future release.
  - Upgrade Debian Docker images to Debian 13 "Trixie"
    Previously, the uv:debian and uv:debian-slim Docker images were based on Debian 12 "Bookworm". Now, these images are based on Debian 13 "Trixie". The previous images can be recovered with uv:bookworm and uv:bookworm-slim and will continue to be updated until a future release.
  - Fix incorrect output path when a trailing / is used in uv build (#15133)
    When using uv build in a workspace, the artifacts are intended to be written to a dist directory in the workspace root. A bug caused workspace root determination to fail when the input path included a trailing / causing the dist directory to be placed in the child directory. This bug has been fixed in this release. For example, uv build child/ is used, the output path will now be in <workspace root>/dist/ rather than <workspace root>/child/dist/.
  Python
  - Add CPython 3.14.0
  - Add CPython 3.13.8
  Enhancements
  - Don't warn when dependency is constraint by other dependency (#16149)
  Bug fixes
  - Fix uv python upgrade / install output when there is a no-op for one request (#16158)
  - Surface pinned-version hint when uv tool upgrade canâ€™t move the tool (#16081)
  - Ban pre-release versions in uv python upgrade requests (#16160)
  - Fix uv python upgrade replacement of installed binaries on pre-release to stable (#16159)
  Documentation
  - Update uv pip compile args in layout.md (#16155)
ReleaseNotesUrl: https://github.com/astral-sh/uv/releases/tag/0.9.0
Documentations:
- DocumentLabel: Docs
  DocumentUrl: https://docs.astral.sh/uv/
ManifestType: defaultLocale
ManifestVersion: 1.10.0
