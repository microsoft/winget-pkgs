# Created with WinGet Releaser using komac v2.13.0
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.10.0.schema.json

PackageIdentifier: aelassas.Servy
PackageVersion: '2.6'
PackageLocale: en-US
Publisher: Akram El Assas
PublisherUrl: https://github.com/aelassas
PublisherSupportUrl: https://github.com/aelassas/servy/issues
Author: Akram El Assas
PackageName: Servy
PackageUrl: https://servy-win.github.io/
License: MIT
LicenseUrl: https://github.com/aelassas/servy/blob/HEAD/LICENSE.txt
Copyright: Copyright (c) 2025 Akram El Assas
ShortDescription: Servy lets you run any app as a native Windows service with full control over working directory, startup type, process priority, logging, health checks, pre-launch scripts and parameters.
Description: |-
  Servy lets you run any app as a native Windows service with full control over the working directory, startup type, process priority, logging, health checks, environment variables, dependencies, pre-launch and post-launch hooks, and parameters. It's designed to be a modern, full-featured alternative to NSSM and WinSW.

  Features
  - Clean, simple UI
  - Monitor and manage all installed services with Servy Manager
  - Real-time CPU and RAM usage tracking for installed services
  - CLI and PowerShell module for full scripting and automated deployments
  - Run any executable as a Windows service
  - Set service name, description, startup type, priority, working directory, environment variables, dependencies, and parameters
  - Environment variable expansion supported in both environment variables and process parameters
  - Run services as Local System, local user, domain account, or Group Managed Service Account
  - Redirect stdout/stderr to log files with automatic size-based rotation
  - Supports `Ctrl+C` for command-line apps, close-window for GUI apps, and force kill if unresponsive
  - Run pre-launch hook before starting the service, with retries, timeout, logging and failure handling
  - Run post-launch hook after the application starts successfully
  - Prevent orphaned/zombie processes with improved lifecycle management and ensuring resource cleanup
  - Health checks and automatic service recovery
  - Browse and search logs by level, date, and keyword for faster troubleshooting from Servy Manager
  - Export/Import service configurations
  - Service Event Notification alerts on service failures via Windows notifications and email
  - Compatible with Windows 7â€“11 x64 and Windows Server editions

  Who is it for?
  - Developers: Run development servers, scripts, or custom tools as services without extra setup.
  - Sysadmins & IT professionals: Ensure critical background processes stay alive, monitored, and properly logged.
  - Teams or organizations: Automate background services reliably across multiple machines.
Moniker: servy
Tags:
- background-service
- dotnet
- nssm
- service-wrapper
- service-manager
- windows-service
- windows-tools
- winsw
ReleaseNotes: |-
  - fix(service): resolve stdout/stderr UTF-8 encoding issues (#20)
  - fix(manager): ensure service list is sorted correctly
  - fix(service): remove unnecessary logs
ReleaseNotesUrl: https://github.com/aelassas/servy/releases/tag/v2.6
Documentations:
- DocumentLabel: Wiki
  DocumentUrl: https://github.com/aelassas/servy/wiki
ManifestType: defaultLocale
ManifestVersion: 1.10.0

