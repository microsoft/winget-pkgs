# Created with komac v2.13.0
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.10.0.schema.json

PackageIdentifier: albertony.npiperelay
PackageVersion: 1.9.1
PackageLocale: en-US
Publisher: albertony
PublisherUrl: https://github.com/albertony/npiperelay
PublisherSupportUrl: https://github.com/albertony/npiperelay/issues
PackageName: npiperelay
PackageUrl: https://github.com/albertony/npiperelay
License: MIT
LicenseUrl: https://github.com/albertony/npiperelay/blob/fork/LICENSE
ShortDescription: access a Windows named pipe compatible with command-line tools and WSL
Description: >
  npiperelay is a tool that allows you to access a Windows named pipe in a way
  that is more compatible with a variety of command-line tools. With it, you can
  use Windows named pipes from the Windows Subsystem for Linux (WSL).
  Essentially it exposes stdin and stdout to processes in WSL, and relays
  information to a named pipe used by processes running in Windows, typically
  with help of the socat tool in the WSL distro.
Moniker: npiperelay
ReleaseNotes: |-
  This is a release of my forked project, from branch fork. See below for full
  changelog, listing all commits since previous fork release. The primary asset of
  the release is a direct download link for a ready-to-use build of the
  application's single executable, as well as an alternative .zip archive
  containing the same executable. It is built with Go version 1.25.2.

  ### About this fork

  This release is from my fork of jstarks/npiperelay, adding some smaller
  improvements on top of upstream release v0.1.0. The changes are conservative;
  primary concern is to keep the code updated and secure, considering upstream has
  not been updated since this first release back in mid 2020. See previous release
  notes for fork releases starting with v1.0.0 to learn about all changes.

  ### Antivirus

  If your local antivirus treats the downloaded archive or executable as
  suspicious or malicious, you should try to report it as a false positive, e.g.
  to Symantec on symsubmit.symantec.com (select "Clean software incorrectly
  detected"). At the time of the release, no security vendors on VirusTotal
  flagged the asset download urls as malicious, but some very few (well below 10%)
  did flag the zip archive and executable files themselves (see report for each of
  the assets in expandable section below). The implementation is less than 300
  lines of go code, plus a single, commonly used, third party dependency. The
  source code is automatically run through vulnerability analysis, using Go's
  govulncheck and GitHub's CodeQL, and a long list of code quality checks
  (linters), using golangci-lint (see .golangci.yml for the complete list). If you
  do worry, you are free to analyse the code yourself, and you can also build the
  executable locally from source.

  ### Changelog

  Commits since previous fork release:

  - 1617dce Bump golang.org/x/sys from 0.36.0 to 0.37.0
  - 3b2820f Bump golang.org/x/sys from 0.35.0 to 0.36.0
  - 4565103 Bump actions/setup-go from 5 to 6
  - 7ac9be5 Cleanup golangci-lint configuration
  - 831260d Fix spelling in GoReleaser release notes template

  (Application executable in release assets built with Go version 1.25.2).
ReleaseNotesUrl: https://github.com/albertony/npiperelay/releases/tag/v1.9.1
ManifestType: defaultLocale
ManifestVersion: 1.10.0
