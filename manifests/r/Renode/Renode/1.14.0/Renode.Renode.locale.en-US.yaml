# Created with WinGet Automation using Komac v1.10.1
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.5.0.schema.json

PackageIdentifier: Renode.Renode
PackageVersion: 1.14.0
PackageLocale: en-US
Publisher: Antmicro
PublisherUrl: https://antmicro.com
PublisherSupportUrl: https://github.com/renode/renode/issues
Author: Antmicro
PackageName: Renode
PackageUrl: https://renode.io
License: MIT License
LicenseUrl: https://github.com/renode/renode/blob/master/LICENSE
Copyright: Copyright (c) 2018-2021 Renode
CopyrightUrl: https://github.com/renode/renode/blob/master/LICENSE
ShortDescription: Renode is an open source software development framework with commercial support from Antmicro that lets you develop, debug and test multi-node device systems reliably, scalably and effectively.
Description: Renode is a development framework which accelerates IoT and embedded systems development by letting you simulate physical hardware systems - including both the CPU, peripherals, sensors, environment and wired or wireless medium between nodes.  It lets you run, debug and test unmodified embedded software on your PC - from bare System-on-Chips, through complete devices to multi-node systems.
Moniker: renode
Tags:
- debugging
- developing
- framework
- hardware-simulation
- testing
ReleaseNotes: |-
  - initial support for ARMv8-A, verified with a range of software, from Coreboot and U-Boot to Linux
  - initial support for ARMv8-R, verified with U-Boot and Zephyr
  - generic Cortex-A53 platform, in flavors with GICv3 and GICv2
  - generic Cortex-A78 platform
  - generic Cortex-R52 platform
  - HiFive Unmatched platform support, with UART, PWM, I2C, GPIO, Ethernet, QSPI and other peripherals
  - Nucleo WBA52CG with STM32WBA52
  - updated OpenTitan and EarlGrey platform to a newer version
  - various updates in STM32 platform files
  - translation support for Espressif ESP32 chips
  - ARM GIC, compatible with various specification versions
  - ARM generic timer
  - CMSDK APB UART
  - Cypress S25H Flash
  - EFR32xG2 I2C
  - EFR32xG2 RTCC
  - EFR32xG2 UART
  - Marvell Armada Timer
  - MXC UART
  - OMAP Timer
  - OpenTitan Entropy Distribution Network
  - Quectel BC66
  - Quectel BG96
  - SI7210 Temperature
  - SPI multiplexer
  - STM32F4 CRC
  - STM32F4 Flash
  - STM32H7 Flash
  - STM32WBA Flash
  - STM32H7 Hardware Semaphore
  - STM32H7 SPI
  - STM32WBA SPI
  - STM32WBA ADC
  - Synopsys DWC Ethernet QoS model, along with Linux-based tests
  - TMP108 Temperature sensor
  - Cortex-A53 and Cortex-A78 running Coreboot, ATF and Linux
  - Zephyr running echo_client demo on STM32F7-disco with Quectel BG96
  - basic Cortex-A53 Zephyr hello-world test and sample
  - additional Zephyr tests for Cortex-A53: synchronization, philosophers, kernel FPU sharing
  - seL4 Adder Sample test for Cortex-A53
  - range of Zephyr tests for Cortex-R52, along with custom-made, synthetic tests
  - precise pausing tests for LED and terminal tester
  - renode-test allows to run tests with a specified tag via the --include switch
  - DPI interface for external HDL simulators, supporting AXI4 interface
  - portable package creation on dotnet
  - option to have Robot test pause execution deterministically after a match in various testers: UART, LED, log
  - duty cycle detection in LED tester
  - option to load files (e.g. raw binaries, hex files) to different localizations, like memories
  - support for relative paths in REPL file using directive
  - MPU support for Cortex-M
  - FAULTMASK register in Cortex-M
  - support for Trace Based Model performance simulator by Google
  - read and write hooks for peripherals
  - DPI interface support for co-simulating with RTL, with initial support for AXI4 bus
  - build.sh --profile-build switch to enable easier profiling of translation libraries
  - mechanism for progressing virtual time without executing instructions
  - support for subregions in Cortex-M MPU
  - support for FPU exceptions for Cortex-M
  - quad word (64-bit) peripherals API
  - CSV2RESD tool, for easy generation of RESD files
  - automatic selection of port used to communicate between Renode and Robot
  - option to pause emulation of Robot keywords
  - support for NMI interrupts in RISC-V
  - option to save Renode logs for all tests
  - Execute Python keyword in Robot tests
  - GDB interacts with Renode much faster
  - Renode now uses Robot Framework 6.0.2 for testing (with an option to use other versions at your own risk)
  - RESD format now accepts negative sampleOffsetTime
  - HEX files loader now supports extended segment address and start segment address sections
  - GDB autostart parameter now starts the simulation as soon as the debugger is connected
  - VerilatorIntegrationLibrary is now part of Renode packages
  - improved performance of the virtual time handling loop
  - improved parsing of RESD files
  - improved memory allocation mechanism to allocate memory regions larger than 2GiB
  - support for mapping memories on very high offsets
  - improved GDB connection robustness
  - exposed Monitor as a variable in Python hooks
  - improved the GDB compare helper script
  - improved handling of input files in TFTP server module
  - cursor blinking in terminal on Windows
  - crash when NetworkServer tried to log an invalid packet
  - race condition when trying to pause during the machine startup
  - platform serialization when CPU profiler is enabled
  - limit buffer behavior in verilated peripherals when they are reset
  - registration is no longer taken into account when looking for dependency cycles in REPL files
  - exception when issuing a DMA transaction during register access
  - reported PC on exception when executing vector instructions in RISC-V
  - several RISC-V vector instructions handling, e.g. vfredosum, vsetivli and vector_fpu
  - invalid instruction block exiting on RISC-V
  - handling of c.ebreak instruction in RISC-V, allowing for software breakpoints
  - building fixes on dotnet
  - removing of IO access flag from memory pages
  - invalidation of dirty translation blocks
  - handling of MMU faults on address translations
  - serialization of RESD files
  - automatic creation of TAP interface on Linux
  - ARM LDA/STL instructions decoding
  - handling of platforms containing both 32- and 64-bit CPUs
  - file permissions in .NET portable packages
  - handling of non-resettable register fields
  - several RISC-V vector instructions
  - handling of the context menu in the Monitor window
  - support for Cortex-M4F in LLVMDisassembler
  - packets matching method in NetworkInterfaceTester
  - address calculations in DMA engine
  - custom build properties handling in Renode build script
  - handling of time reporting and empty test cases in renode-test
  - AmbiqApollo4 Timer
  - ArrayMemory
  - AS6221 Temperature sensor
  - AT Command Modem
  - AT91 Timer
  - Cadence UART
  - Cortex-M Systick
  - EF32MG12 LDMA
  - Ibex
  - LIS2DW12 Accelerometer
  - LiteX I2C
  - LSM6DSO
  - MAX30208 Temperature sensor
  - MAX32650 GPIO
  - MAX32650 I2C
  - MAX32650 RTC
  - MAX32650 SPI
  - MAX32650 Timer
  - MAX32650 TPU
  - MAX32650 WDT
  - MAX86171 AFE
  - nRF52840 SPI
  - nRF52840 I2C
  - nRF52840 GPIO
  - OpenTitan HMAC
  - OpenTitan PLIC
  - OpenTitan ROM
  - OpenTitan OTP
  - OpenTitan Key Manager
  - OpenTitan Flash
  - OpenTitan Reset Manager
  - OpenTitan KMAC
  - OpenTitan CSRNG
  - OpenTitan Alert Handler
  - OpenTitan Timer
  - OpenTitan OTBN
  - PL011 UART
  - Quectel BC660K
  - SAMD5 UART
  - SiFive GPIO
  - Silencer
  - STM32 DMA
  - STM32G0 DMA
  - STM32 EXTI, with specific implementations for STM32F4, STM32H7 and STM32WBA
  - STM32 GPIO
  - STM32F7 I2C
  - STM32L0 LPTimer
  - STM32L0 RCC
  - STM32H7 RCC
  - STM32F4 RTC
  - STM32 SPI
  - STM32 Timer
  - STM32F7 USART
ReleaseNotesUrl: https://github.com/renode/renode/releases/tag/v1.14.0
ManifestType: defaultLocale
ManifestVersion: 1.5.0
