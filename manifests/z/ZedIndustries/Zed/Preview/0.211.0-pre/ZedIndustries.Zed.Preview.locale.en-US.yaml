# Created with WinGet Releaser using komac v2.13.0
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.10.0.schema.json

PackageIdentifier: ZedIndustries.Zed.Preview
PackageVersion: 0.211.0-pre
PackageLocale: en-US
Publisher: Zed Industries
PublisherUrl: https://zed.dev/
PublisherSupportUrl: https://zed.dev/support
PrivacyUrl: https://zed.dev/privacy-policy
Author: The Zed Industries Authors
PackageName: Zed Preview
PackageUrl: https://zed.dev/windows
License: GPL-3.0
LicenseUrl: https://github.com/zed-industries/zed/blob/main/LICENSE-GPL
Copyright: Copyright 2022 - 2025 Zed Industries, Inc.
ShortDescription: High-performance, multiplayer code editor from the creators of Atom and Tree-sitter.
Description: |-
  Zed is a next-generation code editor designed for high-performance collaboration with humans and AI.

  - Written from scratch in Rust to efficiently leverage multiple CPU cores and your GPU.
  - Integrate upcoming LLMs into your workflow to generate, transform, and analyze code.
  - Chat with teammates, write notes together, and share your screen and project. All included.
  - Zed now speaks WSL. You can open a Linux distro as a first-class “remote” target, edit projects that live inside it.
  - All of Zed’s AI features, including edit predictions and ACP-powered agents, are fully supported on Windows.
  - All Zed extensions now work seamlessly on Windows; no special steps, no caveats.
  - To run on almost all Windows versions, including VMs, we created a new rendering backend based on DirectX 11.
Tags:
- code-editor
- developer-tools
- editor
- text-editor
ReleaseNotes: |-
  This week's release includes a new Windows Arm64 build, a git: branch diff action to diff the current branch against main, many quality-of-life rendering improvements to markdown preview, the ability to quickly jump to the keymap editor from the command palette to set / change keybindings, and improved inlay hints stability.
  Features
  AI
  - Agent: Added file names and line numbers to symbol completions. (#40508; thanks pkondzior)
  - Agent: Added support for changing the Codestral endpoint for Edit Prediction. (#41116; thanks pedrxd)
    "edit_predictions": {
      "codestral": {
        "api_url": "https://codestral.mistral.ai",
        "model": "codestral-latest",
        "max_tokens": 150
      }
    }
  - Agent: Improved the editing previous messages UX by focusing in the agent panel's message editor after regenerating a prompt, instead of moving focus to the nearest regular buffer. (#40938)
  - Added support for GitHub Copilot /responses endpoint. (#40762; thanks somtooo)
  Git
  - Added the ability to view the diff of the current branch since main with git: branch diff from the command palette. (#40188)
  Debugger
  - Added a horizontal scrollbar for frame item and tooltip for variables. (#41261; thanks bnjjj)
  - Added inline variable value display during debugging for JavaScript, TypeScript, and TSX. Variable values now appear inline in the editor while debugging, matching the experience available for Rust, Python, and Go. (#40914; thanks taciclei)
  Settings UI
  - Added a warning banner when the settings file you are looking at is out of date and needs to be migrated. (#41112)
  - Enabled editing project settings for worktrees that don't have a project setting file. (#40971)
  Languages
  - Markdown Preview:
    - Added support for HTML lists. (#39553; thanks RemcoSmitsDev)
    - Added support for HTML table column align attribute. (#41163; thanks RemcoSmitsDev)
    - Added support for colspan and rowspan for HTML tables. (#39898; thanks RemcoSmitsDev)
    - Improved nested list item prefix style. (#39606; thanks huacnlee)
  - Go: Added comment injections for go.mod and go.work. (#40842; thanks thedadams)
  Vim
  - Added Vim motions on settings navigation menu. (#39988; thanks AlvaroParker)
  - Helix: Added alt-o & alt-i to editor: select {larger,smaller} syntax node respectively. (#40527; thanks atahrijouti)
  - Helix: Added alt-p & alt-n to editor: select {next,previous} syntax node respectively. (#40527; thanks atahrijouti)
  Windows
  - Added builds for Arm64 architecture. (#40855)
  Collaboration
  - Added a Copy Channel Notes Link action to right-click menu of Zed channels. (#41298)
  - Added a prevent_sharing_in_public_channels project setting for preventing projects from being shared in public channels. (#41395)
  Other
  - Added a footer to the command palette with buttons to add or change the selected action's keybinding. Both open the keymap editor, though the add button takes you directly to the modal for recording a new keybind. (#40825)
  - Added support for counting wrapped lines as relative lines and for displaying line numbers for wrapped segments. Changed relative_line_numbers from a boolean to an enum: enabled, disabled, or wrapped. (#39268; thanks thomasheartman)
  - Added editor: go to next reference and editor: go to previous reference editor actions. (#41078)
  - Added a Toggle All Docks editor action and updated the keymaps to use it. (#40567; thanks Adir-Shemesh)
  - Added the ResetAllZoom and ResetAgentZoom actions, allowing to return the zoom level across the whole app and/or just in the agent panel to its default/original value. (#41124)
  - Improved the --wait flag in Zed's CLI so as to always open the provided file in the currently focused window. (#41051)
  - Improved hover popover respecting settings delay correctly. (#41149; thanks deltamaya)
  - Improved handling of unsplittable panes. (#41215)
  - Increased the initial connection timeout to 60 seconds for remote dev. (#41339; thanks versecafe)
  - Allowed About Zed menu entry to work when all Zed windows are closed. (#41272)
  - Keybinding: Pane key context now includes buffer_search_deployed identifier. (#41193; thanks FloppyDisco)
  - Surfaced Jupyter client errors in the UI. (#40886; thanks lionel-)
  - Reduced selection opacity when the editor is out of focus to make inactive states clearer. (#40925)
  - Reworked inlay hints to be less error-prone. (#40183)
  Bug Fixes
  - Agent: Fixed an issue where all tools would be presented as available even when using the Minimal profile. (#40413; thanks NotSpooky)
  - Agent: Fixed an issue where the agent panel's buffer and UI font size wouldn't scale proportionally. (#41121)
  - Agent: Fixed an issue where the web search tool would show up in the profile selector even when not using a model via Zed Pro. (#40917)
  - Codex: Fixed an issue where downloading a new version would not delete older versions. (#41191)
  - Debugger: Fixed a panic that could occur when minimizing Zed. (#41352)
  - Debugger: Fixed debug scenario picker not showing language subtitles. (#40977)
  - Vim: Fixed Editor: wrap selection in tags when in visual line mode. (#41030; thanks Trombach)
  - REPL: Fixed a bug where the copy button was not working for error output. (#40669; thanks h-michaelson20)
  - Settings UI: Fixed an issue where the user settings file would not appear as an available settings file if it failed to parse or didn't exist. (#41112)
  - Settings UI: Fixed wrongly-focused previous element on number_field decrement. (#41095; thanks ToBinio)
  - Settings UI: Fixed memory leak. (#41036)
  - Settings UI: Fixed a bug where project setting files wouldn't be detected if they were created or opened after while an active settings window is open. (#40968)
  - Settings UI: Fixed a bug where duplicate file names showed in the header files. (#40943)
  - Keymap Editor: Fixed an issue where attempting to add or update a key binding with an empty keymap.json file would fail. (#40909)
  - Keymap Editor: Fixed an issue where showing matching keystrokes in the modal would not clear an active text query. (#41296)
  - Git: Fixed an issue where git would save clean files when staging, causing unnecessary rebuilds in external file watchers like vite. (#41047)
  - Git: Fixed some cases where the project diff would fail to update in response to git events. (#40662)
  - Vim: Fixed vim::NormalBefore not entering helix_normal mode correctly. (#40528; thanks paneutral)
  - macOS: Fixed some fonts rendering with absurd spacing. (#41043)
  - Helix: Fixed Ctrl+P and Ctrl+N navigation in Helix mode when using "Search project files". Ctrl+P now correctly moves to the previous result and Ctrl+N moves to the next result, matching standard Helix behavior. (#40877; thanks virajbhartiya)
  - Emacs Keymap: Fixed a problem where keys would fall back to their default keymap binding on certain conditions. (#40631; thanks Affonso-Gui)
  - Emacs Keymap: Fixed a bug where alt-f and alt-b didn't operate on full words, like they do in the Emacs default. (#40631; thanks Affonso-Gui)
  - Fixed extension panics crashing Zed. (#40883, #40936)
  - Fixed stack overflows when constructing large ropes. (#41397)
  - Fixed diagnostics for Ruff and Biome. (#41386)
  - Fixed a bug where the initial window title was incorrect on startup in Wayland. (#36844; thanks Sushants-Git)
  - Fixed an issue where the scrollbar track color would not update in case the theme was changed. (#41354)
  - Fixed ESLint linebreak-style errors by preserving line endings in LSP communication. (#38773; thanks devdattatalele)
  - Fixed Java language servers' completion defaults handling on Zed's side. (#41187; thanks playdohface)
  - Fixed duplicate process entries in WSL debug attach list. (#40591; thanks feeiyu)
  - Fixed issue where using workspace: save as would prevent users from opening the original file from which the new file was created. (#41012)
  - Fixed a bug where the cursor would not move to the duplicated line when duplicating a line upwards. (#41004; thanks TomPlanche)
  - Fixed panic in editor: copy highlight json action. (#40981)
  - Fixed Zed failing to run the HTML language server in some cases. (#40832)
  - Fixed an issue where the project panel's sticky entry could appear transparent on hover with certain themes. (#40944)
  - Fixed some cases where keybinds would appear with a slight delay, causing a flicker in the process. (#40927)
  - Fixed a rare issue where the extension page would stutter while scrolling. (#40899)
  - Fixed title overrides of singleton buffers not being replicated. (#40896)
  Breaking Changes and Notices
  - Agent: Improved discoverability of the previously called agent: quote selection action—which allows adding a text selection in a buffer as context within the agent panel—by renaming it to agent: add selection to thread and making it available from the right-click editor context menu as well as the Selection app menu. (#40897)
  - Fixed an issue with a settings migration that deprecated the code_actions_on_format setting. The code_actions_on_format setting has been un-deprecated, and affected users will have the bad migration rolled back with an updated migration. (#40409)
  - Enabled automatic import organization, via ruff, when saving Python files. (#41103)
  - Emacs Keymap: alt-x, ctrl-x b, and ctrl-x ctrl-b are now Workspace bindings. (#40631; thanks Affonso-Gui)
    To revert to the previous default behavior, use:
    "Python": { "code_actions_on_format": { "source.organizeImports.ruff": false } }
ReleaseNotesUrl: https://github.com/zed-industries/zed/releases/tag/v0.211.0-pre
PurchaseUrl: https://zed.dev/pricing
Documentations:
- DocumentLabel: Community Links
  DocumentUrl: https://zed.dev/community-links
- DocumentLabel: Getting Started
  DocumentUrl: https://zed.dev/docs/
ManifestType: defaultLocale
ManifestVersion: 1.10.0
