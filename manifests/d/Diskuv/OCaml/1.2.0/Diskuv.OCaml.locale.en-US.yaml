# Created with Komac v1.11.0
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.5.0.schema.json

PackageIdentifier: Diskuv.OCaml
PackageVersion: 1.2.0
PackageLocale: en-US
Publisher: Diskuv, Inc.
PublisherUrl: https://www.diskuv.com
PublisherSupportUrl: https://github.com/diskuv/dkml-installer-ocaml/issues
PrivacyUrl: https://diskuv.com/legal#privacy_policy
PackageName: Diskuv OCaml
PackageUrl: https://diskuv-ocaml.gitlab.io/distributions/dkml/#introduction
License: Apache License, Version 2.0
LicenseUrl: https://github.com/diskuv/dkml-installer-ocaml/blob/main/LICENSE
Copyright: Copyright 2022 Diskuv, Inc.
CopyrightUrl: https://github.com/diskuv/dkml-installer-ocaml/blob/main/LICENSE
ShortDescription: The Windows-friendly distribution of OCaml.
Description: |-
  The Diskuv OCaml distribution is an open-source set of software that supports
  software development in pure OCaml.
  The distribution's strengths are its:

  ✓ full compatibility with OCaml standards like Opam, Dune and ocamlfind
  ✓ laser focus on "native" development (desktop software, mobile apps and
  embedded software) through support for the standard native compilers like
  Visual Studio and Xcode
  ✓ ease-of-use through simplified installers and simple productivity commands;
  high school students should be able to use it
  ✓ security through reproducibility, versioning and from-source builds

  The installation will take approximately 1.5 HOURS on a modern Windows PC.

  This version does not currently work if you have a space in your username
  (ex. C:\Users\Jane Smith).

  Installing this package will automatically install the required prerequisites
  for Windows development:
  * Visual Studio Build Tools 2019 (it will not touch any existing Visual Studio
  installation)
  * Git for Windows (if and only if your machine does not have it installed)

  These alternatives may be better depending on your use case:

  * Developing in a Javascript first environment?
  Have a look at Esy and Reason
  * Developing operating system kernels?
  Have a look at Mirage OS
  * Developing Linux server software like web servers?
  Plain old OCaml on
  Debian, etc. works well
  * Writing compilers or proofs?
  Plain old OCaml works really well
  * Wanting quick installations?
  Use anything but Diskuv OCaml!
  Diskuv OCaml
  will conduct from-source builds unless it can guarantee (and code sign) the
  binaries are reproducible. Today that means a lot of compiling.

  Commercial tools and support are available from Diskuv for mixed OCaml/C
  development; however, this pure OCaml winget package only has limited support
  for mixed OCaml/C.
  For example, the "ctypes" opam package has been patched
  to work with Visual Studio but is out-dated.
  Contact
  support AT diskuv.com if you need OCaml/C development.
Moniker: dkml
Tags:
- foss
- language
- ocaml
- open-source
- programming
ReleaseNotes: |-
  - Switch from the official MSYS2 msys2-base install, plus a set of MSYS2
  - Special handling for Scoop package manager on Windows which comingles a
  - Fixed: No longer need to do opam pin remove ... to install merlin and
  - Plumb the number of cpus to the compiler jobs. [@edwintorok]
  - Skip over cross-compiling support when no target ABIs specified.
  - Overall shaved ~15 minutes from installation on a 3-CPU machine (80m instead
  - Byte-code only installation.
    That will be fast and simple and light, and is likely the best option for students.
    The existing installer already ships with a functioning ocamlrun and standard library, and is "component"-based so pieces can be added or removed.
    No Visual Studio, no MSYS2, no spending time compiling code during installation.
    However a shim would need to be developed so that ocaml, ocamlc, utop, etc. work without setting required OCaml environment variables.
    Almost all of this new byte-code only installation can be developed on macOS or Linux.
  - Bump utop from 2.9.0 to 2.10.0.
  - ocurrent ocaml/opam CI Docker image (a source of pins)
  - dkml-runtime-common-native works with spaces in the Windows home directory
  - Removed incorrect ptime.0.8.6 pin during dkml init; now ptime.1.1.0
  - Create dune-project in Beyond Basics documentation alongside existing
  - The dkml --build-type build type option will be removed next release.
    It was
  - Added Jane Street's base package to global utop.
    In particular, base is
  - Removed digestif.1.1.2+msvc pin since MSVC changes upstreamed to 1.1.3.
  - The bytecode *.bc embedded in the installer is compiled with 4.14.0
  - When using opam option setenv+= stop removing the environment file to
  - Pin omd.1.3.1
  - Print timestamp for many logging operations to aid performance comparisons
  - base_bigstring.v0.15.0 for MSVC and MinGW (same in fdopen and esy).
  - time_now.v0.15.0 for MSVC.
  - core.v0.15.1 for MSVC.
  - core_kernel.v0.15.0 for MSVC.
  - alcotest.1.6.0 for MSVC.
  - curly.0.2.0 for Windows and MSVC (pending release; already unblocked).
  - base.v0.15.1 for MSVC 32-bit. Already merged; in v0.16~preview.127.22+307.
ReleaseNotesUrl: https://github.com/diskuv/dkml-installer-ocaml/releases/tag/v1.2.0
ManifestType: defaultLocale
ManifestVersion: 1.5.0
