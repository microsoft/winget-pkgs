# Created using wingetcreate 1.1.2.0
# yaml-language-server: $schema=https://aka.ms/winget-manifest.installer.1.2.0.schema.json
# Follow:
#   https://docs.microsoft.com/en-us/windows/package-manager/package/manifest?tabs=minschema%2Cversion-example#tips-and-best-practices
#   https://github.com/microsoft/winget-pkgs/tree/master/doc/manifest/schema/1.2.0#best-practices
# Reference: https://github.com/microsoft/winget-pkgs/blob/master/doc/manifest/schema/1.2.0/installer.md
PackageIdentifier: Diskuv.OCaml
PackageVersion: "2.1.0" # AUTO-BUMP
# Scope: user
UpgradeBehavior: uninstallPrevious
Commands:
  # PATH entry: <DiskuvOCamlHome>/bin
  # BUT ... already a [winget install opam] so do not register those commands!
  # - opam
  # - opam-installer
  # - opam-putenv

  # PATH entry: <DiskuvOCamlHome>/usr/bin
  # BUT 1 ... max 16 entries in Commands:[] so took only the most commonly used
  # BUT 2 ... will be a [winget install dune] so do not register those commands!
  # - dune
  - dkml
  - ocaml
  - ocamlc
  - ocamldebug
  # BUT 3 ... ocamldoc is essentially deprecated by odoc
  # - ocamldoc
  # BUT 4 ... native code tools are created at shim stage by [dkml init] or the shims [dune] or [opam]
  # - ocamlopt
  # - ocamlopt.opt
  - ocamlrun
  # BUT 5 ... with-dkml is deprecated and will be rolled into dkml
  # - with-dkml
Platform:
  - "Windows.Desktop"
# Minimum OS comes from https://github.com/diskuv/dkml-runtime-distribution/blob/ff7e6bcbf3dbdb37e64b20a57e2dea0fa9d27ed5/src/windows/Machine/Machine.psm1#L14:
# > $Windows10SdkVer = "18362"
MinimumOSVersion: 10.0.18362.0
InstallerType: exe
InstallModes:
  - silent
  - interactive
InstallerSwitches:
  Silent: --ci --quiet --color=never
  SilentWithProgress: --ci
  Interactive: --color=always
  InstallLocation: --prefix "<INSTALLPATH>"
ReleaseDate: 2023-12-02 # AUTO-BUMP
# Dependencies:
  # ExternalDependencies:
  #   - Microsoft.VisualStudio.2019.BuildTools
  #   - Git.Git
  # PackageDependencies:
  #   # ---- Visual Studio Redistributable ----
  #   # > The Microsoft Visual C++ 2015-2022 Redistributable Package (x64) installs runtime components of Visual C++ Libraries required to run 64-bit applications developed with Visual C++ 2015, 2017, 2019 and 2022 on a computer that does not have Visual C++ 2015, 2017, 2019 and 2022 installed.
  #   # - PackageIdentifier: Microsoft.VC++2015-2022Redist-x64

  #   # ---- Visual Studio Build Tools ----
  #   # Minimum comes from https://github.com/diskuv/dkml-runtime-distribution/blob/ff7e6bcbf3dbdb37e64b20a57e2dea0fa9d27ed5/src/windows/Machine/Machine.psm1#L94-L105:
  #   # > $VcStudioVcToolsMajorVer = 16
  #   # > $VcStudioVcToolsMinorVer = 6
  #   - PackageIdentifier: Microsoft.VisualStudio.2019.BuildTools
  #     MinimumVersion: 16.6.0

  #   # ---- Git ----
  #   # Minimum comes from https://github.com/diskuv/dkml-component-ocamlcompiler/blob/66af047444345a012213980269faffdf8ea83fb0/assets/staging-files/win32/setup-userprofile.ps1#L602-605
  #   - PackageIdentifier: Git.Git
  #     MinimumVersion: 2.34.0
Installers:
  - Architecture: x64

    InstallerUrl: https://gitlab.com/dkml/distributions/dkml/-/releases/2.1.0/downloads/setup64nu.exe # AUTO-BUMP
    InstallerType: exe
    InstallerSha256: ed2ba64bd13d60843f5f9d23f181c9a225d5be956c8d312499a1d73500827368 # MANUAL-BUMP

ManifestType: "installer"
ManifestVersion: "1.1.0"
