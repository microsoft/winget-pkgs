# Created with Komac v1.11.0
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.5.0.schema.json

PackageIdentifier: DenoLand.Deno
PackageVersion: 0.42.0
PackageLocale: en-US
Publisher: denoland
PublisherUrl: https://github.com/denoland
PublisherSupportUrl: https://github.com/denoland/deno/issues
PrivacyUrl: https://deno.com/deploy/docs/privacy-policy
PackageName: deno
PackageUrl: https://deno.land
License: MIT
LicenseUrl: https://github.com/denoland/deno/blob/main/LICENSE.md
ShortDescription: A modern runtime for JavaScript and TypeScript
Description: Deno is a simple, modern and secure runtime for JavaScript, TypeScript, and WebAssembly that uses V8 and is built in Rust.
Tags:
- javascript
- runtime
- typescript
- deno
- v8
ReleaseNotes: |-
  Changes
  - BREAKING: "address" renamed to "path" in UnixAddr/UnixConnectOptions/UnixListenOptions (#4959)
  - BREAKING: Change DirEntry to not require extra stat syscall (#4941)
  - BREAKING: Change order of args in Deno.copy() (#4885)
  - BREAKING: Change order of copyN arguments (#4900)
  - BREAKING: Change return type of Deno.resources() (#4893)
  - BREAKING: Deno.chdir() should require --allow-write (#4889)
  - BREAKING: Factor out Deno.listenDatagram(), mark as unstable (#4968)
  - BREAKING: Make shutdown unstable and async (#4940)
  - BREAKING: Make unix sockets require allow-write (#4939)
  - BREAKING: Map-like interface for Deno.env (#4942)
  - BREAKING: Mark --importmap as unstable (#4934)
  - BREAKING: Mark Deno.dir() unstable (#4924)
  - BREAKING: Mark Deno.kill() as unstable (#4950)
  - BREAKING: Mark Deno.loadavg() and osRelease() as unstable (#4938)
  - BREAKING: Mark Deno.setRaw() as unstable (#4925)
  - BREAKING: Mark Deno.umask() unstable (#4935)
  - BREAKING: Mark Deno.utime() as unstable (#4955)
  - BREAKING: Mark runtime compile ops as unstable (#4912)
  - BREAKING: Mark signal APIs as unstable (#4926)
  - BREAKING: Remove Conn.closeRead (#4970)
  - BREAKING: Remove Deno.
    EOF, use null instead (#4953)
  - BREAKING: Remove Deno.
    OpenMode (#4884)
  - BREAKING: Remove Deno.runTests() API (#4922)
  - BREAKING: Remove Deno.symbols namespace (#4936)
  - BREAKING: Remove combined io interface like ReadCloser (#4944)
  - BREAKING: Remove overload of Deno.test() taking named function (#4951)
  - BREAKING: Rename Deno.fsEvents() to Deno.watchFs() (#4886)
  - BREAKING: Rename Deno.toAsyncIterator() to Deno.iter() (#4848)
  - BREAKING: Rename FileInfo time fields and represent them as Date objects (#4932)
  - BREAKING: Rename SeekMode variants to camelCase and stabilize (#4946)
  - BREAKING: Rename TLS APIs to camel case (#4888)
  - BREAKING: Use LLVM target triple for Deno.build (#4948)
  - BREAKING: introduce unstable flag; mark Deno.openPlugin, link, linkSync, symlink, symlinkSync as unstable (#4892)
  - BREAKING: make camel case readDir, readLink, realPath (#4995)
  - BREAKING: remove custom implementation of Deno.
    Buffer.toString() (#4992)
  - BREAKING: std/node: require\_ -> require (#4828)
  - feat(fmt): parallelize formatting (#4823)
  - feat(installer): Add DENO_INSTALL_ROOT (#4787)
  - feat(std/http): Improve parseHTTPVersion (#4930)
  - feat(std/io): Increase copyN buffer size to match go implementation (#4904)
  - feat(std/io): synchronous buffered writer (#4693)
  - feat(std/path): Add fromFileUrl() (#4993)
  - feat(std/uuid): Implement uuid v5 (#4916)
  - feat(test): add quiet flag (#4894)
  - feat: Add Deno.readTextFile(), Deno.writeTextFile(), with sync counterparts (#4901)
  - feat: Add buffer size argument to copy (#4907)
  - feat: Add close method to Plugin (#4670) (#4785)
  - feat: Change URL.port implementation to match WHATWG specifications (#4954)
  - feat: Deno.startTLS() (#4773, #4965)
  - feat: Make zero a valid port for URL (#4963)
  - feat: add help messages to Deno.test() sanitizers (#4887)
  - feat: support Deno namespace in Worker API (#4784)
  - fix(core): Op definitions (#4814)
  - fix(core): fix top-level-await error handling (#4911)
  - fix(core/js_errors): Get error's name and message from JS fields (#4808)
  - fix(format): stdin not formatting JSX (#4971)
  - fix(installer): handle case-insensitive uri (#4909)
  - fix(std): existsFile test
  - fix(std/fs): move dest if not exists and overwrite (#4910)
  - fix(std/io): Make std/io copyN write the whole read buffer (#4978)
  - fix(std/mime): MultipartReader for big files (#4865)
  - fix(std/node): bug fix and tests fs/mkdir (#4917)
  - fix: bug in Deno.copy (#4977)
  - fix: don't throw RangeError when an invalid date is passed (#4929)
  - fix: make URLSearchParams more standardized (#4695)
  - refactor(cli): Improve source line formatting (#4832)
  - refactor(cli): Move resource_table from deno::State to deno_core::Isolate (#4834)
  - refactor(cli): Remove bootstrap methods from global scope after bootstrapping (#4869)
  - refactor(cli/doc): Factor out AstParser from DocParser (#4923)
  - refactor(cli/inspector): Store debugger url on DenoInspector (#4793)
  - refactor(cli/js): Rewrite streams (#4842)
  - refactor(cli/js/io): Change type of stdio handles in JS api (#4891, #4952)
  - refactor(cli/js/io): Rename sync io interfaces (#4945)
  - refactor(cli/js/net): Deno.listener closes when breaking out of async iterator (#4976)
  - refactor(cli/js/permissions): Split read and write permission descriptors (#4774)
  - refactor(cli/js/testing): Rename disableOpSanitizer to sanitizeOps (#4854)
  - refactor(cli/js/web): Change InspectOptions, mark Deno.inspect as stable (#4967)
  - refactor(cli/js/web): Decouple Console implementation from stdout (#4899)
  - refactor(cli/ops): Replace block_on in net interfaces (#4796)
  - refactor(cli|std): Add no-async-promise-executor lint rule (#4809)
  - refactor(core): Modify op dispatcher to include &mut Isolate argument (#4821)
  - refactor(core): Remove core/plugin.rs (#4824)
  - refactor(core): Rename deno_core::Isolate to deno_core::CoreIsolate (#4851)
  - refactor(core): add id field to RecursiveModuleLoad (#4905)
  - refactor(std/log): support enum log level (#4859)
  - refactor(std/node): proper Node polyfill directory iteration (#4783)
  - upgrade: Rust 1.43.0 (#4871)
  - upgrade: dprint 0.13.0 (#4816)
  - upgrade: dprint 0.13.1 (#4853)
  - upgrade: rusty_v8 v0.4.0 (#4856)
  - chore: Mark Deno.
    Metrics and Deno.
    RunOptions as stable (#4949)
ReleaseNotesUrl: https://github.com/denoland/deno/releases/tag/v0.42.0
Documentations:
- DocumentLabel: User Manual
  DocumentUrl: https://deno.land/manual
ManifestType: defaultLocale
ManifestVersion: 1.5.0
