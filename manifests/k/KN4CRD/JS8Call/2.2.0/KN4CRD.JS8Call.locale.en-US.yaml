# Created using wingetcreate 1.2.8.0
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.4.0.schema.json

PackageIdentifier: KN4CRD.JS8Call
PackageVersion: 2.2.0
PackageLocale: en-US
Publisher: KN4CRD
PublisherUrl: http://files.js8call.com/latest.html
Author: KN4CRD
PackageName: JS8Call
PackageUrl: http://files.js8call.com/latest.html
License: Proprietary Software
Copyright: Copyright (C) 2023 KN4CRD
ShortDescription: Software using the JS8 Digital Mode providing weak signal keyboard to keyboard messaging to Amateur Radio Operators.
Moniker: js8call
ReleaseNotes: |-
  - 2.2.0 (2020-06-25):
  - Right click station to center filter at their offset
  - Added sync button for filter center
  - Initial work for dial controls
  - Added images for dial control
  - Added up/down indicators for VFO
  - Added RX.ACTIVITY and STATION.STATUS messages to network
  - Added some sanity limits to RX.GET_TEXT
  - Fixed #296: selection color overrides
  - Fixing selection highlight on pi
  - Attempting to fix highlighting on the pi, again
  - Fixed pi selected highlight (again)
  - Fixed restoring HB enabled on startup when in slow mode
  - Added tooltip for VFO adjustment
  - Config radio tab first
  - Added heard by tooltip for group callsigns
  - Fixed bug with delayed painting of selected row change
  - Added sub-band colors
  - Added 1000Hz sub-band colors with HB as orange, and the upper limit also as orange (for other automated stations)
  - Added black border
  - Changing colors
  - Simplify widegraph color
  - Fixed legacy real array index warning. Fixed NCOSTAS warning
  - Added some decoder logging and js8 tone generation tweaks to ensure the right costas is getting generated for the right submode
  - Added audio saving with buffer offset and a compilation flag that can be used to enable it. It is enabled by default currently for testing of the function.
  - Added debug for I and some clarifying comments
  - Added configuration option to enable/disable writing of ALL.TXT / DIRECTED.TXT
  - Added option to confirm before sending autoreply message
  - Refactored function for enabling HB. Set FAST as the default mode. Added FAST support to HB
  - Added @ALLCALL to CQs and HBs to make them more clear and unify the message formatting across all directed message types
  - Remove SNR from HB automatic ACK (there's a reason...coming soon)
  - Configurable custom HB and STATUS messages
  - Fixed hiding of HB commands with new @ALLCALL prefix
  - Added dynamic menu item for autoreply with confirmation to make it more clear
  - AUTO+CONF dynamic update
  - Added tooltip to status button
  - Fixed issue with self destruct confirmation box and default behavior
  - Fixed confirmation modality and default behavior
  - Proper encoding of ACKs and NACKs for future SRARQ
  - Cleaning up HB
  - Do not overwrite SNR responses
  - Disabled HB message configuration for now
  - Added configuration option for sending SNR in HB ACKs instead of disabling completely
  - Configurable HB ACKs vs SNR is a future consideration, not for 2.2
  - Added APRSIS spotting back into the app, but this time under the APJ8CL aprs registered callsign
  - Moved APRSIS reporting into its own background thread to avoid hangups. Added ability to turn off APRSIS reporting
  - Added a couple built-in groups
  - Moving heartbeats to an HB group that is added when you enable heartbeat networking
  - Fixed hiding HB in band activity
  - Added ability to spot ssids with compound callsigns ala, KN4CRD/7
  - Initial working commit of tcp based API
  - Added tcp server configuration options
  - Added example tcp client python script
  - Fixed message id type to be qint64
  - Updated frequency dial to be propagated on RX
  - RX.DIRECTED should be sent for all directed messages that are normally written to the directed log
  - Heartbeats are directed to @HB now, so make sure that we process directed messages like that please
  - Added CQ as a directed command (directed to @ALLCALL) in the API
  - Deprecated the huff encoded frame types for a more efficient version in subsequent releases
  - Added two inbox API functions
  - Fixed bug in new API
  - Removed automatic adding of @HB group
  - Added ability to block spotting of specific callsigns if desired
  - APRSIS delay / skip percentage is now configurable on the client (not exposed to user though)
  - Added QRP and QRO groups
  - Record the frequency when a decode happens and use that for when we process the decoded message (i.e., spotting, display, etc)
  - Easily disable the transmitter with one button press
  - Added menu items that correspond to the toggle buttons in the display
  - Removed debug statement
  - Added legacy hamlib fix for rig struct
  - Merged https://bitbucket.org/hobbes1069/js8call/branch/gcc-10 gcc fortran fixes
  - Fixed response of heartbeats
  - Fixed encoding of compound SNR frames (missing snr values)
  - Spot group commands to JS8NET
  - Auto+conf is the default
  - Fixed #330: only pause the decoder while actively transmitting
  - Remove save menu debug...it doesn't work
  - Remove open file menu items when debug save is disabled
  - Bumped libgfortran to >= 8.4.0
  - Fixed bug of disappearing text on enter keypress while transmitter is disabled
  - Updated readme and install docs
  - Make missing frame indicator user configurable
  - Added detail to tooltip for call activity
  - Changed hamlib legacy define to JS8_USE_HAMLIB_THREE
  - Added TUNE button to Control Menu
  - Updated waterfall to make scroll speed configurable
  - Fixed waterfall bugs on click
  - Working through decoder fixes
  - Working through decoder fixes, getting closer
  - Improving decoder performance
  - Fixed a problem in the synchronization code that caused issues with failed decodes on signals that should be able to be decoded
  - Ensure pass 3 does subtraction if we have a fourth pass
  - Sync on ABC, AB, BC
  - Reorder nfqso reording after dedupe
  - Added rudimentary test harness with example wav audio
  - Added ability to compare results with an old js8 decoder for testing
  - Bumped max candidates to 300 (configurable) and cleaned up some sync code
  - Test alt by default, only dump if output differs
  - Moved ctwk computation to syncjs8d
  - Fixed depth=4. Removed apmask from bpd and osd.
  - Fixed decoder hang on cshift when subtracting signal
  - Added new command HEARTBEAT SNR for sending heartbeat ACKs
  - Initial experiment of no timing requirement
  - Removed debug statements from subtractjs8
  - Experimental drawing of sync state
  - Experiments in computing and setting drift automatically
  - Write notice text to UI when drifting automatically
  - Working automatic time sync based on syncStats
  - Smaller increment adjustment for drift. 1 second interval lines.
  - SyncStats should be output differently than DecoderDebug
  - Wraparound buffer for BCDEI decoders
  - Turning off auto drift experiment, only drawing sync stats
  - Working sync via 1 second timing for A mode only
  - Keeping track of last decode position
  - Back to 2.48s JZ for normal
  - Restructuring decoder for every second
  - Added checkbox for displaying decode attempts in the waterfall. Gating experiments for now
  - Expose color pallete
  - Moved experiment into own function
  - Added proper caching of message frames during dedupe with date expiration
  - Trying the experimental decode timing (more liberal decoding)
  - Updated detector to reset kin on drift
  - Added decode debug of where we start the decode
  - Added experimental auto-sync function for normal mode.
  - Record time drift when autosyncing as the drifted time
  - Cleaned up autosync/autodrift
  - Fixed total frames needed for decode in the experimental decoder
  - Cleaning up frame dedupe, decode debug, and decode buffer thresholds
  - Enable autosync for testing
  - Updated menu label
  - Moved auto sync experiment into the timing tab
  - Allow slow mode to auto sync as well
  - Fixed display bug of sync button
  - Added tooltip for sync button
  - Automatically stop time drift sync after decode by default
  - Merge branch 'decoder-experiments' into ft8call-develop
  - Added clear activity functions to the menu.
  - Added shortcuts to time drift controls in the menu
  - Reset drift average on clear
  - Added time drift auto stop after a number of decoders. Edited decode positions
  - Disabled alt position decoding for now...
  - Auto time drift stop label
  - Cleanup
  - Removed conditional E
  - Fixed a few auto drift bugs
  - Enabling Ultra for experimentation
  - Fixed ACKs encoding
  - Pulling out more unused fortran code
  - Fixed waterfall affecting decode range when filter is disabled
  - Add maximum filter spinbox, menu item in waterfall, and proper controls for handling editing
  - Removed xcor fortran code
  - Fortran cleanup take two
  - Disabling Ultra for now...decoder needs some work
  - Fixed #340: help and version should be command line output
  - Fixed #339: flushed text buffers on file save for logbook.
  - Added fsync for unix/windows in file utils
  - Added either libgfortran3 or libgfortran5 for debian
ReleaseNotesUrl: http://files.js8call.com/changelog.txt
ManifestType: defaultLocale
ManifestVersion: 1.4.0
