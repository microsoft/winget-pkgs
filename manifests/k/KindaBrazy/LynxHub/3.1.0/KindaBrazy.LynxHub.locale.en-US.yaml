# Created with YamlCreate.ps1 Dumplings Mod
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.10.0.schema.json

PackageIdentifier: KindaBrazy.LynxHub
PackageVersion: 3.1.0
PackageLocale: en-US
Publisher: KindaBrazy
PublisherUrl: https://github.com/KindaBrazy
PublisherSupportUrl: https://github.com/KindaBrazy/LynxHub/issues
PackageName: LynxHub
PackageUrl: https://github.com/KindaBrazy/LynxHub
License: AGPL-3.0
LicenseUrl: https://github.com/KindaBrazy/LynxHub/blob/HEAD/LICENSE
ShortDescription: Your All-In-One AI Platform.
Description: |-
  LynxHub offers a comprehensive suite of features designed to streamline your AI workflow and enhance your experience. Here's what you can expect:
  - Extensible Architecture
    - Enhance LynxHub's capabilities with custom extensions.
  - Modular Design
    - Fully modular architecture allowing third-party developers to create and publish custom modules
    - Modules can add new AI web interfaces (WebUIs) to the app, fully customizable by the developer
    - Developers can pre-define custom arguments, extensions, commands, and other configurations as part of the module, creating pre-configured WebUIs for users
  - AI Interface Management
    - Install, config and update
    - Switch branches, shallow clone, unshallow, see latest commit details
    - Manage AI extensions with options for batch updates and auto-update settings
    - View available extensions and install them directly
  - Arguments Manager
    - Available arguments list, add, remove, and edit various argument types (dropdowns, checkboxes, text input, folder/file selection - relative, absolute)
    - Search through arguments
    - Create and manage argument presets for different setups
  - Custom Run Commands
    - Set and manage custom terminal commands for executing WebUI
  - Pre-launch Actions
    - Automatically execute custom terminal commands before launching AI interfaces
    - Open specific files or folders as part of the pre-launch process
  - Browser and Terminal Integration
    - Built-in terminal and web browser for seamless integration
    - Automatic detection and launch of relevant addresses (URLs, files)
    - Switch easily between terminal and browser modes
    - Terminal customization settings
  - Markdown Viewer
    - Built-in Markdown viewer for easy reading of documentation and notes.
  - AI Information Dashboard
    - View developer information, installation and update status
    - Access update tags, release notes, and disk usage statistics for each AI interface
  - UI Customization
    - Customize the layout of cards for a flexible user interface
    - Dark and light themes available
    - Pin favorite AI interfaces to the home page for easy access
Tags:
- ai
- large-language-model
- llm
ReleaseNotes: |-
  üí´ What's New?
  ‚ú® New Features
  - Insider Build: Added insider build for Gold sponsors and above.
  - Browser Favorites: Added support for browser Favorites management features.
  - Unassign Card: Added unassign card feature.
  ‚ö° Improvements
  - üåç Browser:
    - Improved address bar focus handling and input validation.
    - Google search for non-URLs and enhanced URL visibility.
    - Added custom error page with animations and retry functionality when URL is not accessible.
    - Enhanced empty new tab animations, styling, and refactored sections.
    - Encrypt and securely manage URLs.
  - üñ•Ô∏è Terminal:
    - Implemented process exit handling and tab cleanup, and "Close Tab on Exit" option for disabling this.
    - Added clear button to top bar for clearing terminal content.
    - Optimized browser and terminal rendering performance.
  - Cached favicon URLs.
  - Improved styling and interactivity for context menu items.
  - Redesigned extension page layout.
  - Improved dashboard page design.
  üêõ Bug Fixes
  - üåç Browser:
    - Fixed browser not working correctly in some situations.
    - Ensured browser content resizes properly on maximize, unmaximize, fullscreen toggle, and resize. Fixed #32.
    - Improved browser window initialization to ensure loading and managing web pages correctly.
    - Fixed errors after closing browser tab.
    - Fixed error on resizing browser window.
  - üñ•Ô∏è Terminal:
    - Ensured terminal resizes properly when window is resized with a non-terminal tab active.
    - Prevented content loss during window resizing.
    - Updated font loading and error handling logic.
    - Prevented accidental automatic switching to browser view.
  - Resolved out-of-memory crashes.
  - Fixed git manager stash & drop not working correctly.
  - Corrected branch check logic when fetching repository info on installation.
  - Fixed some icons not appearing.
  - Handled errors and permissions during writing configs and showed toast notification.
  - Added validation for working directory and fallback for inaccessible paths.
  - Showed warning when branches fail to fetch (used default branch for cloning).
  - Showed warning window for DU64 setup issues.
  - Fixed Status bar not calculating size correctly for browser resizing.
  üìå Minor Changes
  - Replaced icons for Dashboard and Settings pages with updated designs.
  - Added error handling for locating card or validating selected directory.
  - Enhanced error handling for changing app data folder.
  - Handled app data directory creation failure.
  - Added error handling for repository info retrieval.
  - Showed error when selected directory for cloning is not empty.
  - Displayed download page button on 403 error during auto-update check.

  ‚öôÔ∏è API and Backend Changes
  App:
  - Handled destroyed webContents in getWebContent method.
  - Added null-safety for class calls and improved error handling.
  - Integrated breadcrumb logging across renderer and main processes to enhance action traceability.
  - Added breadcrumb logging toggle in settings and integrated setting persistence across renderer and main processes.
  Plugins:
  - Extended module and extension update stage handling with "Insider" branch support.
  - Handled missing webContent or empty mainMethods during channel listening in modules manager.
  Modules:
  - Restructured module handling and loading.
  - Added showToast helper for toast notifications.
  - Added support for required and default values in user inputs for stepper.
  - Added optional title support for user inputs in the installation flow.
  - nextStep in installer is now a promise-based function.
  - Added getExtensions_TerminalPreCommands to API for getting extension terminal pre commands.
  Extensions:
  - Added events to extension API communication.
  - Added event emitters for card start and installation events.
  - Added event listeners for renderer ipc events to extension API.
  - Added custom extension steps support to the module installation process.
  - Added util API to add commands to be executed before modules terminal actions.
  - Exposed rendererIpc to extensions renderer API.

  üíñ Thanks to New Supporters!
  A huge thank you to our newest Patreon supporters! Your contributions help me continue to develop and improve LynxHub.
  - Adrian Deck (Early Access)
  - Lis Carter (Early Access)
ReleaseNotesUrl: https://github.com/KindaBrazy/LynxHub/releases/tag/V3.1.0
ManifestType: defaultLocale
ManifestVersion: 1.10.0
