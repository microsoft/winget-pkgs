# Created with YamlCreate.ps1 v2.4.3 $debug=NVS1.CRLF.7-4-6.Win32NT
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.9.0.schema.json

PackageIdentifier: KindaBrazy.LynxHub
PackageVersion: 2.2.1
PackageLocale: en-US
Publisher: KindaBrazy
PublisherUrl: https://github.com/KindaBrazy
PublisherSupportUrl: https://github.com/KindaBrazy/LynxHub/issues
# PrivacyUrl:
# Author:
PackageName: LynxHub
PackageUrl: https://github.com/KindaBrazy/LynxHub
License: AGPL-3.0
LicenseUrl: https://github.com/KindaBrazy/LynxHub/blob/HEAD/LICENSE
# Copyright:
# CopyrightUrl:
ShortDescription: Your All-In-One AI Platform.
Description: |-
  LynxHub offers a comprehensive suite of features designed to streamline your AI workflow and enhance your experience. Here's what you can expect:
  - Extensible Architecture
    - Enhance LynxHub's capabilities with custom extensions.
  - Modular Design
    - Fully modular architecture allowing third-party developers to create and publish custom modules
    - Modules can add new AI web interfaces (WebUIs) to the app, fully customizable by the developer
    - Developers can pre-define custom arguments, extensions, commands, and other configurations as part of the module, creating pre-configured WebUIs for users
  - AI Interface Management
    - Install, config and update
    - Switch branches, shallow clone, unshallow, see latest commit details
    - Manage AI extensions with options for batch updates and auto-update settings
    - View available extensions and install them directly
  - Arguments Manager
    - Available arguments list, add, remove, and edit various argument types (dropdowns, checkboxes, text input, folder/file selection - relative, absolute)
    - Search through arguments
    - Create and manage argument presets for different setups
  - Custom Run Commands
    - Set and manage custom terminal commands for executing WebUI
  - Pre-launch Actions
    - Automatically execute custom terminal commands before launching AI interfaces
    - Open specific files or folders as part of the pre-launch process
  - Browser and Terminal Integration
    - Built-in terminal and web browser for seamless integration
    - Automatic detection and launch of relevant addresses (URLs, files)
    - Switch easily between terminal and browser modes
    - Terminal customization settings
  - Markdown Viewer
    - Built-in Markdown viewer for easy reading of documentation and notes.
  - AI Information Dashboard
    - View developer information, installation and update status
    - Access update tags, release notes, and disk usage statistics for each AI interface
  - UI Customization
    - Customize the layout of cards for a flexible user interface
    - Dark and light themes available
    - Pin favorite AI interfaces to the home page for easy access
# Moniker:
Tags:
- ai
- large-language-model
- llm
ReleaseNotes: |-
  App Changes:
  âœ¨ New Features
  - Git Cloning Enhancements: Added options for cloning single branches, specifying branch names, and setting clone
    depth.
  - Repository Card Menu: Introduced a new menu item on Repository cards, providing access to branch management (view, switch), repository reset, unshallow, and commit details.
  - Card Duplication: Added the ability to duplicate cards. #8
  âš¡ Improvements
  - In-App Readme Viewer: Displays the readme file within the app for cards that are not yet installed.
  - Staggered Card Update Checks: Card update checks are now performed sequentially on startup instead of all at once.
  - Streamlined Pinning: Replaced the ribbon with an icon button for pinning cards.
  - Shallow Cloning for AI Extensions: Utilizes shallow cloning for faster installation of AI extensions.
  - Optimized AI Information: Uses the cardInfo modules method for AI information instead of the built-in method.
  - Search Result Refinement: Hides the arguments category when search results are empty.
  - Ctrl+Click Shortcuts:
    - Open a card's homepage in an external browser using Ctrl+click.
    - Open a card's project folder by Ctrl+click on "Open Folder" in the card menu.
  ðŸª² Bug Fixes
  - Fixed an issue where card menu items might not function correctly.
  - Resolved issues with the settings layout extending beyond the app screen.
  - Correct the layout of customized card settings for smaller window sizes.
  - Removed the update badge after a successful card update.
  - The User component in card info is now rendered correctly when a valid picUrl is present.
  - Resolved issues with the zoom functionality in the in-app browser.
  - Fixed broken links within the in-app browser.#25
  - The "Extension Installed" button is no longer shown if an installation error occurs.
  - The uninstall menu item is now hidden if a card has no installation directory.
  ðŸ“Œ Minor Changes
  - Added the ability to edit card titles.
  - Modules and extensions are switched to the early-access branch for early-access users.
  - Updated the style of the Run Behavior selection and added descriptions.
  - Set all radius values to the default (md).
  - Restored the joined style for button groups.
  - Adjusted menu icon sizes for consistency.
  - Hides the description component in card info if it's empty.
  - A "Modules Page" button is now displayed when no cards are present.
  - Added --set-upstream-to when changing branches.
  - The update menu item is now only shown when an update is available for cards with custom update checks.
  Api and Backend Changes
  App
  - Updated the application to use React 19.
  - Removed the Mantine UI library.
  - Migrated from NextUI to HeroUI.
  - add dark/light class name to document before render
  - add 1s timeout before closing loading and showing main app
  Plugins
  General
  - feat(plugin_manager): skip loading extensions/modules not meeting requireAppBuild
  Modules
  - Removed the context and load modules as external (using useSyncExternalStore).
  - feat(modules): add ability to check for installed card
    - Added the ability to use storage for saving and reading custom data.
    - Added the ability to disable locating card
  - feat(modules): add installationType type to modules API
  - feat(extensions): add CardGitManager modal to extensions API
  - feat(stepper): add storage to module Stepper API
  - feat(module_api): add setUpdated to modules API stepper
  - feat(modules): pass configDir and storage utils to getRunCommands, readArgs, and saveArgs
  - feat(modules): pass node-pty to module main methods
  Extensions
  - feat(extensions): update modulesData API to reflect modules changes
  - feat(extensions): add requireAppBuild to ExtensionsInfo type
  - feat(extensions): indicate unloaded extensions with tooltip explaining the reason

  Full Changes: https://github.com/KindaBrazy/LynxHub/compare/5805da3...8631046 | Source Point: 8631046
ReleaseNotesUrl: https://github.com/KindaBrazy/LynxHub/releases/tag/V2.2.1
# PurchaseUrl:
# InstallationNotes:
# Documentations:
ManifestType: defaultLocale
ManifestVersion: 1.9.0
