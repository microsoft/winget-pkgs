# Created with WinGet Releaser using komac v2.8.0
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.9.0.schema.json

PackageIdentifier: sxyazi.yazi
PackageVersion: 0.4.0
PackageLocale: en-US
Publisher: sxyazi
PublisherUrl: https://github.com/sxyazi
PublisherSupportUrl: https://github.com/sxyazi/yazi/issues
PackageName: Yazi
PackageUrl: https://github.com/sxyazi/yazi
License: MIT
LicenseUrl: https://github.com/sxyazi/yazi/blob/HEAD/LICENSE
ShortDescription: Blazing fast terminal file manager written in Rust, based on async I/O
Tags:
- android
- asyncio
- cli
- concurrency
- file-explorer
- file-manager
- helix
- linux
- macos
- productivity
- rust
- terminal
- tui
- vim
- windows
- yazi
ReleaseNotes: "This is the biggest release ever, with 53 new features, 41 fixes, and 12 performance optimizations.The main focus of this release is improving the plugin system, and we’ve made some adjustments to certain APIs based on real-world usage to better support future extensibility. This release is a key step in moving the plugin system from BETA to stable!This is a breaking change release, so please make sure to read: Migrating to Yazi v0.4.0Spotter\n#1802 introduces the concept of \"spotter\". When you \"spot\" a file, a popup will show up with metadata about that file.For example, it can display the mime type and size of a regular file, the dimensions and color space of an image, the duration and resolution of a video, or the line count of a code file, etc.You can easily copy this info with a simple keystroke or quickly swipe through files in the spot window.What's even cooler is that users can set custom spotters for different file types, and plugin developers can use Lua APIs to build various spotters, just like with previewers!Support for Transparent Image Preview\nTransparent image previews are now supported in #1556 (Thanks to @diegodorado), and it works across all 4 image backends Yazi supports (kitty graphics-protocol, Inline images protocol, Sixel graphics format, Überzug++).screenshot-002179Auto Switch Between Dark and Light Icons/Flavors Based on Terminal Background\n#1946 adds dark/light mode support — Yazi will automatically detect your terminal's color scheme and choose the appropriate icon color and flavor.In theme.toml, the [flavor] section now includes two new attributes, dark and light, to allow setting different flavors for light and dark modes:\n# theme.toml\n[flavor]\ndark  = \"dracula\"\nlight = \"one-light\"\n\nNew ya emit and ya emit-to Subcommands to Emit Commands to a Specific Instance\nTwo new subcommands, ya emit and ya emit-to, have been added to the ya CLI tool in They allow you to send commands from outside Yazi (e.g., from your shell) to run on a specific Yazi instance for better interactivity.The new ya emit subcommand allows users to send a command to the current Yazi instance. The format is:\nya emit <command> <args>\n\nFor example:\nya emit cd /tmp\nya emit reveal /tmp/foo\n\nJust like you would write them in your keymap.toml file! You can also send commands to a specific remote instance using ya emit-to:\nya emit-to <receiver> <command> <args>\n\nFor example:\nya emit-to \"$YAZI_ID\" cd /tmp\n\nSupport Passing Arguments to Previewer/Preloader/Spotter/Fetcher\nWith  you can now pass arguments to previewers, preloaders, spotters, and fetchers when configuring them:\n# yazi.toml\n[plugin]\nprepend_previewers = [\n  { mime = \"image/*\", run = 'my-plugin test --foo --bar=baz' }\n]\nprepend_preloaders = [\n  { mime = \"image/*\", run = 'my-plugin test --foo --bar=baz' }\n]\nprepend_spotters = [\n  { mime = \"image/*\", run = 'my-plugin test --foo --bar=baz' }\n]\nprepend_fetchers = [\n  { id = \"test\", mime = \"image/*\", run = 'my-plugin test --foo --bar=baz' }\n]\n\nThis makes them much more flexible, meaning the same plugin can behave differently based on different arguments, tailored to the user's preferences!Suggest Keywords in the Header When a Finder Is Active\nA new keyword indicator has been added to the header, in  letting users know the current finding state with real-time feedback:Allow Disabling Certain Preset Keybinds with the New noop Virtual Command\nA new noop command has been introduced in \n[[manager.prepend_keymap]]\non  = [ \"g\", \"c\" ]\nrun = \"noop\"\n\nThis allows users to disable specific default keybindings, and the disabled keys won’t appear in the \"which key\" component or the help menu.Make the Built-in extract Plugin Support Compressed Tarballs (*.tar.gz, *.tar.bz2, etc.)\nThe built-in extract plugin now has experimental support for extracting compressed tarballs, making it more convenient for users who frequently work with .tar files.Thanks to @DirkFi for his excellent work on #1583Prioritize Paths That Need to Be Processed First During Bulk Renaming\nThe bulk renaming feature now has smart conflict resolution, done in #1801 (thanks to @yw1ee).For example, if you’re renaming a list of files:\n1\n2\n3\n\nAnd renaming them to:\n1 -> 2\n2 -> 3\n3 -> 4\n\nPreviously, Yazi would stop with an error when trying to rename 1 -> 2 because 2 already exists.Now, it will intelligently pick files that won’t conflict and process them in order, so in this case, it will rename them like this:\n3 -> 4\n2 -> 3\n1 -> 2\n\nFallback to CSI 16 t for Terminals That Don’t Support TIOCGWINSZ\nAll terminals on Windows (MS Terminal, WezTerm for Windows) do not support TIOCGWINSZ because Windows doesn't have ioctl.Some terminals based on node-pty also don't support it (like Tabby, VSCode, Hyper, etc.).#2004 falls back to CSI 16 t when TIOCGWINSZ is unavailable to provide better image size calculation for previews.Launch From Preset Settings If the User’s Config Cannot Be Parsed\nNow, if Yazi can’t parse your config file because of invalid values, it will ask if you want to launch with the default settings instead of failing to start.This improves the user experience. Done in #1832Other improvements\nThese are a few of my favorite features. For a complete list of improvements in Yazi 0.4, check out the full changelog below.What's Changed\n- fix: match icon by extension case-insensitive by @sxyazi in #1614\n- refactor: privatize url of the File by @sxyazi in #1619\n- perf: introduce URN to speed up large directory file sorting by @sxyazi in #1622\n- fix: set allow-passthrough always to all instead of on to prevent overriding a user setting with a higher priority all by @sxyazi in #1626\n- fix: set a dedicated Mimetype agency to reconcile regular files and search results by @sxyazi in #1627\n- feat: make the builtin extract plugin support compressed tarballs (*.tar.gz, *.tar.bz2, etc.) by @DirkFi in #1583\n- feat: support transparent image preview by @diegodorado in #1556\n- perf: avoid unnecessary allocations in base64 encoding of IIP by @sxyazi in #1639\n- perf: introduce URN to speed up large directory locating by @sxyazi in #1648\n- feat: support setting different input titles for create --dir  by @Tyarel8 in #1650\n- perf: introduce URN to speed up large directory file updates by @sxyazi in #1652\n- refactor: ensure that each Url contains the full location information by @sxyazi in #1659\n- feat: support calling methods in builtin plugins with arbitrary types of arguments (self can now be omitted) by @sxyazi in #1666\n- feat: add the area() API for renderable elements by @sxyazi in #1667\n- fix: one file's mime-type changed multiple times without triggering a preview again by @sxyazi in #1682\n- fix: enter and leave commands should treat the search results as regular entities by @sxyazi in #1687\n- fix: magick previewer for multi-layered image files with -flatten argument by @v3natio in #1684\n- feat: improve jemalloc memory efficiency by @dm9pZCAq in #1689\n- feat: adapt for image preview in the Rio terminal by @raphamorim in #1690\n- fix: increase the revision when there is a change in Urn on updating by @sxyazi in #1691\n- feat: allow overriding and rewriting the sync methods of builtin plugins by @sxyazi in #1695\n- feat: add more context to error messages by @sxyazi in #1701\n- fix: replace control characters to printable characters in plain text preview by @sxyazi in #1704\n- feat: async micro task initialization error handling by @sxyazi in #1710\n- feat!: make backspace command not close the input even when value is empty by @XYenon in #1680\n- feat: reuse the code previewer seeking behavior for json, archive, and empty by @sxyazi in #1721\n- fix: temporarily disable TIFF decoding by @sxyazi in #1723\n- refactor: turn RectRef, PaddingRef, PositionRef into Rect, Padding, Position by @sxyazi in #1730\n- refactor: use Kgp instead of Kitty since \"Kitty\" is a terminal emulator not a protocol name by @sxyazi in #1732\n- fix: compositors not supported by Überzug Wayland layer, or WSL not with WezTerm should fallback to Chafa by @sxyazi in #1735\n- fix: clamp when seeking a non-zero unit between -1 and 1 by @sxyazi in #1736\n- fix: upserting operation should handle deleting in edge cases where the source and target URNs are different by @sxyazi in #1737\n- refactor: derive the Into<Opt> trait with procedural macros to avoid bloat by @sxyazi in #1742\n- perf: merge multiple file operations into one to greatly speed up updates in large directories by @sxyazi in #1745\n- fix!: introduce a new btime term to align ctime with Unix by @sxyazi in #1761\n- feat: yazi --debug supports detecting whether tmux is built with --enable-sixel by @sxyazi in #1762\n- refactor: simplify module exports by @sxyazi in #1770\n- refactor!: rename the term select to toggle to reserve select for future use by @sxyazi in #1773\n- feat!: add ui.Text, ui.Table, remove ui.Paragraph and ui.ListItem by @sxyazi in #1776\n- feat!: decouple ui.List, ui.Bar, ui.Border, and ui.Gauge from coordinates by @sxyazi in #1782\n- feat: prevent paths from being treated as options in file command by @gaesa in #1783\n- refactor: replace Metadata with Cha in the file scheduler to improve interoperability with yazi-fs by @sxyazi in #1785\n- feat: append the suffix to the end when generating unique filenames for directories, i.e., after not before the extension by @Saru2003 in #1784\n- fix: images were not cleared when closing a tab in front of the current tab by @sxyazi in #1792\n- feat: add a compatibility layer for ui.Paragraph to help users transition more smoothly to the new ui.Text by @sxyazi in #1794\n- refactor: remove migration code as it's no longer needed and causes errors by @sxyazi in #1795\n- feat: custom styles for the confirm component by @GrzegorzKozub in #1789\n- perf: apply rotate in place to images with orientation by @sxyazi in #1807\n- feat: add ICC profile to images for better color accuracy by @sxyazi in #1808\n- fix: use std copy function in a blocking thread by @sxyazi in #1817"
ReleaseNotesUrl: https://github.com/sxyazi/yazi/releases/tag/v0.4.0
ManifestType: defaultLocale
ManifestVersion: 1.9.0
