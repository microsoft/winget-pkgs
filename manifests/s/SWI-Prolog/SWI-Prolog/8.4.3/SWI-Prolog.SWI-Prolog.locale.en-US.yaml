# Created with YamlCreate.ps1 v2.0.7 using InputObject ðŸ¤– $debug=QUSU-7-2-4
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.1.0.schema.json

PackageIdentifier: SWI-Prolog.SWI-Prolog
PackageVersion: 8.4.3
PackageLocale: en-US
Publisher: SWI-Prolog
PublisherUrl: https://www.swi-prolog.org/
PublisherSupportUrl: https://www.swi-prolog.org/community.html
# PrivacyUrl: 
Author: Jan Wielemaker
PackageName: SWI-Prolog
PackageUrl: https://www.swi-prolog.org/
License: BSD-2-Clause
LicenseUrl: https://www.swi-prolog.org/license.html
Copyright: Copyright (c) 2022, SWI-Prolog Solutions b.v. All rights reserved.
# CopyrightUrl: 
ShortDescription: A versatile implementation of the Prolog language
Description: SWI-Prolog offers a comprehensive free Prolog environment. Since its start in 1987, SWI-Prolog development has been driven by the needs of real world applications. SWI-Prolog is widely used in research and education as well as commercial applications.
Moniker: swipl
Tags:
- language
- logic
- programming
- prolog
# Agreements: 
ReleaseNotes: |-
  [Jun 15 2022]
  - FIXED: Issue#114: Windows getenv/2 may return additional garbage (typically an extra \u0000 character at the end of variables of 1023 bytes or longer because the 0-byte is not added. Paul Singleton.

  [Apr 23 2022]
  - FIXED: Several issues to consistently deal with buffer sizes in os/windows/uxnt.c.

  [May 23 2022]
  - FIXED: Sfprintf(): handling of ENC_WCHAR() encoding.
  - ENHANCED: Sfprintf(): allow Unicode characters for %c

  [Jun 15 2022]
  - ENHANCED: PL_record_external() deal with records > 2Gb on 64 bit platforms.

  [Jun 12 2022]
  - FIXED: write_term/2 and friends handling of embrace of operants that are operators for partial writes.
  - FIXED: no space is required between a space and (.

  [Jun 11 2022]
  - FIXED: write_term/2 and friends: do not embrace writing a single atom if this is an operator and the priority(Priority) option is given.

  [Jun 9 2022]
  - DOC: Create links for S*() function references

  [Jun 8 2022]
  - DOC: Started documenting SWI-Stream.h
  - FIXED: Sgets() handling of non-0-terminated output from Sfgets().

  [Jun 2 2022]
  - DOC: ord_intersection/2 is semidet.
  - DIST: Fixed rmd160 generation for scripts/update-macports

  [Jun 1 2022]
  - FIXED: write_term/2 with numbervars and variable_names (#866)
  - FIXED: Issue#993: possible deadlock when loading a module. Reported by Sean Leather.

  [May 23 2022]
  - FIXED: eliminated a spurious choice-point in sub_atom/5 Reported in https://swi-prolog.discourse.group/t/careful-with-sub-atom-5-and-feature-request-last-sub-atom-5/5422

  [May 17 2022]
  - DOC: enhance documentation for det/, $/1 and $/0, describing the exceptions and how trap/1 can be used to make the debugger act quickly.

  [May 15 2022]
  - FIXED: explain/1: hide references from called/5
  - FIXED: Have breakpoints cleared in the UI when the clause that holds them is removed during a reload of the file.

  [May 14 2022]
  - FIXED: breakpoint_property/2: fixed character_range property
  - ENHANCED: Issue#17: reverse/2 to be deterministic if second argument is a proper list. Ulrich Neumerkel.

  [May 13 2022]
  - TEST: Added STO restriction as this test involves rational trees.

  [May 12 2022]
  - FIXED: Issue#122: dif/2: or-node simplification.
  - FIXED: Possible deadlock enumerating predicates from a source file.

  [May 10 2022]
  - FIXED: Avoid Unicode quote in library(aggregate) comment

  [May 6 2022]
  - FIXED: LaTeX conflict preventing building the PDF docs

  [Apr 21 2022]
  - FIXED: Possible race condition importing into a module. Can lead to termination on a system error.

  [Apr 19 2022]
  - FIXED: Make source layout handling aware that debug/3 and assertion/1 may be removed by the optimizer.

  [Apr 17 2022]
  - ADDED: Sopen_iri_or_file() API to allow foreign code to access the resources.

  [Apr 15 2022]
  - ENHANCED: require/1 to simply import if the target module is already loaded. Reduces startup time.

  [Apr 13 2022]
  - FIXED: fd_degree/2 and fd_set/2 for constant integer arguments.

  [Apr 12 2022]
  - DOC: added cross-references from absolute_file_name/3 to file_search_path/2.

  [Apr 8 2022]
  - ADDED: library(sandbox): allow declaring prolog flags as safe.

  [Apr 7 2022]
  - ADDED: open/4 option newline(Mode).

  [Apr 5 2022]
  - DOC: Updated clause/2.
  - FIXED: Memory leak reading Unicode queries at the toplevel. Peter Ludemann.
  - ADDED: library(sandbox): support predicate_property/2
  - DOC: PL_atom_wchars(): wrong types

  [Apr 4 2022]
  - ADDED: library(sandbox): functor/4.

  [Apr 3 2022]
  - FIXED: Possible wrong Windows drive letter normalisation.

  [Apr 2 2022]
  - PORT: msys2, detect libdb-6.0.dll from libdb.a

  [Apr 1 2022]
  - PORT: Msys2/clang64
  - PORT: MSYS2/clang64 the dll name appears several times in the ".a" file, select the first appearance
  - FIXED: swipl-ld didn't pass -I for SWI-Prolog.h any more.

  [Mar 30 2022]
  - PORT: Sopenmem() to use SIO_NL_POSIX. All internal strings use POSIX \n to delimit lines. @mgodan1.

  [Mar 29 2022]
  - FIXED: copy_term/4 to handle cyclic terms for the first argument. Also proper recovery in case of a memory overflow.

  [Mar 27 2022]
  - DOC: open/3,4 pipe(Command) limitations.
  - PORT: open/3,4 on Windows: use clib popen() instead of the broken emulation in src/os/windows/popen.c

  [Mar 26 2022]
  - FIXED: Clause position management for h => X = ..., rest_body: the unification is not inlined.

  [Mar 24 2022]
  - FIXED: swipl-ld: access to uninitialized memory

  [Mar 22 2022]
  - FIXED: current_predicate/1 bug in updating module reference count that may cause temporary modules not to be destroyed. Notably affects SWISH.

  [Mar 21 2022]
  - DOC: Add transpose/2 to the clpfd docs.

  [Mar 20 2022]
  - FIXED: bulk mode for transactions was not actually passed.

  [Mar 18 2022]
  - FIXED: retract in nested transaction of a clause asserted in the outer transaction to properly reclaim the clause.

  [Mar 16 2022]
  - FIXED: fast_term_serialized/2: memory leak.
  - FIXED: Avoid transaction rollback to be recorded (memory leak).
  - FIXED: Avoid leaking a trie node on concurrent insert of the same value.
  - ENHANCED: if we created a supervisor that is equal to the existing, discard the new one. This may happen if multiple threads create a supervisor. Leaks memory as we cannot safely discard a running supervisor.

  [Mar 14 2022]
  - FIXED: consistent use of tree pool allocation.

  [Mar 13 2022]
  - FIXED: Initial atom table was allocated twice. Also set the initial size for this table to be big enough to load the initial state, avoiding two rehash operations.
  - FIXED: Reclaim argument admin for destroyed predicates.

  [Mar 15 2022]
  - FIXED: Typo on threadutil.pl, harming operation without xpce. Johan Romme.

  [Mar 10 2022]
  - ADDED: Make encoding accessible by name using PL_atom_to_encoding() and PL_encoding_to_atom()
  - DOC: tabling po(Compare) argument.

  [Mar 8 2022]
  - DOC: refer to pack debug_adapter in the GNU Emacs Interface page
  - FIXED: dif/2 not firing after unifying with other attributed variables.

  [Mar 7 2022]
  - FIXED: call_residue_vars/2: possible spurious reported variables because the trail entry was removed but the variable was not reclaimed due to a frozen stack.

  [Feb 28 2022]
  - ADDED: on_signal/3 now takes value 'ignore' This allows for requesting the SIG_IGN disposition, and also unifies the SIGPIPE behavior with the other initially-prepared signals. Technically, this could be considered a backwards-incompatible change. However, for this to actually affect someone's working code, they would have to
    1. Redefine the system predicate ignore/1,
    2. Call on_signal(Sig, _, ignore), AND
    3. Expect ignore(Signal) to do something besides ignoring Signal; and in that case I think we can all agree they've brought this trouble upon themselves. :)
    Also adds SIGPIPE's default disposition to the docs.

  [Feb 25 2022]
  - MODIFIED: fixing SIG_PROLOG_OFFSET at 32, per docs This also introduces a set of macros to interact with the pending signal mask which should hopefully ease refactoring if and when we change which signals swipl supports, like adding support for system signals over 31.

  [Feb 24 2022]
  - MODIFIED: switching core libswipl code to C11 This allows for a standards-compatible implementation of the LD macros that is guaranteed to compile down to a simple reference even at -O0. I've also added some code that, at least in my testing, makes `print LD` work again in GDB and any debugger that uses it as a backend.

  [Feb 19 2022]
  - PORT: adding O_SIGNALS define in config.h This provides a single define to check if Prolog's signal-handling is enabled, rather than checking each of HAVE_SIGNAL etc. This also makes the existence and use of GD->signals.sig_alert consistent on whether SIG_ALERT is defined.

  [Feb 18 2022]
  - PORT: Do not depend on SIGINT if signal support is disabled.

  [Feb 16 2022]
  - PORT: Get optional symbols via weak linking This unifies the tcmalloc and ptmalloc linking code and also allows systems without dlsym(), like WASM, to expose the malloc-implementation predicates, so long as the linker is capable of resolving weak symbols.

  [Feb 17 2022]
  - PORT: Issue#939: TLD_alloc() undefined error on Win32. @mgodan.
  - FIXED: Gui tracer for inlined unification with SSU clauses, e.g. p(X), X = aap(N) => writeln(N).
  - FIXED: Allow tracing test predicates that are inlined into the VM.
  - FIXED: Make gui tracer handle inlined head unifications.
  - FIXED: rule/3 for => rules that have the unification moved into the head and listing/1 for such SSU clauses.

  [Feb 15 2022]
  - FIXED: Preproc/build errors Adding a couple GCC builtins to the config tests, using them to force short-circuiting of _LD_WITH_FALLBACK even in low-optimization modes (e.g. Clang in DEBUG configuration).
    Also adding a few missing-but-used defines to config.h.cmake (HAVE___BUILTIN_EXPECT, HAVE___THREAD, HAVE_VOLATILE, and HAVE_INLINE) and fixing an unbalanced #ifdef pair that got added in f3b79d6.
  - FIXED: Consider $/0 a breakable instruction. This fixes the debugger for clauses holding $/0.
  - FIXED: Avoid instantiation error on =../2 when analysing clause positions with incomplete information.

  [Feb 14 2022]
  - SANDBOX: SWISH issue#147: Allow for copy_term/4.
  - FIXED: Allow retry from the body of => rules.
  - ENHANCED: Avoid tracing inside spy/1, nospy/1 and related debug control predicates.
  - FIXED: Issue#935: package manager: download location of git archives
  - DOC: Remove obsolete reference of break/1 trace port

  [Mar 22 2022]
  - FIXED: Issue#963: possible undefined to_list/2 in message handling. Caused by wrong backport.
ReleaseNotesUrl: https://www.swi-prolog.org/ChangeLog?branch=stable&from=8.4.2&to=8.4.3
ManifestType: defaultLocale
ManifestVersion: 1.1.0
