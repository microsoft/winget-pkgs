# Created with komac v2.3.0
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.6.0.schema.json

PackageIdentifier: tcc.tcc
PackageVersion: 0.9.27
PackageLocale: en-US
Publisher: Fabrice Bellard
PublisherUrl: https://bellard.org/
Author: Fabrice Bellard
PackageName: Tiny C Compiler
PackageUrl: https://bellard.org/tcc/
License: LGPLv2.1
LicenseUrl: 'https://repo.or.cz/tinycc.git/blob/HEAD:/COPYING'
Copyright: Copyright (c) 2001-2018 Fabrice Bellard
ShortDescription: 'TinyCC (aka TCC) is a small but hyper fast C compiler. Unlike other C compilers, it is meant to be self-relying: you do not need an external assembler or linker because TCC does that for you'
Description: |-
  SMALL! You can compile and execute C code everywhere, for example on rescue disks (about 100KB for x86 TCC executable, including C preprocessor, C compiler, assembler and linker).
  FAST! tcc generates x86 code. No byte code overhead. Compile, assemble and link several times faster than GCC.
  UNLIMITED! Any C dynamic library can be used directly. TCC is heading torward full ISOC99 compliance. TCC can of course compile itself.
  SAFE! tcc includes an optional memory and bound checker. Bound checked code can be mixed freely with standard code.
  Compile and execute C source directly. No linking or assembly necessary. Full C preprocessor and GNU-like assembler included.
  C script supported : just add '#!/usr/local/bin/tcc -run' at the first line of your C source, and execute it directly from the command line.
  With libtcc, you can use TCC as a backend for dynamic code generation.
Moniker: tcc
Tags:
- c
- compiler
- programming
ReleaseNotesUrl: 'https://repo.or.cz/tinycc.git/blob/HEAD:/Changelog'
ManifestType: defaultLocale
ManifestVersion: 1.6.0