# Created with WinGet Automation using Komac v1.11.0
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.6.0.schema.json

PackageIdentifier: timschneeb.GalaxyBudsClient
PackageVersion: 4.6.0
PackageLocale: en-US
Publisher: timschneeb
PublisherUrl: https://github.com/timschneeb
PublisherSupportUrl: https://github.com/timschneeb/GalaxyBudsClient/issues
PackageName: Galaxy Buds Manager (Unofficial)
PackageUrl: https://github.com/timschneeb/GalaxyBudsClient
License: GNU General Public License v3.0
LicenseUrl: https://github.com/timschneeb/GalaxyBudsClient/blob/master/LICENSE
ShortDescription: Unofficial Galaxy Buds Manager for Windows and Linux
ReleaseNotes: |-
  What's new
  macOS port
    Thanks to @nift4, the macOS port has been finalized and is available for download below.
    Both Intel and newer ARM macOS devices are supported.
  Hotkey support for Linux
    The Linux version now supports global hotkey actions on X11.
    This feature has no effect on Wayland, as their protocols do not support global hotkeys by design. As a workaround, you could manually set-up hotkeys in your desktop environment using the new command-line interface.
  Basic command-line interface and D-Bus IPC
    The app can now be controlled by CLI operations which allows for scripting possibilities.
    At the moment, only basic operations are available, such as:
    - Trigger actions such as toggling the ANC/ambient mode, the 'find my buds' feature, and more.
    - List device properties, such as battery levels, wear states, version information and more.
    - Trigger the battery info popup
    - Bring the application window to the foreground
  D-Bus IPC
    Third-party scripts and apps can also connect to the D-Bus IPC service (`me.timschneeberger.galaxybudsclient`), which provides similar integrations.
    On Linux, the service is registered on the system's session bus. On other platforms, a custom D-Bus server will be hosted on the TCP port `54533`.
    You can use introspection tools such as `qdbusviewer` or `d-spy` if you want to experiment with the exposed APIs.
  Other new features
    - Galaxy Buds FE support (although mostly untested)
    - Implemented new Buds2 features, including the earbud fit test by @nift4 in #465
    - Dynamic tray icons
    - Connection popup: show the real device name in the title
    - Added additional safeguards to the firmware installer to prevent users from installing firmware for the wrong device model
    - Localization support for RTL languages
    - Linux: auto-start support (except flatpak packages)
  Bug fixes
    - Application startup time improvements
    - Fixed crash when BlueZ on Linux is unavailable
    - Fixed window focus issue with some dialogs
    - Fixed broken battery check before firmware updates
    - Fixed inverted touchpad lock reading on Buds2/Buds2Pro by @nift4 in #442
    - Fixed Bixby is not being visible when hotkeys are not supported by @nift4 in #444
    - Fixed application shutdown event under KDE plasma by @ninjaoflight in #453
  Other changes
    - Application upgraded to Avalonia 11.1 and NET 8.0
    - Update application icon by @sidevesh in #455
    - Use buds icon for menubar by @sidevesh in #454
  Translation updates
    - Turkish translation updated by @Eta06 in #470
  New Contributors
    - @vigress8 made their first contribution in #438
    - @nift4 made their first contribution in #442
    - @iamimmanuelraj made their first contribution in #381
    - @ninjaoflight made their first contribution in #453
    - @sidevesh made their first contribution in #455
    - @Eta06 made their first contribution in #470
  Note to Linux users
    - x86_64-musl binaries are only compatible with libc-musl based distributions (e.g., Alpine Linux).
    - You need to give the binary execute permissions before launching it: `chmod +x GalaxyBudsClient`
  Privacy
    - This application collects crash dumps in case of fatal application crashes and sends them to my sentry.io dashboard (can be disabled in settings).
    - To help me support Buds models I don't own, this app includes a crowdsourcing feature to share data about Samsung's proprietary Bluetooth serial protocol on demand. You can disable this permanently by navigating to 'Settings > Crowdsourcing'.
ReleaseNotesUrl: https://github.com/timschneeb/GalaxyBudsClient/releases/tag/4.6.0
ManifestType: defaultLocale
ManifestVersion: 1.5.0
