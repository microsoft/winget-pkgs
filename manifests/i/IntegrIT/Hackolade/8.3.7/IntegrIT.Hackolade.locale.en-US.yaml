# Created with YamlCreate.ps1 Dumplings Mod
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.10.0.schema.json

PackageIdentifier: IntegrIT.Hackolade
PackageVersion: 8.3.7
PackageLocale: en-US
Publisher: Hackolade
PublisherUrl: https://hackolade.com/
PublisherSupportUrl: https://hackolade.com/help/index.html
PrivacyUrl: https://hackolade.com/privacy.html
Author: IntegrIT SA/NV
PackageName: Hackolade
PackageUrl: https://hackolade.com/download.html
License: Proprietary
LicenseUrl: https://hackolade.com/eulas.html
Copyright: Copyright Â© 2016-2025 Hackolade. All rights reserved.
CopyrightUrl: https://hackolade.com/eulas.html
ShortDescription: Polyglot Data Modeling for SQL and NoSQL databases, APIs, and storage formats
Description: |-
  Hackolade Studio is an intuitive yet powerful application to perform the visually data modeling and schema design of many SQL and NoSQL databases, APIS, and storage formats.
  Hackolade Studio combines the graphical representation of collections in an Entity Relationship Diagram, with the graphical representation of the JSON Schema definition of each collection in a hierarchical schema view. Together, these graphical representations provide the schema model for data-at-rest and data-in-motion, plus the documentation of that model. The application is specifically designed around the powerful nature of JSON nested sub-objects and denormalization.
  The software facilitates the work of, and the dialog between analysts, architects, designers, developers, testers, DBAs, and operators of systems that are based on such technologies. It also can generate schema scripts and documentation in a variety of machine-readable formats (DDLs, JSON Schema, Avro, Parquet, Protobuf, ...) as well as database instances, or human-readable formats such as HTML, Markdown, and PDF reports.
  Instead of having to find data structures tacitly described in the application code, the creation of a database model helps to evaluate design options beforehand, think through the implications of different alternatives, and recognize potential hurdles before committing sizable amounts of development effort. A database model helps plan ahead, in order to minimize later rework. In the end, the modeling process accelerates development, increases quality of the application, and reduces execution risks.
Tags:
- database
- db
- modeling
ReleaseNotes: |-
  - Print Diagram: added rendering of relationships in ERDV when generating PDF Hi-Res image
  - SQL Server/AzureSQL: added adapter when DB version is downgraded from 2025, converting JSON data type into nvarchar with hasMaxLength:true
  - Synapse: removed extraneous ASC keyword in Primary Key DDL statement
ReleaseNotesUrl: https://hackolade.com/versionInfo/ReadMe.txt
PurchaseUrl: https://hackolade.com/pricing.html
Documentations:
- DocumentLabel: Videos
  DocumentUrl: https://hackolade.com/videos.html
- DocumentLabel: FAQ
  DocumentUrl: https://hackolade.com/help/FAQandtroubleshooting.html
ManifestType: defaultLocale
ManifestVersion: 1.10.0
