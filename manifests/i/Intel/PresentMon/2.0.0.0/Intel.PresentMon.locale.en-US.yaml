# Created using wingetcreate 1.6.1.0
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.6.0.schema.json

PackageIdentifier: Intel.PresentMon
PackageVersion: 2.0.0.0
PackageLocale: en-US
Publisher: Intel(R) Corporation
PublisherUrl: https://www.intel.com/
PublisherSupportUrl: https://github.com/GameTechDev/PresentMon/issues
PrivacyUrl: https://www.intel.com/content/www/us/en/privacy/intel-privacy-notice.html
Author: Intel Corporation
PackageName: Intel(R) PresentMon
PackageUrl: https://game.intel.com/stories/intel-presentmon/
License: MIT License
LicenseUrl: https://github.com/GameTechDev/PresentMon/blob/v2.0.0/LICENSE.txt
Copyright: Copyright (C) 2017-2024 Intel Corporation
ShortDescription: A gaming performance overlay and telemetry application to monitor and measure your gaming experience.
Description: |-
  PresentMon is a set of tools to capture and analyze the high-level performance characteristics of graphics applications on Windows.
  PresentMon traces key performance metrics such as the CPU, GPU, and Display frame durations and latencies; and works across different graphics API such as DirectX, OpenGL, and Vulkan, different hardware configurations, and for both desktop and UWP applications.
Moniker: presentmon
Tags:
- analysis
- capture
- event-tracing
- gaming
- graphics
- intel
- overlay
- performance
- telemetry
ReleaseNotes: |-
  New Features
  - The majority of metrics are changed to use the time that the CPU started working on a frame as the reference point instead of the present() call, with values that are more aligned to measuring the quality of graphics applications (e.g., latency and duration of interaction and displayed frames). See README-ConsoleApplication.md for more details.
  - Processes with unknown name are now reported as <unknown> instead of <error>.
  - Capture application CSV now reports NA (Not Available) in columns for unavailable metrics instead of 0.
  - Overlay / Capture application now hides any metrics that are not available on the system.
  - Added explicit 1%, 5%, and 10% percentile statistics (to the existing 99%, 95%, and 90%). Previously, selecting 99%ile for metrics where a lower value is better (such as frame time) would automatically convert to the 1%ile statistic. Now, no context-dependent conversion is done and whatever statistic the user selects is displayed.
  - Added a non-zero average statistic which only averages non-zero data points. This is useful for metrics where zero denotes "no data" rather than a zero value (such as the click-to-photon latency metric).
  - Added histogram plots.
  - Client APIs:
    - New Dynamic query composition API: clients now specify which metrics/stats they are using, and only the necessary data processing is performed. This replaces the previous behavior where all metric combinations were calculated on each polling call, regardless of whether they were necessary.
    - New Introspection API: clients can now enumerate metrics at runtime to populate UIs with options, names, and descriptions. Also enables clients to be forward-compatible with newer service builds exposing new metrics.
    - PresentData: changed PresentStopTime to TimeInPresent where PresentStopTime = TimInPresent == 0 ? 0 : PresentStartTime + TimeInPresent

  Bug Fixes
  - Fixed crash caused by resetting preferences
  - Fixed graph rendering errors when sampling rate was high and/or graph contained many data plots
  - Disallow editing for built-in loadout presets
  - Fixed issue where autoscaling settings was affecting the wrong graph
  - Fixed issue where independent data display window would repeatedly appear above the control UI making it difficult to interact with the application
  - Fixed overlay UI misalignment in readout widgets caused by very small values
  - Loadout files are now saved with .json file extension by default
ReleaseNotesUrl: https://github.com/GameTechDev/PresentMon/releases/tag/v2.0.0
ManifestType: defaultLocale
ManifestVersion: 1.6.0
