# Created with YamlCreate.ps1 v2.5.0 $debug=QUSU.CRLF.7-5-2.Win32NT
# yaml-language-server: $schema=https://aka.ms/winget-manifest.locale.1.10.0.schema.json

PackageIdentifier: InfiniteInstant.KoduGameLab
PackageVersion: 1.6.18
PackageLocale: zh-CN
# Publisher:
# PublisherUrl:
# PublisherSupportUrl:
# PrivacyUrl:
# Author:
# PackageName:
# PackageUrl:
License: 专有软件
# LicenseUrl:
# Copyright:
# CopyrightUrl:
ShortDescription: 为孩子们设计的 3D 游戏编程。
Description: |-
  Kodu Game Lab 是一个 3D 游戏开发环境，旨在教授孩子们基本的编程原理。Kodu 允许创作者构建游戏世界的地形，填充角色和道具，然后使用专属的可视化编程语言为其编写行为和游戏规则。
  Kodu 起源于微软研究院的一个项目。最初的目标平台是 Xbox 360，使用 C# 和 XNA，并通过 Indie Games Channel 发布。在 Xbox 上发布的选择影响了早期用户界面的开发，因为所有操作都需要通过游戏手柄完成。自移植到 PC 以来，已增加对键盘、鼠标和触控的支持。
  Kodu 的目标一直是尽可能让新用户容易上手。在这一目标的指导下，我们倾向于设计简单易懂的新功能，而不是更复杂和完整的功能。
  Kodu 的核心是基于磁贴的编程语言。这种语言是高级的，因为与传统编程相比，仅需几行“代码”就能完成很多任务。这些代码会被持续评估，因此可以立即对世界状态的任何变化作出反应。例如，以下示例展示了如何编程让一个角色在游戏世界中找到并吃掉所有的苹果。第 1 行表示，如果角色看到苹果，它应该向苹果移动。如果世界上有多个苹果，它会自动选择最近的一个进行移动。第 2 行表示，当角色碰到苹果时，它应该吃掉苹果。磁贴“bumped”是 Kodu 用于表示两个角色彼此靠近的方式。一旦苹果被吃掉，它就不再存在于世界中，角色将继续寻找下一个苹果，依此类推，直到所有苹果都被吃完。
  让磁贴代表现实世界中的事件、动作和物体，有助于弥合新用户在现实世界经验与计算机编程抽象性质之间的差距。
# Moniker:
Tags:
- 教育
- 游戏
# ReleaseNotes:
# ReleaseNotesUrl:
# PurchaseUrl:
# InstallationNotes:
Documentations:
- DocumentLabel: 资源
  DocumentUrl: https://www.kodugamelab.com/resources/
- DocumentLabel: 技巧和窍门
  DocumentUrl: https://www.kodugamelab.com/tips/
- DocumentLabel: 常见问题
  DocumentUrl: https://www.kodugamelab.com/faq/
ManifestType: locale
ManifestVersion: 1.10.0
