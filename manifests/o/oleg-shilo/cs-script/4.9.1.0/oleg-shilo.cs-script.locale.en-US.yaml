# Created with komac v2.11.0
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.9.0.schema.json

PackageIdentifier: oleg-shilo.cs-script
PackageVersion: 4.9.1.0
PackageLocale: en-US
Publisher: oleg-shilo
PublisherUrl: https://github.com/oleg-shilo
PublisherSupportUrl: https://github.com/oleg-shilo/cs-script/issues
PackageName: cs-script
PackageUrl: https://github.com/oleg-shilo/cs-script
License: MIT
LicenseUrl: https://github.com/oleg-shilo/cs-script/blob/HEAD/LICENSE
ShortDescription: C# Script execution engine
ReleaseNotes: |-
  Note
  WindowsDefender often marks zip files as infected for no reason. Use VirisTotal reports to ensure the safety of any downloaded distributable:
  - cs-script.win.v4.9.1.0.zip âœ…(0/96) VirusTotal latest scan
  Deployment (installation Instructions)
  Deployment
  Any OS
  > NOTE
  > Since this release delivers only extended command -unlock script changes this release was only published on nuget.org as a .NET Tool.
  Install as .NET Tool
  dotnet tool install --global cs-script.cli
  After that, you can invoke the script engine as css.
  You may need to add the folder of css to the system PATH, unless .NET SDK setup does it.
  It can be one of these depending on your OS:
  - %USERPROFILE%\. dotnet\tools
  - ~/.dotnet/tools
  - $HOME/.dotnet/tools
  Note:
  - before upgrading the already installed tool you may need to ensure the script engine is not running. You can do it with a simple command css -kill.
  - you may prefer to enable an optional build server (see css -server ?) to boost script compilation performance. On Windows, it's done automatically on the very first execution but on Linux, if you want to use this feature, it needs to be done manually (sudo css -server:add).
  Linux
  Ubuntu (terminal)
  repo=https://github.com/oleg-shilo/cs-script/releases/download/v4.9.0.0/; file=cs-script_4.9-0.deb; rm $file; wget $repo$file; sudo dpkg -i $file
  Depending on the user context you may need to add permissions to the CS-Script temp dir sudo chmod -R 777 /tmp
  You can also create a convenient alias (cs-script_x.x-x.deb package does it automatically):
  alias css='dotnet /usr/local/bin/cs-script/cscs.dll'+
  After that, you can invoke CS-Script engine from anywhere by just typing 'css'.
  Note: this very release is not available on Chocolatey and WinGet but only on Nuget (.NET tool) as described above.
  Windows
  Chocolatey (pending approval
  choco install cs-script
  WinGet (pending approval)
  winget install cs-script
  Manual (Any OS)
  Just unpack the corresponding 7z file and start using the script engine executable cscs.
  When using on Windows, you can build an alias(shim) exe css.exe for an easy launch of the script engine process: cscs -self-alias.
  The same shim is created if you are installing the CS-Script as a choco package.
  Barebone distribution
  The minimalistic manual distro on the target machine with .NET SDK installed is just a set of the script engine files:
  Linux
  cscs.dll
  cscs.runtimeconfig.json
  Running: dotnet ./cscs.dll <script>
  You can also create an alias for convenient access:
  echo "alias css='dotnet /usr/local/bin/cs-script/cscs.dll'" >> ~/.bashrc
  source ~/.bashrc
  And then you can run scripts with a simple: css <script>
  Windows
  cscs.exe
  cscs.dll
  cscs.runtimeconfig.json
  Running: cscs.exe <script>
  Changes
  CLI
  - Added support for versioning of custom commands during css -new:cmd ...
  - Added custom command -unlock
  CSScriptLib
  - no changes
ReleaseNotesUrl: https://github.com/oleg-shilo/cs-script/releases/tag/v4.9.1.0
ManifestType: defaultLocale
ManifestVersion: 1.9.0
