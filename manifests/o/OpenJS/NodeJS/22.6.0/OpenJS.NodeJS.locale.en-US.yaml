# Created using wingetcreate 1.6.4.0
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.6.0.schema.json

PackageIdentifier: OpenJS.NodeJS
PackageVersion: 22.6.0
PackageLocale: en-US
Publisher: Node.js Foundation
PublisherUrl: https://openjsf.org/
PublisherSupportUrl: https://github.com/nodejs/node/blob/v22.6.0/.github/SUPPORT.md
PrivacyUrl: https://privacy-policy.openjsf.org/
Author: OpenJS Foundation
PackageName: Node.js
PackageUrl: https://nodejs.org/
License: MIT
LicenseUrl: https://github.com/nodejs/node/blob/v22.6.0/LICENSE
Copyright: Copyright Node.js contributors. All rights reserved.
CopyrightUrl: https://trademark-policy.openjsf.org/
ShortDescription: Run JavaScript Everywhere
Description: Node.jsÂ® is a free, open-source, cross-platform JavaScript runtime environment that lets developers create servers, web apps, command line tools and scripts.
Moniker: nodejs
Tags:
- coding
- cross-platform
- develop
- development
- environment
- javascript
- js
- node
- npm
- programming
- runtime
- v8
ReleaseNotes: |-
  Experimental TypeScript support via strip types
    Node.js introduces the --experimental-strip-types flag for initial TypeScript support. This feature strips type annotations from .ts files, allowing them to run without transforming TypeScript-specific syntax.
    Current limitations include:
    - Supports only inline type annotations, not features like enums or namespaces.
    - Requires explicit file extensions in import and require statements.
    - Enforces the use of the type keyword for type imports to avoid runtime errors.
    - Disabled for TypeScript in node_modules by default.
    Thanks Marco Ippolito for working on this.

  Experimental Network Inspection Support in Node.js
    This update introduces the initial support for network inspection in Node.js. Currently, this is an experimental feature, so you need to enable it using the --experimental-network-inspection flag. With this feature enabled, you can inspect network activities occurring within a JavaScript application.
    To use network inspection, start your Node.js application with the following command:
    $ node --inspect-wait --experimental-network-inspection index.js
    Please note that the network inspection capabilities are in active development. We are actively working on enhancing this feature and will continue to expand its functionality in future updates.
    - Network inspection is limited to the http and https modules only.
    - The Network tab in Chrome DevTools will not be available until the feature request on the Chrome DevTools side is addressed.
    Thanks Kohei Ueno for working on this.

  Other Notable Changes
  - [15a94e67b1] - lib,src: drop --experimental-network-imports (Rafael Gonzaga) #53822
  - [68e444d2d8] - (SEMVER-MINOR) http: add diagnostics channel http.client.request.error (Kohei Ueno) #54054
  - [2d982d3dee] - (SEMVER-MINOR) deps: V8: backport 7857eb34db42 (Stephen Belanger) #53997
  - [15816bd0dd] - (SEMVER-MINOR) stream: expose DuplexPair API (Austin Wright) #34111
  - [893c864542] - (SEMVER-MINOR) test_runner: fix support watch with run(), add globPatterns option (Matteo Collina) #53866
  - [048d421ad1] - meta: add jake to collaborators (jakecastelli) #54004
  - [6ad6e01bf3] - (SEMVER-MINOR) test_runner: refactor snapshots to get file from context (Colin Ihrig) #53853
  - [698e44f8e7] - (SEMVER-MINOR) test_runner: add context.filePath (Colin Ihrig) #53853
ReleaseNotesUrl: https://github.com/nodejs/node/releases/tag/v22.6.0
Documentations:
- DocumentLabel: Learn
  DocumentUrl: https://nodejs.org/en/learn/
- DocumentLabel: Documentation
  DocumentUrl: https://nodejs.org/docs/v22.6.0/api/
- DocumentLabel: About
  DocumentUrl: https://nodejs.org/about/
ManifestType: defaultLocale
ManifestVersion: 1.6.0
