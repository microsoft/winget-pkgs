# Created using wingetcreate 1.6.5.0
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.6.0.schema.json

PackageIdentifier: OpenJS.NodeJS.LTS
PackageVersion: 20.18.0
PackageLocale: en-US
Publisher: Node.js Foundation
PublisherUrl: https://openjsf.org/
PublisherSupportUrl: https://github.com/nodejs/node/blob/v20.18.0/.github/SUPPORT.md
PrivacyUrl: https://privacy-policy.openjsf.org/
Author: OpenJS Foundation
PackageName: Node.js (LTS)
PackageUrl: https://nodejs.org/
License: MIT
LicenseUrl: https://github.com/nodejs/node/blob/v20.18.0/LICENSE
Copyright: Copyright Node.js contributors. All rights reserved.
CopyrightUrl: https://trademark-policy.openjsf.org/
ShortDescription: Run JavaScript Everywhere
Description: Node.jsÂ® is a free, open-source, cross-platform JavaScript runtime environment that lets developers create servers, web apps, command line tools and scripts.
Moniker: nodejs-lts
Tags:
- coding
- cross-platform
- develop
- development
- environment
- javascript
- js
- lts
- node
- npm
- programming
- runtime
- v8
ReleaseNotes: |-
  Experimental Network Inspection Support in Node.js
    This update introduces the initial support for network inspection in Node.js.
    Currently, this is an experimental feature, so you need to enable it using the --experimental-network-inspection flag.
    With this feature enabled, you can inspect network activities occurring within a JavaScript application.
    To use network inspection, start your Node.js application with the following command:
    $ node --inspect-wait --experimental-network-inspection index.js
    Please note that the network inspection capabilities are in active development.
    We are actively working on enhancing this feature and will continue to expand its functionality in future updates.
    - Network inspection is limited to the http and https modules only.
    - The Network tab in Chrome DevTools will not be available until the feature request on the Chrome DevTools side is addressed.
    Contributed by Kohei Ueno in #53593 and #54246

  Exposes X509_V_FLAG_PARTIAL_CHAIN to tls.createSecureContext
    This releases introduces a new option to the API tls.createSecureContext. From now on, tls.createSecureContext({ allowPartialTrustChain: true }) can be used to treat intermediate (non-self-signed) certificates in the trust CA certificate list as trusted.
    Contributed by Anna Henningsen in #54790

  New option for vm.createContext() to create a context with a freezable globalThis
    Node.js implements a flavor of vm.createContext() and friends that creates a context without contextifying its global object when vm.constants.DONT_CONTEXTIFY is used. This is suitable when users want to freeze the context (impossible when the global is contextified i.e. has interceptors installed) or speed up the global access if they don't need the interceptor behavior.
    Contributed by Joyee Cheung in #54394

  Deprecations
  - [64aa31f6e5] - repl: doc-deprecate instantiating node:repl classes without new (Aviv Keller) #54842
  - [4c52ee3d7f] - zlib: deprecate instantiating classes without new (Yagiz Nizipli) #54708

  Other Notable Changes
  - [b80da2f964] - buffer: optimize createFromString (Robert Nagy) #54324
  - [02b36cbd2d] - (SEMVER-MINOR) lib: add EventSource Client (Aras Abbasi) #51575
  - [879546a9bf] - (SEMVER-MINOR) src,lib: add performance.uvMetricsInfo (Rafael Gonzaga) #54413
  - [f789f4c92d] - (SEMVER-MINOR) test_runner: support module mocking (Colin Ihrig) #52848
  - [4eb0749b6c] - (SEMVER-MINOR) url: implement parse method for safer URL parsing (Ali Hassan) #52280
ReleaseNotesUrl: https://github.com/nodejs/node/releases/tag/v20.18.0
Documentations:
- DocumentLabel: Learn
  DocumentUrl: https://nodejs.org/en/learn/
- DocumentLabel: Documentation
  DocumentUrl: https://nodejs.org/docs/v20.18.0/api/
- DocumentLabel: About
  DocumentUrl: https://nodejs.org/about/
ManifestType: defaultLocale
ManifestVersion: 1.6.0
