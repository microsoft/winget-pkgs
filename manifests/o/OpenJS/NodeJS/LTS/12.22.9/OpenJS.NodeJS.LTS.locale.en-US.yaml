# Created with YamlCreate.ps1 v2.4.1 Dumplings Mod $debug=QUSU.CRLF.7-4-2.Win32NT
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.6.0.schema.json

PackageIdentifier: OpenJS.NodeJS.LTS
PackageVersion: 12.22.9
PackageLocale: en-US
Publisher: Node.js Foundation
PublisherUrl: https://openjsf.org/
PublisherSupportUrl: https://github.com/nodejs/node/blob/HEAD/.github/SUPPORT.md
PrivacyUrl: https://privacy-policy.openjsf.org/
Author: OpenJS Foundation
PackageName: Node.js (LTS)
PackageUrl: https://nodejs.org/
License: MIT
LicenseUrl: https://github.com/nodejs/node/blob/HEAD/LICENSE
Copyright: Copyright Node.js contributors. All rights reserved.
CopyrightUrl: https://trademark-policy.openjsf.org/
ShortDescription: Node.js® is a free, open-source, cross-platform JavaScript runtime environment that lets developers create servers, web apps, command line tools and scripts.
# Description:
Moniker: nodejs
Tags:
- coding
- develop
- development
- environment
- javascript
- js
- node
- npm
- programming
- runtime
- v8
ReleaseNotes: |-
  This is a security release.
  Notable changes
  Improper handling of URI Subject Alternative Names (Medium)(CVE-2021-44531)
  Accepting arbitrary Subject Alternative Name (SAN) types, unless a PKI is specifically defined to use a particular SAN type, can result in bypassing name-constrained intermediates. Node.js was accepting URI SAN types, which PKIs are often not defined to use. Additionally, when a protocol allows URI SANs, Node.js did not match the URI correctly.
  Versions of Node.js with the fix for this disable the URI SAN type when checking a certificate against a hostname. This behavior can be reverted through the --security-revert command-line option.
  More details will be available at CVE-2021-44531 after publication.
  Certificate Verification Bypass via String Injection (Medium)(CVE-2021-44532)
  Node.js converts SANs (Subject Alternative Names) to a string format. It uses this string to check peer certificates against hostnames when validating connections. The string format was subject to an injection vulnerability when name constraints were used within a certificate chain, allowing the bypass of these name constraints.
  Versions of Node.js with the fix for this escape SANs containing the problematic characters in order to prevent the injection. This behavior can be reverted through the --security-revert command-line option.
  More details will be available at CVE-2021-44532 after publication.
  Incorrect handling of certificate subject and issuer fields (Medium)(CVE-2021-44533)
  Node.js did not handle multi-value Relative Distinguished Names correctly. Attackers could craft certificate subjects containing a single-value Relative Distinguished Name that would be interpreted as a multi-value Relative Distinguished Name, for example, in order to inject a Common Name that would allow bypassing the certificate subject verification.
  Affected versions of Node.js do not accept multi-value Relative Distinguished Names and are thus not vulnerable to such attacks themselves. However, third-party code that uses node's ambiguous presentation of certificate subjects may be vulnerable.
  More details will be available at CVE-2021-44533 after publication.
  Prototype pollution via console.table properties (Low)(CVE-2022-21824)
  Due to the formatting logic of the console.table() function it was not safe to allow user controlled input to be passed to the properties parameter while simultaneously passing a plain object with at least one property as the first parameter, which could be __proto__. The prototype pollution has very limited control, in that it only allows an empty string to be assigned numerical keys of the object prototype.
  Versions of Node.js with the fix for this use a null protoype for the object these properties are being assigned to.
  More details will be available at CVE-2022-21824 after publication.
  Thanks to Patrik Oldsberg (rugvip) for reporting this vulnerability.
  Commits
  - [be69403528] - console: fix prototype pollution via console.table (Tobias Nießen) nodejs-private/node-private#307
  - [19873abfb2] - crypto,tls: implement safe x509 GeneralName format (Tobias Nießen and Akshay Kumar) nodejs-private/node-private#300
  - [ff9ac7d757] - doc: fix date for v12.22.8 (Richard Lau) #41213
  - [a5c7843cab] - src: add cve reverts and associated tests (Michael Dawson and Akshay Kumar) nodejs-private/node-private#300
  - [d4e5d1b9ca] - src: remove unused x509 functions (Tobias Nießen and Akshay Kumar) nodejs-private/node-private#300
  - [8c2db2c86b] - tls: fix handling of x509 subject and issuer (Tobias Nießen and Akshay Kumar) nodejs-private/node-private#300
  - [e0fe6a635e] - tls: drop support for URI alternative names (Tobias Nießen and Akshay Kumar) nodejs-private/node-private#300
ReleaseNotesUrl: https://github.com/nodejs/node/releases/tag/v12.22.9
# PurchaseUrl:
# InstallationNotes:
Documentations:
- DocumentLabel: Learn
  DocumentUrl: https://nodejs.org/en/learn/
- DocumentLabel: Documentation
  DocumentUrl: https://nodejs.org/docs/v12.22.9/api/
ManifestType: defaultLocale
ManifestVersion: 1.6.0
