# Created with WinGet Releaser using komac v2.4.1
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.6.0.schema.json

PackageIdentifier: VirtusLab.ScalaCLI
PackageVersion: 1.5.0
PackageLocale: en-US
Publisher: scala-cli@virtuslab.com
PublisherUrl: https://virtuslab.com/
PublisherSupportUrl: https://github.com/VirtusLab/scala-cli/issues
PackageName: Scala CLI
PackageUrl: https://github.com/VirtusLab/scala-cli
License: Apache-2.0
LicenseUrl: https://github.com/VirtusLab/scala-cli/blob/HEAD/LICENSE
ShortDescription: Scala CLI is a command-line tool to interact with the Scala language.
Tags:
- functional
- java
- language
- programming
- scala
ReleaseNotes: "Support for Scala 3.5.0\nThis Scala CLI version switches the default Scala version to 3.5.0.\nscala-cli version\n# Scala CLI version: 1.5.0\n# Scala version (default): 3.5.0\n\nAdded by @Gedochao in Support for Scala Native 0.5.5\nThis Scala CLI version switches the default Scala Native version to 0.5.5.\nscala-cli -e 'println(\"Hello from Scala Native 0.5.5!\")' --native\n# Compiling project (Scala 3.5.0, Scala Native 0.5.5)\n# Compiled project (Scala 3.5.0, Scala Native 0.5.5)\n# [info] Linking (multithreadingEnabled=true, disable if not used) (894 ms)\n# [info] Discovered 888 classes and 5407 methods after classloading\n# [info] Checking intermediate code (quick) (31 ms)\n# [info] Multithreading was not explicitly enabled - initial class loading has not detected any usage of system threads. Multithreading support will be disabled to improve performance.\n# [info] Linking (multithreadingEnabled=false) (299 ms)\n# [info] Discovered 499 classes and 2497 methods after classloading\n# [info] Checking intermediate code (quick) (5 ms)\n# [info] Discovered 478 classes and 1912 methods after optimization\n# [info] Optimizing (debug mode) (403 ms)\n# [info] Produced 9 LLVM IR files\n# [info] Generating intermediate code (368 ms)\n# [info] Compiling to native code (1565 ms)\n# [info] Linking with [pthread, dl]\n# [info] Linking native code (immix gc, none lto) (83 ms)\n# [info] Postprocessing (0 ms)\n# [info] Total (3625 ms)\n# Hello from Scala Native 0.5.5!\n\nAdded by @Gedochao in #3117(⚡️ experimental) Support for exporting to a Maven project\nIt is now possible to export a Scala CLI project to Maven.\nscala-cli export --script-snippet 'println(\"No need to create the pom.xml yourself!\")' --mvn --power -o mvn-demo\n# Some utilized features are marked as experimental:\n#  - `export` sub-command\n#  - `--mvn` option\n# Please bear in mind that non-ideal user experience should be expected.\n# If you encounter any bugs or have feedback to share, make sure to reach out to the maintenance team at \n# Exporting to a maven project...\n# Exported to: ~/scala-cli-tests/mvn-demo\ncd mvn-demo\nmvn scala:run -DmainClass=snippet_sc\n# (...)\n# No need to create the pom.xml yourself!\n# [INFO] ------------------------------------------------------------------------\n# [INFO] BUILD SUCCESS\n# [INFO] ------------------------------------------------------------------------\n# [INFO] Total time:  2.589 s\n# [INFO] Finished at: 2024-08-22T12:08:36+02:00\n# [INFO] ------------------------------------------------------------------------\n\nAdded by @yadavan88 in Support for launching apps from dependencies without other inputs\nIt is now possible to launch an app by just specifying its dependency, without the need to provide any source files.\nIn such a case the build server will not be started, as there's no compilation to be done.\nThere's also no need to specify the main class, as it's now being detected automatically in dependencies as well.\nDo note that explicitly calling the run sub-command is necessary here, as otherwise Scala CLI will default to the REPL.\nscala-cli run --dep io.get-coursier:coursier-cli_2.13:2.1.10 -- version\n# 2.1.10\n\nThis can be used similarly to Coursier's cs launch.Added by @kasiaMarek in (⚡️ experimental) JMH available in various commands and via using directives\nSome improvements have been done to the experimental support for JMH (Java Microbenchmark Harness).The --jmh and --jmh-version options can now be passed to a number of commands:\n- run, as it was before (note that when --jmh is passed to run, the project's main class will default to running the benchmarks rather than the project's default main method; this behaviour is likely to be changed in future versions).\n- compile, so that a Scala CLI project with benchmarking can be compiled separately from being run;\n- package, although the resulting artifacts will run the project as normal for now, rather than benchmarks;\n- setup-ide, so that benchmarking projects can be imported to your IDE of choice;\n- test and export will now also no longer fail with --jmh, although no specific implementations for benchmarking are in place there yet.\nIt is now also possible to control JMH with using directives:\n- //> using jmh allows to enable JMH for the project, being the equivalent of the --jmh option.\n- //> using jmhVersion <version> allows to set the JMH version to use, being the equivalent of the --jmh-version option.\n//> using jmh\n//> using jmhVersion 1.37\npackage bench\n\nimport org.openjdk.jmh.annotations.*\nimport java.util.concurrent.TimeUnit\n\n@BenchmarkMode(Array(Mode.AverageTime))\n@OutputTimeUnit(TimeUnit.NANOSECONDS)\n@Warmup(iterations = 1, time = 100, timeUnit = TimeUnit.MILLISECONDS)\n@Measurement(iterations = 10, time = 100, timeUnit = TimeUnit.MILLISECONDS)\n@Fork(0)\nclass Benchmarks {\n  @Benchmark\n  def foo(): Unit = {\n    (1L to 1000L).sum\n  }\n}\n\nExpect more improvements in this area in the future.\nAlso, do play with it and give us feedback about the current implementation!Added by @Gedochao in #3091 and Support for auto-completions in fish\nWe now have command line auto-completions for the fish shell.Added by @KristianLentino99 in --js-es-module-import-map no longer requires --power mode\nA bit of a minor thing, but you can now use the --js-es-module-import-map option without enabling --power mode.Added by @Gedochao in Features\n- Add support for exporting to a Maven project by @yadavan88 in #3003\n- improvement: allow to run main class from deps with no inputs by @kasiaMarek in #3079\n- Promote --js-es-module-import-map to stable by @Gedochao in #3086\n- Tweak benchmarking with JMH by @Gedochao in #3091\n- Add support for fish auto-completions by @KristianLentino99 in #3104\n- Add directives for JMH by @Gedochao in #3118\nFixes\n- bugfix: Exclude sourcecode dependency by @tgodzik in #3094\n- bugfix: Exclude both sourcecode and collection-compat correctly by @tgodzik in #3105\n- Make package command handle directories in extra classpath by @joan38 in #3096\n- Add extra try-catch clause + extra logging in LocalRepo by @Gedochao in #3114\n- Fix/changing options from sources should not require reload by @MaciejG604 in #3112\n- fix: remove the --release flag by @kasiaMarek in #3119\n- Remove adding test options to the project/build target name hash by @MaciejG604 in #3107\nInternal changes\n- Make the publish CI job depend on jvm-tests-5 (Scala 3 Next RC test suite) by @Gedochao in #3078\n- Include scanning the .exe launcher in the release procedure by @Gedochao in #3081\n- refactor: Switch to original fork of Bloop by @tgodzik in #3020\n- Extract used Java versions to constants by @Gedochao in #3087\n- NIT Extract bsp testing utils to a helper trait by @Gedochao in #3092\n- Fix/simplify code by @MaciejG604 in #3106\nDocumentation changes\n- Add more env vars & generate reference docs for them by @Gedochao in #3075\nUpdates\n- Update scala-cli.sh launcher for 1.4.3 by @github-actions in #3073\n- Update bloop-config_2.13 to 2.0.3 by @scala-steward in #3072\n- Update Scala toolkit to 0.5.0 by @Gedochao in #3076\n- Update Typelevel toolkit to 0.1.27 by @Gedochao in #3077\n- Update Scala 3 Next RC to 3.5.0-RC7 by @Gedochao in #3080\n- Update bloop-rifle_2.13 to 2.0.0 by @scala-steward in #3108\n- Update munit to 1.0.1 by @scala-steward in #3100\n- Update Scala 3 Next to 3.5.0 by @Gedochao in #3093\n- Update sttp to 3.9.8 by @scala-steward in #3098\n- Update guava to 33.3.0-jre by @scala-steward in #3113\n- Update slf4j-nop to 2.0.16 by @scala-steward in #3101\n- Update Scala 3 Next RC to 3.5.1-RC2 by @scala-steward in #3099\n- Update Scala Native to 0.5.5 by @Gedochao in #3117\n- Update os-lib to 0.10.4 by @scala-steward in #3121\n- Update mill-main to 0.11.12 by @scala-steward in #3120\nNew Contributors\n- @KristianLentino99 made their first contribution in #3104\nFull Changelog: https://github.com/VirtusLab/scala-cli/compare/v1.4.3...v1.5.0"
ReleaseNotesUrl: https://github.com/VirtusLab/scala-cli/releases/tag/v1.5.0
ManifestType: defaultLocale
ManifestVersion: 1.6.0
