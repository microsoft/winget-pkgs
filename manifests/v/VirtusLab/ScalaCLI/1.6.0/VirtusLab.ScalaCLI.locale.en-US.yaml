# Created with WinGet Releaser using komac v2.9.0
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.9.0.schema.json

PackageIdentifier: VirtusLab.ScalaCLI
PackageVersion: 1.6.0
PackageLocale: en-US
Publisher: scala-cli@virtuslab.com
PublisherUrl: https://virtuslab.com/
PublisherSupportUrl: https://github.com/VirtusLab/scala-cli/issues
PackageName: Scala CLI
PackageUrl: https://github.com/VirtusLab/scala-cli
License: Apache-2.0
LicenseUrl: https://github.com/VirtusLab/scala-cli/blob/HEAD/LICENSE
ShortDescription: Scala CLI is a command-line tool to interact with the Scala language.
Tags:
- functional
- java
- language
- programming
- scala
ReleaseNotes: "Fixed commas being treated as using directive value separators & deprecated using them with whitespace\nNOTE: these are breaking changes affecting using directives syntax.\nThey're technically fixes + a deprecation, but in a very rare scenario existing builds could break, if they were relying on the erroneous syntax.This Scala CLI version fixes commas (,) being treated as using directive value separators on their own.Formerly, a directive like:\n//> using options -Wunused:locals,privates\n\nWould be (erroneously) interpreted as the following 2 options for the compiler: -Wunused:locals and privates.\nAs a comma will now no longer be treated as a separator (which it never should have been), it will now be interpreted correctly as\na single option: -Wunused:locals,privates.\nBefore this change, the only way to pass this value to the options directive key was escaping the comma with double quotes:\n//> using options \"-Wunused:locals,privates\"\n\nThe escaping is no longer necessary.Additionally, using commas along with whitespace as separators is now deprecated for future removal.\nscala-cli compile --scala-snippet '//> using options -Wunused:locals, -Wunused:privates'\n# [warn] <snippet>-scala-snippet:1:34\n# [warn] Use of commas as separators is deprecated. Only whitespace is neccessary.\n# Starting compilation server\n# Compiling project (Scala 3.6.3, JVM (23))\n# Compiled project (Scala 3.6.3, JVM (23))\n\nFinally, the use of /* (..) */ comments in using directives is no longer supported.\n//> using /* some comment */ options -Wunused:locals /* some other comment */ -Wunused:privates\n// this syntax used to be supported, but will now fail.\n\nAdded by @Gedochao in #3381 and #3333 andCap vague Scala versions at defaults\nNOTE: this is a breaking change regarding how the Scala version is resolved.We have changed how a Scala version is picked when major or major.minor prefixes are passed, rather than the full version tag:\n- -S 3 will now point to the launcher default Scala 3 Next version, rather than whatever is the latest stable version that coursier can find upstream\n- similarly, -S 3.<current launcher default minor> will now point to the launcher default Scala 3 Next version\n- -S 2.13 will point to the launcher default Scala 2.13 version (which up till now only affected tests and generated docs)\n- similarly, -S 2.12 will now point to the launcher default Scala 2.12 version\n- launcher defaults are overridden for a particular Scala series with the --cli-user-scala-version to accommodate for Scala CLI installed as scala\nFor example:\n//> using 3\n// When compiled with Scala CLI v1.6.0, this snippet will use Scala 3.6.3 (the built-in default), even if a newer version has been released.\n\nAdded by @Gedochao in #3259Support for Scala 3.6.3 and 2.13.16\nThis Scala CLI version switches the default Scala version to 3.6.3.\nscala-cli version\n# Scala CLI version: 1.6.0\n# Scala version (default): 3.6.3\n\nIt has also been tested with Scala 2.13.16.Added by @Gedochao in #3426 and #3418Support for Scala.js 1.18.1\nThis Scala CLI version adds support for Scala.js 1.18.1.\nscala-cli -e 'println(\"Hello\")' --js\n# Compiling project (Scala 3.6.3, Scala.js 1.18.1)\n# Compiled project (Scala 3.6.3, Scala.js 1.18.1)\n# Hello\n\nAdded in #3440 and VirtusLab/scala-js-cli#113(⚡️ experimental) scalafix integration\nWe now support running scalafix rules with the fix sub-command.\nscala-cli fix . --power\n# The `fix` sub-command is experimental\n# Please bear in mind that non-ideal user experience should be expected.\n# If you encounter any bugs or have feedback to share, make sure to reach out to the maintenance team at \n# Running built-in rules...\n# Writing project.scala\n# Removing directives from Smth.scala\n# Built-in rules completed.\n# Running scalafix rules...\n# Starting compilation server\n# Compiling project (Scala 3.6.3, JVM (23))\n# [warn] ./Main.scala:2:7\n# [warn] unused local definition\n# [warn]   val unused = \"unused\"\n# [warn]       ^^^^^^\n# Compiled project (Scala 3.6.3, JVM (23))\n# scalafix rules completed.\n\nFormer fix functionalities are now referred to in the code as the built-in rules.\nEffectively, fix now runs 2 separate sets of rules (both enabled by default): built-in and scalafix.\nThey can be controlled via the --enable-scalafix and --enable-built-in command line options.scalafix rules are ran according to the configuration in <project-root>/.scalafix.conf.It is possible to run external scalafix rules\nwith the (⚡️ experimental) scalafix.dep directive:\n//> using scalafix.dep com.github.xuwei-k::scalafix-rules:0.6.0\n\nAdded by @Vigorge and @dos65 in #2968Support for running snapshot versions of the build server (Bloop)\nIt is now possible to pass a snapshot version to the --bloop-version command line option.\nscala-cli compile . --bloop-version 2.0.7-8-fe3f53d9-SNAPSHOT\n# Starting compilation server\n# Compiling project (Scala 3.6.3, JVM (23))\n# Compiled project (Scala 3.6.3, JVM (23))\nscala-cli --power bloop about\n# bloop v2.0.7-8-fe3f53d9-SNAPSHOT\n# \n# Using Scala v2.12.20 and Zinc v1.10.7\n# Running on Java JDK v23.0.1 (~/Library/Caches/Coursier/arc/https/github.com/adoptium/temurin23-binaries/releases/download/jdk-23.0.1%252B11/OpenJDK23U-jdk_aarch64_mac_hotspot_23.0.1_11.tar.gz/jdk-23.0.1+11/Contents/Home)\n#   -> Supports debugging user code, Java Debug Interface (JDI) is available.\n# Maintained by the Scala Center and the community.\n\nAdded by @Gedochao in #3405Support for suppressing deprecation warnings\nIt is now possible to suppress deprecation warnings with the --suppress-deprecated-warnings command line option.\nscala-cli project-with-deprecated-stuff --suppress-deprecated-warnings\n\nYou can also suppress deprecation warnings globally by setting the suppress-warning.deprecated-features configuration key.\nscala-cli config suppress-warning.deprecated-features true\n\nAdded by @Gedochao in #3406Features\n- Scalafix command for scala-cli with basic options and tests by @Vigorge and @dos65 in #2968\n- Ensure vague Scala versions are capped at defaults by @Gedochao in #3259\n- Merge scalafix into fix by @Gedochao in #3400\n- Allow to use Bloop snapshot versions by @Gedochao in #3405\n- Add ways to suppress deprecation warnings by @Gedochao in #3406\nFixes\n- Misc improvements in compiler options handling by @Gedochao in #3253\n- Allow shading of single-choice compiler options from the command line regardless of -/-- prefix by @Gedochao in #3279\n- Fix dependency main class detection throwing an NPE when JAR manifest doesn't list the main class correctly by @Gedochao in #3319\n- Fix commas being treated as using directives value separators & deprecate using them with whitespace by @Gedochao in #3333\n- Retain Bloop connection when restarting a build with --watch by @Gedochao in #3351\n- Improve deprecation warnings for commas with whitespace used as using directive value separators by @Gedochao in #3366\n- Recover from invalid paths returned from Bloop diagnostics by @Gedochao in #3372\n- Add missing support for excluding transient dependencies when publishing by @Gedochao in #3357\n- Fix using directives crashing on */ by removing /* (..) */ comments support in using_directives by @Gedochao in #3381\n- fix built-in rules: don't wrap directive values in double quotes if not necessary by @Gedochao in #3414\n- Don't migrate directives with fix for single-file projects by @Gedochao in #3422\n- Temporarily disable built-in rules of fix when --check is enabled, until fully supported by @Gedochao in #3427\n- Ensure test source directives with test scope equivalents are migrated by fix to project.scala by @Gedochao in #3425\nInternal and build changes\n- Retry some of the occasionally flaky tests when failing on the CI by @Gedochao in #3320\n- Retry more occasionally flaky tests on the CI by @Gedochao in #3331\n- Tag scalajs-dom tests as flaky by @Gedochao in #3336\n- Tag native packager tests as flaky by @Gedochao in #3344\n- Make generate-junit-reports.sc script recover from test failures containing no trace data by @Gedochao in #3341\n- Support coursier-downloaded scala wrapper tests on Windows by @Gedochao in #3325\n- Get rid of duplicate names for uploaded/downloaded artifacts on the CI by @Gedochao in #3342\n- Retry generating the Windows launcher up to 5 times by @Gedochao in #3349\n- Retry generating Windows launchers in the generate-native-image.sh script directly, rather than the entire CI step by @Gedochao in #3350\n- Fix integration tests when run with a Scala 3 LTS RC version by @Gedochao in #3362\n- Retry some more flaky tests on the CI by @Gedochao in #3382\n- Run extra tests for main supported JVM versions by @Gedochao in #3375\n- tests: Add tests for issue with rereporting errors by @tgodzik in #3390\n- Add extra logs when retrying flaky tests by @Gedochao in #3433\nDeprecations\n- Deprecate --src and --sources to disambiguate with --source compiler option by @Gedochao in #3412\nDocumentation changes\n- docs: document Scala Native flag options by @scarf005 in #3386\n- docs: document Scala Native flag options by @scarf005 in #3416\n- Back port of documentation changes to main by @github-actions in #3419\n- Merge scalafix doc into fix by @Gedochao in #3420\nUpdates\n- Update Scala 3 Next RC to 3.6.2-RC1 by @Gedochao in #3305\n- Update scala-cli.sh launcher for 1.5.4 by @github-actions in #3308\n- Update coursier to 2.1.18 by @Gedochao in #3312\n- Update scala-packager to 0.1.31 by @Gedochao in #3311\n- Update jsoup to 1.18.2 by @scala-steward in #3323\n- Update Scala 3 Next RC to 3.6.2-RC2 by @Gedochao in #3321\n- Bump coursier to 2.1.19 by @Gedochao in #3326\n- Bump Typelevel toolkit to 0.1.29 by @Gedochao in #3332\n- Bump Scala 3 Next RC to 3.6.2-RC3 by @Gedochao in #3334\n- Update jsoup to 1.18.3 by @scala-steward in #3338\n- Update sbt, scripted-plugin to 1.10.6 by @scala-steward in #3339\n- Bump actions/upload-artifact & actions/download-artifact from 3 to 4 by @Gedochao in #2701\n- Update munit to 1.0.3 by @scala-steward in #3346\n- Update dependency to 0.3.2 by @scala-steward in #3353"
ReleaseNotesUrl: https://github.com/VirtusLab/scala-cli/releases/tag/v1.6.0
ManifestType: defaultLocale
ManifestVersion: 1.9.0
