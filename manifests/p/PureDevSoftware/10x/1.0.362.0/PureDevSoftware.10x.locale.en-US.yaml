# Created with YamlCreate.ps1 Dumplings Mod
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.10.0.schema.json

PackageIdentifier: PureDevSoftware.10x
PackageVersion: 1.0.362.0
PackageLocale: en-US
Publisher: PureDev Software
PublisherUrl: https://www.puredevsoftware.com/
PublisherSupportUrl: https://www.10xeditor.com/contact.htm
PrivacyUrl: https://www.10xeditor.com/10x_privacy_terms.htm
Author: PureDev Software Limited
PackageName: 10x
PackageUrl: https://10xeditor.com/
License: Proprietary
LicenseUrl: https://www.puredevsoftware.com/terms.htm
Copyright: Copyright 2025 PureDev Software
CopyrightUrl: https://www.puredevsoftware.com/terms.htm
ShortDescription: A High-Performance C++ Editor
Description: |-
  There are many code editors and IDEs on the market, so why does the world need another editor? 10x is designed to be a fast and responsive editor, that understands C++ out of the box and performs well with the largest of codebases (>5 million loc).
  There are Editors/IDEs that can handle many languages and have plugins for every eventuality, but due to the sheer size and complexity of these IDEs, they can become unresponsive and start failing for very large projects.
  Conversely, there are many fast and lightweight code editors, but they often don't parse C++, or they require complicated setup with 3rd party parsers.
  10x is designed to fill the gap between a lightweight text editor and a full IDE. 10x has many of the features of an IDE but doesn't compromise on speed, even on the largest of projects.
  10x has a custom C++ parser that works out of the box, no setup required. The parser is fast and robust and incrementally parses as you type. It provides syntax highlighting, goto-definition, autocomplete and a lot more.
  There are many editors/IDEs that promise everything, but it often comes at a cost, either in terms of responsiveness, robustness, or complexity of setup. With 10x, there is no need to compromise. You get the features you need with a fast and responsive editing experience.
  10x is aimed predominantly at the professional developer working on large and complex C++ codebases where productivity is vital. 10x makes it easy to quickly navigate around a large project and find what you need. 10x keeps you in the flow.
  Coding at 60fps with instant workspace search is something you just have to experience. You may not think your current editor is slow until you try 10x.
  10x supports opening of Visual Studio projects, opening folders, and the creation of custom 10x workspaces.
  10x is currently Windows only. Support for other platforms is planned for the future.
  As well as a custom built C++ parser, 10x also has syntax highlighting for many other languages.
  10x also has a powerful python API, which allows functionality to be added using python scripts.
Tags:
- code
- coding
- develop
- development
- programming
ReleaseNotes: |-
  Summary

  Files can now be renamed in the workspace tree. Improvements and fixes to file tabs, opening new tabs, moving and scrolling tabs improved. Improved VS connection and syncing.

  New Features

  - Added support for renaming files in the workspace tree (also renames in Perforce)

  - Added select path button to FindInFiles panel

  - Added DefaultLineEnding setting (defaults to CRLF)

  - Added $(DebugCommand) and $(DebugCommandArgs) substitutions

  - Added FormatExcludeList setting. Comma separated list of chars or words to not format

  - Pinned tabs are now scrollable

  - Added TrackActiveFileInWorkspaceTree setting

  - Added "Capture Exe Output" checkbox to the sln workspace settings. If enabled the run stdout will show in the output panel

  Optimisations

  - App shutdown optimisation

  General Fixes

  - Fixed $(BuildFile) substitution

  - Perforce connection now closed when SourceControl setting is changed to something else

  - Fixed app border showing coming out of full screen focus mode

  - Fixed double slashes in external Windows include paths

  - Fixed autocomplete sometimes not showing when backspacing a word

  - Fixed typo in $(ListworkspaceFiles), now $(ListWorkspaceFiles) (although old version wil still work for now so peoples builds don't break)

  - Tabbed panel tab scroll position is now saved/restored

  - Fixed trackpad scroll being too fast in datagrid and list UI objects

  - Fixed dragging tabs beyond the end of the visible tab range

  - Fixed mouse scrolling tabs in the horizontal tab layout

  - Proper clipping of tabs partially in view

  - Fixed new tabs sometimes not scrolling into view

  - Fixed it not being possible to drag tabs past left edge in fullscreen

  - Fixed it not being possible to drag tab past left to first tab position

  - Fixed pinning of tabs when KeepActiveTabVisible is enabled

  - Fixed gap appearing in tabs if new tab is opened while pinned tab is focused

  - Fixed dragging of tabs in vertical tab list on the right

  - Fixed dragged tab in vertical tabs list being offset when there are pinned tabs

  - Remember the tabs position (left, right or top) when columns are removed and re-added

  - Fixed dragging of tabs when there are pinned tabs

  - Fixed dragging of vertical pinned tabs

  - Fixed scroll-dragging of vertical tabs

  - Fixed crash deleting lines that contain a selection in another duplicated file panel

  - Allow windows to be dragged while exclusive panel showing

  - Stopped autocomplete from showing when typing variable, function or enum value definitions

  - Allow autocomplete for enum value assignments

  - Fixed VS syncing not reconnecting after closing a workspace and opening another one

  - Fixed window rendering sometimes being offset when the window gets focus on Windows 10

  - Fixed file renaming breaking the second time a file is renamed

  - Fixed files not being openable from the workspace tree in 10x workspaces after a rename

  - Fixed formatting of < > in templated lambdas

  - Fixed AutocompleteInComments setting

  - Fix to multi-cursor paste. When number of ines matches number of cursors it pastes lines to cursors

  - Fixed mouse wheel position being offset by -10,-10 when the window is fullscreen

  - Moved the column resize detection over to the left a bit to make it easier to click on breakpoints

  - Fixed incorrect indentation after splitting braces on Enter

  Parser Fixes

  - Stopped parser finding symbols of the same name declared further down the scope. Fixes parser failing on variables named the same as types.

  - Fixed parser stalling for a long time in the background after large text edits touching many lines

  - Fixed auto type resolving for variables assigned to the result of a [] operator call

  - Made parser prioritise main http request class in Unreal

  Misc

  - Only hide the title bar update button if update panel is cancelled

  - Stopped clicking on the file indent mode text in the status bar from changing the indent mode (too easy to click by mistake)

  - Improved layout of message boxes

  - Newly opened file tabs are now added at the current tab position instead of the end

  - Added specific zoom level settings to the main View menu

  - Made indent for non-C++ files use the indent of the last non-empty line (rather than just the previous line)

  - Stopped find text panel closing on escape key if autocomplete is showing

  - Stopped word and symbol highlighting clearing when escape is pressed to close autocomplete
ReleaseNotesUrl: https://10xeditor.com/versions.htm
PurchaseUrl: https://10xeditor.com/pricing.htm
Documentations:
- DocumentLabel: Documentation
  DocumentUrl: https://10xeditor.com/10xDocumentation/10xDocumentation.htm
- DocumentLabel: FAQ
  DocumentUrl: https://10xeditor.com/faq.htm
ManifestType: defaultLocale
ManifestVersion: 1.10.0
