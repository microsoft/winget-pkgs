# Created with YamlCreate.ps1 v2.4.6 $debug=NVS1.CRLF.7-5-1.Win32NT
# yaml-language-server: $schema=https://aka.ms/winget-manifest.locale.1.10.0.schema.json

PackageIdentifier: PureDevSoftware.MemPro
PackageVersion: 1.6.11.0
PackageLocale: zh-CN
# Publisher:
# PublisherUrl:
# PublisherSupportUrl:
# PrivacyUrl:
# Author:
# PackageName:
# PackageUrl:
License: 专有软件
# LicenseUrl:
# Copyright:
# CopyrightUrl:
ShortDescription: C++ 内存分析器
Description: |-
  MemPro 是一款 C++ 内存分析器。MemPro 运行于 Windows 平台，但可以连接并分析几乎任何平台上的应用程序。与其他 C++ 内存分析器相比，MemPro 特别擅长处理超大规模的数据集。

  快速上手
  只需几分钟即可将 MemPro 集成到您的代码库中——只需将 MemPro.cpp/h 添加到您的代码中，即可通过 MemPro 连接到您的应用程序。一旦连接，MemPro 可通过多种方式可视化您的内存使用情况。

  为什么选择 MemPro？
  MemPro 能够处理海量数据集。分析数万亿次分配的情况并不少见。MemPro 也非常适合分析实时应用程序（如游戏），因为其开销极小。由于所有处理均在离线完成，MemPro 每秒可跟踪数千次分配而不会产生明显的性能下降。

  功能特色
  - 应用程序的完整内存分解
  - 数据的多种视图方式
  - 轻松查找并修复内存泄漏
  - 支持快照间差异比较
  - 内存回退功能
  - 虚拟内存布局可视化
  - 内存碎片可视化
  - 快速高效地分析任意规模的应用程序

  工作原理
  MemPro 提供两个宏：MEMPRO_TRACK_ALLOC(p, size) 和 MEMPRO_TRACK_FREE(p)。为了方便使用，MemPro 自动重载全局 new 和 delete 操作符并添加这些宏，但如果您有自己的内存分配例程，也可以根据需要自行添加这些宏。MemPro 会记录每次分配的调用堆栈，并通过网络将所有数据发送到 MemPro。
  MemPro 离线处理这些数据。所有当前活动的分配都会被跟踪。当匹配的释放操作被发现时，分配记录会被移除。MemPro 还会存储所有分配和释放的完整历史记录，从而支持回顾性快照和内存回退功能。
  所有符号解析工作均由 MemPro 完成，以将应用程序中的开销降至最低。MemPro 会读取应用程序的符号文件并显示调用堆栈。
  在 MemPro 中查看数据的主要方式是对某个时间点拍摄一个快照。这将显示该时间点所有活跃的分配。您可以通过多种方式查看这些数据，例如调用树视图和类型视图。
  为了查找内存泄漏或内存峰值，您可以将一个快照与另一个快照进行差异比较。这将显示第二个快照中存在但第一个快照中不存在的所有分配。
  MemPro 拥有一个针对内存泄漏的强大功能。它可以分析应用程序内存的全部内容，找出任何未被代码或数据引用的分配。它还使用一套复杂的启发式方法分析每个调用堆栈的分配模式，以检查可能的泄漏。
  MemPro 对于定位内存损坏错误尤为有用。MemPro 可以显示特定地址范围内所有分配和释放的完整历史记录。这通常可以提供足够的信息来找到损坏的原因。
  MemPro 集成快捷，开销低，非常适合用于分析实时应用程序（如游戏）。使用 MemPro，您可以轻松了解内存的使用情况，快速定位内存泄漏和峰值，并解决那些难以追踪的内存损坏问题。
# Moniker:
Tags:
- c++
- cpp
- 分析器
# ReleaseNotes:
# ReleaseNotesUrl:
# PurchaseUrl:
# InstallationNotes:
Documentations:
- DocumentLabel: 用户指南
  DocumentUrl: https://www.puredevsoftware.com/MemProUserGuide/Introduction.htm
- DocumentLabel: 常见问题
  DocumentUrl: https://www.puredevsoftware.com/mempro/FAQ.htm
ManifestType: locale
ManifestVersion: 1.10.0
