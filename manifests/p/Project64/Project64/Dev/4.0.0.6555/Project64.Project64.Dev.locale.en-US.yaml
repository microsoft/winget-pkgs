# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.9.0.schema.json
PackageIdentifier: Project64.Project64.Dev
PackageVersion: 4.0.0.6555
PackageLocale: en-US
Publisher: Project64 Development Team
PublisherUrl: https://www.pj64-emu.com
PublisherSupportUrl: https://www.pj64-emu.com/support-project64.html
# PrivacyUrl:
# Author:
PackageName: Project64 (Development)
PackageUrl: https://github.com/project64/project64
License: GNU General Public License v2.0
LicenseUrl: https://github.com/project64/project64/blob/develop/license.md
# Copyright:
# CopyrightUrl:
ShortDescription: Nintendo 64 Emulator
Description: |-
  Project64 is a completely free and open-source emulator for the Nintendo 64 and 64DD written in C++.
  Capable of playing your favorite N64 games on your PC with high definition graphics, excellent compatibility, save states, built-in cheat codes, and more.
  A simple to use user interface, allowing games to just run out of the box with no configuring. Though if you want there are dozens of configuration options to make it work the way you want.
Moniker: project64-dev
Tags:
- 64dd
- n64
- nintendo64
- project64
ReleaseNotes: |-
  Clean up Windows Start Menu entry (#2465)
    Cleans up the Windows Start Menu entry for the Windows installer.
    Having an uninstall shortcut is obsolete and an unclean practice in Windows 10. Same for support.
    This change makes Project64 directly appear on the Start Menu, not requiring further clicks to expand and making the appearance clean.
  Remove unused cheat context menu entries (#2463)
  Improve alignment of UI elements (#2462)
  Various Widescreen Enhancement Codes (#2459)
    * Add 21:9 Ultrawide Enhancement for Banjo-Kazooie.
    * Add Diddy Kong Racing, Mario Kart 64 and Super Mario 64.
  Updated Swedish translation (#2458)
    * Update Swedish.pj.Lang
    * Update Swedish.pj.Lang
  CIC improvements (#2455)
    * Add CIC CRCs for iQue Player games
    * Give proper name to 64DD IPL US CIC
  Upgrade zlib to version 1.3.1 (#2448)
  Fix: NRage plugin gets stuck in initialization in certain cases (#2464)
    * Fix: NRage plugin gets stuck in initialization in certain cases The function wscanf was incorrectly used to parse VID_ and PID_ values from a string, causing failures in device detection.
      wscanf expects input from stdin, whereas in this case, the device ID string is stored in memory.
      Using swscanf ensures correct parsing from memory instead of waiting for stdin
      This fixes the issue where XInput devices not being detected properly at plugin init.
    * N-Rage: Fix memory leak in GetN64ButtonArrayFromXAnalog and GetN64ButtonNameFromButtonCode Replaced dynamic allocations (new[]) with static buffers to prevent memory leaks.
ReleaseNotesUrl: https://www.pj64-emu.com/nightly-builds
# PurchaseUrl:
# InstallationNotes:
# Documentations:
ManifestType: defaultLocale
ManifestVersion: 1.9.0
