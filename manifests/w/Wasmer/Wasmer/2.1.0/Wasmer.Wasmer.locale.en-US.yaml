# Created with YamlCreate.ps1 v2.0.2 $debug=QUSU.5-1-22523-1000
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.1.0.schema.json

PackageIdentifier: Wasmer.Wasmer
PackageVersion: 2.1.0
PackageLocale: en-US
Publisher: Wasmer Engineering Team
PublisherUrl: https://wasmer.io
PublisherSupportUrl: https://github.com/wasmerio/wasmer/issues
# PrivacyUrl: 
Author: Wasmer Engineering Team
PackageName: Wasmer
PackageUrl: https://wasmer.io
License: MIT
LicenseUrl: https://github.com/wasmerio/wasmer/blob/master/LICENSE
Copyright: Copyright (c) 2019-present Wasmer, Inc. and its affiliates.
# CopyrightUrl: 
ShortDescription: The leading WebAssembly Runtime supporting WASI and Emscripten
Description: 'Wasmer is a fast and secure WebAssembly runtime that enables super lightweight containers to run anywhere: from Desktop to the Cloud, Edge and IoT devices.'
# Moniker: 
Tags:
- wasm
- WebAssembly
# Agreements: 
ReleaseNotes: |-
  Added
  - #2574 Added Windows support to Singlepass.
  - #2535 Added iOS support for Wasmer. This relies on the `dylib-engine`.
  - #2460 Wasmer can now compile to Javascript via `wasm-bindgen`. Use the `js-default` (and no default features) feature to try it!.
  - #2491 Added support for WASI to Wasmer-js.
  - #2436 Added the x86-32 bit variant support to LLVM compiler.
  - #2499 Added a subcommand to linux wasmer-cli to register wasmer with binfmt_misc
  - #2511 Added support for calling dynamic functions defined on the host
  - #2491 Added support for WASI in Wasmer-js
  - #2592 Added `ImportObject::get_namespace_exports` to allow modifying the contents of an existing namespace in an `ImportObject`.
  - #2694 wasmer-js: Allow an `ImportObject` to be extended with a JS object.
  - #2698 Provide WASI imports when invoking an explicit export from the CLI.
  - #2701 Improved VFS API for usage from JS
  
  Changed
  - #2460 **breaking change** `wasmer` API usage with `no-default-features` requires now the `sys` feature to preserve old behavior.
  - #2476 Removed unncessary abstraction `ModuleInfoTranslate` from `wasmer-compiler`.
  - #2442 Improved `WasmPtr`, added `WasmCell` for host/guest interaction.
  - #2427 Update `loupe` to 0.1.3.
  - #2685 The minimum LLVM version for the LLVM compiler is now 12. LLVM 13 is used by default.
  - #2569 Add `Send` and `Sync` to uses of the `LikeNamespace` trait object.
  - #2692 Made module serialization deterministic.
  - #2693 Validate CPU features when loading a deserialized module.
  
  Fixed
  - #2599 Fixed Universal engine for Linux/Aarch64 target.
  - #2587 Fixed deriving `WasmerEnv` when aliasing `Result`.
  - #2518 Remove temporary file used to creating an artifact when creating a Dylib engine artifact.
  - #2494 Fixed `WasmerEnv` access when using `call_indirect` with the Singlepass compiler.
  - #2479 Improved `wasmer validate` error message on non-wasm inputs.
  - #2454 Won't set `WASMER_CACHE_DIR` for Windows.
  - #2426 Fix the `wax` script generation.
  - #2635 Fix cross-compilation for singlepass.
  - #2672 Use `ENOENT` instead of `EINVAL` in some WASI syscalls for a non-existent file
  - #2547 Delete temporary files created by the dylib engine.
  - #2548 Fix stack probing on x86_64 linux with the cranelift compiler.
  - #2557 #2559 Fix WASI dir path renaming.
  - #2560 Fix signal handling on M1 MacOS.
  - #2474 Fix permissions on `WASMER_CACHE_DIR` on Windows.
  - #2528 #2525 #2523 #2522 #2545 #2550 #2551  Fix various bugs in the new VFS implementation.
  - #2552 Fix stack guard handling on Windows.
  - #2585 Fix build with 64-bit MinGW toolchain.
  - #2587 Fix absolute import of `Result` in derive.
  - #2599 Fix AArch64 support in the LLVM compiler.
  - #2655 Fix argument parsing of `--dir` and `--mapdir`.
  - #2666 Fix performance on Windows by using static memories by default.
  - #2667 Fix error code for path_rename of a non-existant file
  - #2672 Fix error code returned by some wasi fs syscalls for a non-existent file
  - #2673 Fix BrTable codegen on the LLVM compiler
  - #2674 Add missing `__WASI_RIGHT_FD_DATASYNC` for preopened directories
  - #2677 Support 32-bit memories with 65536 pages
  - #2681 Fix slow compilation in singlepass by using dynasm's `VecAssembler`.
  - #2690 Fix memory leak when obtaining the stack bounds of a thread
  - #2699 Partially fix unbounded memory leak from the FuncDataRegistry
ReleaseNotesUrl: https://github.com/wasmerio/wasmer/blob/master/CHANGELOG.md#210---20211130
ManifestType: defaultLocale
ManifestVersion: 1.1.0
