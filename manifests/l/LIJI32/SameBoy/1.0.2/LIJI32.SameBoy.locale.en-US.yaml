# Created with komac v2.12.1
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.10.0.schema.json

PackageIdentifier: LIJI32.SameBoy
PackageVersion: 1.0.2
PackageLocale: en-US
Publisher: LIJI32
PublisherUrl: https://github.com/LIJI32
PublisherSupportUrl: https://github.com/LIJI32/SameBoy/issues
PackageName: SameBoy
PackageUrl: https://github.com/LIJI32/SameBoy
License: X11 License
LicenseUrl: https://github.com/LIJI32/SameBoy/blob/HEAD/LICENSE
ShortDescription: SameBoy is an open source Game Boy (DMG) and Game Boy Color (CGB) emulator, written in portable C.
Tags:
- emulator
- gameboy
- gameboy-color
ReleaseNotes: |-
  This version is backwards compatible with save states from SameBoy 0.14.3 and newer, as well as save states from any BESS compliant emulator
  New/Improved Features
  - New usage debugger command, displaying the Game Boy CPU's time outside of halt/stop modes
  - The debugger window in the Cocoa frontend now has a CPU usage graph
  - The debugger print/eval command no longer adds zero padding by default
  - The Cocoa frontend now has an option to force an integer scaling factor with black borders, similar to the SDL frontend
  - The iOS frontend can now configure rapid A and rapid B buttons on a controller
  - The SDL frontend now supports two optional V-sync modes
  - The Cocoa and iOS frontends were updated with UI and UX improvements for macOS and iOS 26, respectively
    - This also includes new icons when using on these operating systems, as well as on watchOS 26
  - Minor UI improvements were also done for older versions of macOS and iOS
  - SameBoy now supports the new menu bar on iPad OS 26
  - Improved frame skipping during turbo mode
  - Turbo mode can now have a configurable speed cap on all frontends
    - In the iOS frontend, this supersedes the 200% and 400% overclocking-based turbo mode options
  - Major improvements to audio quality, eliminating aliasing when playing high frequency tones
  - The iOS frontend will now alert the user if automatic save states could not be created for some reason (e.g. lack of disk space)
  - The iOS frontend will now ask for confirmations before resetting a ROM
  Accuracy Improvements/Fixes
  - Fixed an inaccuracy where the channel bias is applied to disconnected channel when mixing audio while emulating the Game Boy Advance
  Bug Fixes
  - Fixed a bug that caused certain GameShark codes to be imported incorrectly
  - Pressing the Zoom button with alt/option pressed now resizes the window to the next integer scale even on newer macOS versions
  - The debugger side view in the Cocoa frontend no longer scrolls to the bottom on longer outputs
  - Fixed a bug that causes cheat search to crash when used on a ROM with no cartridge RAM
  - Fixed a bug that prevented the Game Boy Printer from saving printed images to the iOS photo library
  - Fixed a bug where certain addresses would be described incorrectly in the Cocoa frontend's memory viewer
  - Fixed a bug that caused GBS files to play the boot ROM jingle upon loading instead of the first track
  - Fixed a bug that made the cheat search window remain open even after closing its ROM
  - Fixed a bug where imported ROMs were copied instead of moved, and vice versa, on iOS
  - Fixed a bug where Cocoa's VRAM viewer would not show scrolling on some macOS versions
  - Fixed a bug where emulation would not automatically resume after reaching the end of the rewind buffer on iOS
  - Fixed a bug where the Cocoa frontend will fail update itself if it wasn't moved to the Applications folder
  - The iOS fronted now correctly handles cases where a user tries to open a ROM from an internal iOS or SameBoy folder
  - Mitigated a rare bug where certain actions could spontaneously reset a ROM on iOS
  - Fixed a bug with the GB_save_state API where it returned success even on failures
  - Fixed a bug that prevented the binary releases of the Cocoa frontend from using the Mac's camera while emulating the Game Boy Camera
  - Fixed a bug where the interface would rotate while playing motion-controlled games on some iOS devices
  Misc Internal Changes
  - Fix build on OpenBSD
  - SameBoy's headers are now compatible with ANSI C and C++ compilation modes
  - The DISABLE_* flags can now be used while building subsets of the lib target, as well as the newly-added headers target
  - The Windows build process was changed to require Git Bash and Make instead of the GNUWin package
ReleaseNotesUrl: https://github.com/LIJI32/SameBoy/releases/tag/v1.0.2
ManifestType: defaultLocale
ManifestVersion: 1.10.0
