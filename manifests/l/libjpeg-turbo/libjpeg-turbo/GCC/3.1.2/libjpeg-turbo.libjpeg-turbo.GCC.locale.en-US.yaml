# Created with YamlCreate.ps1 Dumplings Mod
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.10.0.schema.json

PackageIdentifier: libjpeg-turbo.libjpeg-turbo.GCC
PackageVersion: 3.1.2
PackageLocale: en-US
Publisher: libjpeg-turbo
PublisherUrl: https://libjpeg-turbo.org/
PublisherSupportUrl: https://github.com/libjpeg-turbo/libjpeg-turbo/issues
Author: Darrell Commander
PackageName: libjpeg-turbo SDK for GCC
PackageUrl: https://libjpeg-turbo.org/
License: IJG license, Modified (3-clause) BSD License and zlib License
LicenseUrl: https://github.com/libjpeg-turbo/libjpeg-turbo/blob/main/LICENSE.md
Copyright: Copyright (C)2009-2024 D. R. Commander. All Rights Reserved.
ShortDescription: SIMD-accelerated libjpeg-compatible JPEG codec library
Description: libjpeg-turbo is a JPEG image codec that uses SIMD instructions (MMX, SSE2, NEON, AltiVec) to accelerate baseline JPEG compression and decompression on x86, x86-64, ARM, and PowerPC systems. On such systems, libjpeg-turbo is generally 2-6x as fast as libjpeg, all else being equal. On other types of systems, libjpeg-turbo can still outperform libjpeg by a significant amount, by virtue of its highly-optimized Huffman coding routines. In many cases, the performance of libjpeg-turbo rivals that of proprietary high-speed JPEG codecs.
Tags:
- jpeg
- libjpeg
ReleaseNotes: |-
  Significant changes relative to 3.1.1:
  1. Fixed a regression introduced by 3.1 beta1[5] that caused a segfault in TJBench if -copy or -c was passed as the last command-line argument.
  2. The build system now uses wrappers rather than CMake object libraries to compile source files for multiple data precisions. This improves code readability and facilitates adapting the libjpeg-turbo source code to non-CMake build systems.
  3. Fixed an issue whereby decompressing a 4:2:0 or 4:2:2 JPEG image with merged upsampling disabled/one-pass color quantization enabled, then reusing the same API instance to decompress a 4:2:0 or 4:2:2 JPEG image with merged upsampling enabled/color quantization disabled, caused jpeg_skip_scanlines() to use freed memory. In practice, the freed memory was not reclaimed before it was used. Thus, this issue did not cause a segfault or other user-visible errant behavior (it was only detectable with ASan), and it did not likely pose a security risk.
  4. The AArch64 (Arm 64-bit) Neon SIMD extensions and accelerated Huffman codec now support the Arm64EC ABI on Windows, which allows Windows/x64 applications to call native Arm64 functions when running under the Windows/x64 emulator on Windows/Arm.
ReleaseNotesUrl: https://github.com/libjpeg-turbo/libjpeg-turbo/releases/tag/3.1.2
Documentations:
- DocumentLabel: Documentation
  DocumentUrl: https://libjpeg-turbo.org/Documentation/Documentation
ManifestType: defaultLocale
ManifestVersion: 1.10.0
