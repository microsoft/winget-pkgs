# Created with YamlCreate.ps1 v2.2.10 $debug=QUSU.CRLF.7-3-8.Win32NT
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.5.0.schema.json

PackageIdentifier: libjpeg-turbo.libjpeg-turbo.GCC
PackageVersion: 3.0.1
PackageLocale: en-US
Publisher: libjpeg-turbo
PublisherUrl: https://libjpeg-turbo.org/
PublisherSupportUrl: https://github.com/libjpeg-turbo/libjpeg-turbo/issues
# PrivacyUrl:
Author: Darrell Commander
PackageName: libjpeg-turbo SDK for GCC
PackageUrl: https://libjpeg-turbo.org/
License: IJG license, Modified (3-clause) BSD License and zlib License
LicenseUrl: https://github.com/libjpeg-turbo/libjpeg-turbo/blob/main/LICENSE.md
Copyright: Copyright (C)2009-2023 D. R. Commander. All Rights Reserved.
# CopyrightUrl:
ShortDescription: SIMD-accelerated libjpeg-compatible JPEG codec library
Description: libjpeg-turbo is a JPEG image codec that uses SIMD instructions (MMX, SSE2, NEON, AltiVec) to accelerate baseline JPEG compression and decompression on x86, x86-64, ARM, and PowerPC systems. On such systems, libjpeg-turbo is generally 2-6x as fast as libjpeg, all else being equal. On other types of systems, libjpeg-turbo can still outperform libjpeg by a significant amount, by virtue of its highly-optimized Huffman coding routines. In many cases, the performance of libjpeg-turbo rivals that of proprietary high-speed JPEG codecs.
# Moniker:
Tags:
- jpeg
- libjpeg
ReleaseNotes: |-
  Significant changes relative to 3.0.0:
  1. The x86-64 SIMD functions now use a standard stack frame, prologue, and epilogue so that debuggers and profilers can reliably capture backtraces from within the functions.
  2. Fixed two minor issues in the interblock smoothing algorithm that caused mathematical (but not necessarily perceptible) edge block errors when decompressing progressive JPEG images exactly two MCU blocks in width or that use vertical chrominance subsampling.
  3. Fixed a regression introduced by 3.0 beta2[6] that, in rare cases, caused the C Huffman encoder (which is not used by default on x86 and Arm CPUs) to generate incorrect results if the Neon SIMD extensions were explicitly disabled at build time (by setting the WITH_SIMD CMake variable to 0) in an AArch64 build of libjpeg-turbo.
ReleaseNotesUrl: https://github.com/libjpeg-turbo/libjpeg-turbo/releases/tag/3.0.1
# PurchaseUrl:
# InstallationNotes:
Documentations:
- DocumentLabel: Documentation
  DocumentUrl: https://libjpeg-turbo.org/Documentation/Documentation
ManifestType: defaultLocale
ManifestVersion: 1.5.0
