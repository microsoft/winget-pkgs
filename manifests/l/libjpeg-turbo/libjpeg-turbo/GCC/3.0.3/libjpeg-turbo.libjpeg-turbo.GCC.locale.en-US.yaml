# Created with YamlCreate.ps1 v2.4.1 Dumplings Mod $debug=QUSU.CRLF.7-4-2.Win32NT
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.6.0.schema.json

PackageIdentifier: libjpeg-turbo.libjpeg-turbo.GCC
PackageVersion: 3.0.3
PackageLocale: en-US
Publisher: libjpeg-turbo
PublisherUrl: https://libjpeg-turbo.org/
PublisherSupportUrl: https://github.com/libjpeg-turbo/libjpeg-turbo/issues
# PrivacyUrl:
Author: Darrell Commander
PackageName: libjpeg-turbo SDK for GCC
PackageUrl: https://libjpeg-turbo.org/
License: IJG license, Modified (3-clause) BSD License and zlib License
LicenseUrl: https://github.com/libjpeg-turbo/libjpeg-turbo/blob/main/LICENSE.md
Copyright: Copyright (C)2009-2024 D. R. Commander. All Rights Reserved.
# CopyrightUrl:
ShortDescription: SIMD-accelerated libjpeg-compatible JPEG codec library
Description: libjpeg-turbo is a JPEG image codec that uses SIMD instructions (MMX, SSE2, NEON, AltiVec) to accelerate baseline JPEG compression and decompression on x86, x86-64, ARM, and PowerPC systems. On such systems, libjpeg-turbo is generally 2-6x as fast as libjpeg, all else being equal. On other types of systems, libjpeg-turbo can still outperform libjpeg by a significant amount, by virtue of its highly-optimized Huffman coding routines. In many cases, the performance of libjpeg-turbo rivals that of proprietary high-speed JPEG codecs.
# Moniker:
Tags:
- jpeg
- libjpeg
ReleaseNotes: |-
  Significant changes relative to 3.0.2:
  1. Fixed an issue in the build system, introduced in 3.0.2, that caused all libjpeg-turbo components to depend on the Visual C++ run-time DLL when built with Visual C++ and CMake 3.15 or later, regardless of value of the WITH_CRT_DLL CMake variable.
  2. The x86-64 SIMD extensions now include support for Intel Control-flow Enforcement Technology (CET), which is enabled automatically if CET is enabled in the C compiler.
  3. Fixed a regression introduced by 3.0 beta2[6] that made it impossible for calling applications to supply custom Huffman tables when generating 12-bit-per-component lossy JPEG images using the libjpeg API.
  4. Fixed a segfault that occurred when attempting to use the jpegtran -drop option with a specially-crafted malformed input image or drop image (specifically an image in which all of the scans contain fewer components than the number of components specified in the Start Of Frame segment.)
ReleaseNotesUrl: https://github.com/libjpeg-turbo/libjpeg-turbo/releases/tag/3.0.3
# PurchaseUrl:
# InstallationNotes:
Documentations:
- DocumentLabel: Documentation
  DocumentUrl: https://libjpeg-turbo.org/Documentation/Documentation
ManifestType: defaultLocale
ManifestVersion: 1.6.0
