# Created with YamlCreate.ps1 v2.4.1 Dumplings Mod $debug=QUSU.CRLF.7-4-3.Win32NT
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.6.0.schema.json

PackageIdentifier: LLVM.LLVM
PackageVersion: 18.1.8
PackageLocale: en-US
Publisher: LLVM
PublisherUrl: https://llvm.org
PublisherSupportUrl: https://discourse.llvm.org
# PrivacyUrl:
# Author:
PackageName: LLVM
PackageUrl: https://llvm.org
License: Apache-2.0 with LLVM Exceptions
LicenseUrl: https://github.com/llvm/llvm-project/blob/llvmorg-16.0.0/LICENSE.TXT
Copyright: © Copyright 2003-2024, LLVM Project.
# CopyrightUrl:
ShortDescription: A collection of modular and reusable compiler and toolchain technologies.
# Description:
Moniker: llvm
Tags:
- c
- c++
- clang
- compile
- compiler
- lld
- lldb
- llvm
- objective-c
- toolchain
ReleaseNotes: |-
  - This release fixes a bug in libc++ with -fsized-deallocation:
    - Users who don’t use a custom allocator in std::string and don’t enable sized deallocation (which is off by default in Clang 18) will not be affected. This is expected to be the vast majority of users.
    - Users who don’t use a custom allocator in std::string but are enabling sized deallocation (e.g. with -fsized-deallocation) will notice that operator delete(void*, size_t) is now being passed the correct
      size. This likely has no impact if they were not customizing operator delete.
    - Users who use a custom allocator in std::string will notice that they now get passed the correct allocation size upon deallocation.
ReleaseNotesUrl: https://discourse.llvm.org/t/18-1-8-released/79725
# PurchaseUrl:
# InstallationNotes:
Documentations:
- DocumentLabel: Documentation
  DocumentUrl: https://llvm.org/docs
ManifestType: defaultLocale
ManifestVersion: 1.6.0
