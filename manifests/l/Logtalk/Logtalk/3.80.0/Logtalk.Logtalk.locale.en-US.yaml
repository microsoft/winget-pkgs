# Created with YamlCreate.ps1 v2.4.1 Dumplings Mod $debug=QUSU.CRLF.7-4-2.Win32NT
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.6.0.schema.json

PackageIdentifier: Logtalk.Logtalk
PackageVersion: 3.80.0
PackageLocale: en-US
Publisher: Logtalk.org
PublisherUrl: https://logtalk.org/
PublisherSupportUrl: https://logtalk.org/support.html
# PrivacyUrl:
Author: Paulo Moura
PackageName: Logtalk
PackageUrl: https://logtalk.org/
License: Apache-2.0
LicenseUrl: https://github.com/LogtalkDotOrg/logtalk3/blob/master/LICENSE.txt
Copyright: Copyright 1998-2024 Paulo Moura <pmoura@logtalk.org>
CopyrightUrl: https://github.com/LogtalkDotOrg/logtalk3/blob/master/NOTICE.txt
ShortDescription: Declarative object-oriented logic programming language
Description: Logtalk is a declarative object-oriented logic programming language that extends and leverages the Prolog language with modern code encapsulation and code reuse mechanisms while also providing improved predicate semantics.
# Moniker:
Tags:
- language
- logic
- programming
- prolog
ReleaseNotes: |-
  Logtalk compiler and runtime
  - CHANGED: Also print a silent compiling_file/2 message when processing include/1 directives that can be intercepted by tools.
  - CHANGED: Renamed the logtalk object debug_handler_provider/1 predicate to debug_handler/1 and the debug_handler/2 predicate to debug_handler/3.
  - ADDED: New activate_debug_handler/1, deactivate_debug_handler/0, and active_debug_handler/1 predicates to the logtalk object supporting the activation and deactivation of debug handler providers.
  - ADDED: New entity property, directive/2, providing the entity opening directive start and end lines when defined in a source file.
  - ADDED: Compiler support for using backend proprietary directives in calls to the create_object/4 and create_category/4 built-in predicates.
  - IMPROVED: Allow multiple debug handler providers to be loaded simultaneously (with the restriction that only one of them can be active at any given time).
  - FIXED: Regression preventing linter warnings for duplicated clauses and grammar rules.
  - FIXED: Reporting of the number of compilation warnings will fail to count some of the warnings.
  - FIXED: The phrase/2-3 built-in methods to properly handle a runtime bound first argument when called from a meta-predicate. Thanks to Alex Kouznetsov for the bug report.
  Prolog adapter and integration files
  - UPDATED: The LVM adapter file to support encryption of the intermediate Prolog files generated by the compiler by setting the prolog_compiler flag to [encrypt(true)] and the clean flag to off.
  - ADDED: SWI-Prolog adapter file initial support for using tabling directives and predicates in dynamically created objects.
  Documentation
  - ADDED: A "Known issues" section to the embedding scripts documentation.
  - ADDED: Handbook documentation on how to define debug handler providers.
  - ADDED: Handbook documentation on debugging using log points.
  Library
  - ADDED: New sequential_occurrences/2-3 list predicates to the types library.
  Tools
  - CHANGED: The debugger and ports_profiler tools for the new debug handler predicates.
  - ADDED: New start/0 and stop/0 predicates to the ports_profiler object to simplify activating and deactivating it as the debug handler provider.
  - ADDED: Support for log points to the debugger tool.
  - ADDED: New public explain//1 non-terminal to the tutor tool.
  - UPDATED: The debugger object debug/0 and trace/0 predicates to activate the object as the current debug handler provider. Updated also the nodebug/0 predicate to deactivate the debugger object as the current debug handler provider.
  - UPDATED: The debugger tool to print silent port messages (when leashed) that can be intercepted by tools.
  - IMPROVED: The packs tool to clarify when trying to install a pack that's already installed if it's installed from a different registry.
  Examples
  - FIXED: The missing_data example loader file.
  - FIXED: Lambda expression warnings when loading the missing_data example.
  IDEs, text editors, and syntax highlighters support
  - ADDED: VSCode support for managing spy points and log points.
  - ADDED: VSCode handling of compiling_file/2 messages to support clearing file diagnostics when recompiling files.
  - UPDATED: VSCode support to allow the find_implementations/4 predicate to also find protocol implementations.
  - FIXED: VSCode cases where non-terminal declarations and definitions would not be found.
  - FIXED: VSCode case where the definition for a predicate listed in a uses/2 directive would not be found.
  - FIXED: VSCode finding of entity references to avoid false positives.
  - FIXED: VSCode support when (re-)running tests without using the GUI command.
  - FIXED: VSCode support for clearing file diagnostics when recompiling files.
ReleaseNotesUrl: https://github.com/LogtalkDotOrg/logtalk3/blob/master/RELEASE_NOTES.md#3800---june-4-2024
# PurchaseUrl:
# InstallationNotes:
Documentations:
- DocumentLabel: Documentation
  DocumentUrl: https://logtalk.org/documentation.html
- DocumentLabel: Guides
  DocumentUrl: https://logtalk.org/guides.html
ManifestType: defaultLocale
ManifestVersion: 1.6.0
