# Created with komac v2.12.1
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.10.0.schema.json

PackageIdentifier: bluenviron.mediamtx
PackageVersion: 1.14.0
PackageLocale: en-US
Publisher: bluenviron
PublisherUrl: https://github.com/bluenviron
PublisherSupportUrl: https://github.com/bluenviron/mediamtx/issues
Author: aler9
PackageName: mediamtx
PackageUrl: https://github.com/bluenviron/mediamtx
License: MIT
LicenseUrl: https://github.com/bluenviron/mediamtx/blob/HEAD/LICENSE
Copyright: Copyright (c) 2019 aler9
CopyrightUrl: https://github.com/bluenviron/mediamtx/blob/main/LICENSE
ShortDescription: |-
  Ready-to-use SRT / WebRTC / RTSP / RTMP / LL-HLS media server and media proxy that allows to read,
  publish, proxy, record and playback video and audio streams.
Description: |-
  MediaMTX is a ready-to-use and zero-dependency real-time media server and media proxy that allows
  to publish, read, proxy, record and playback video and audio streams. It has been conceived as a
  "media router" that routes media streams from one end to the other.
Tags:
- go
- golang
- hls
- media-server
- obs-studio
- rtcp
- rtmp
- rtmp-proxy
- rtmp-server
- rtp
- rtsp
- rtsp-proxy
- rtsp-relay
- rtsp-server
- streaming
- webrtc
ReleaseNotes: |-
  New major features
  RTP
  - support ingesting RTP streams (#1515) (#4843)
  WebRTC
  - restore IPv6 support (#3227) (#4816)
  Fixes and improvements
  General
  - metrics: add paths_readers metric (#4473) (#4789)
  - metrics: add path and remoteAddr tags (#3941) (#3420) (#4794)
  - apidocs: add missing format to integers and floats (#4796)
  - metrics: add additional WebRTC metrics (#3304) (#4797, webrtc_sessions_rtp_packets_sent, webrtc_sessions_rtp_packets_lost, webrtc_sessions_rtp_packets_jitter, webrtc_sessions_rtcp_packets_received, webrtc_sessions_rtcp_packets_sent.
  - metrics: allow filtering metrics (#953) (#4809)
  - Add support for HTTP over unix sockets (#4241)
  - Add FreeBSD instructions (#4218)
  - prevent leakages by exiting gracefully with SIGTERM (#4352) (#4845)
  - allow setting UDP read buffer size (#3308) (#4846) new parameters: rtspUDPReadBufferSize, rtpUDPReadBufferSize, mpegtsUDPReadBufferSize
  - fix memory leak when reloading the configuration (#4855) When a path has a MPEG-TS, RTP or WebRTC source and the pathconfiguration is reloaded, a routine was left open because the reload channel was not handled. This fixes the issue.
  API
  - add additional WebRTC statistics (#4795) rtpPacketsReceived, rtpPacketsSent, rtpPacketsLost, rtpPacketsJitter, rtcpPacketsReceived, rtcpPacketsSent
  - rename udpSource into mpegtsSource (#4842)
  RTSP
  - client: use server interface as multicast interface (bluenviron/gortsplib#762) (bluenviron/gortsplib#847) this fixes most errors "found no interface that is multicast-capable and can communicate with IP".
  - client: prevent setting up undesired back channels (bluenviron/gortsplib#856)
  WebRTC
  - remove custom forks of pion/webrtc and pion/ice (#4861) this fixes IPv6 reliability issues and allows to receive upstream updates in a more linear way.
  - speed up candidate extraction (#4801)
  - close WebRTC sessions when closing browser tabs (https://github.com/bluenviron/mediamtx/issues/4477) (#4849) This should decrease the delay before WebRTC sessions are marked as closed.
  - fix clock rate of outgoing RTCP receiver reports (#4852)
  - fix crash when loading an invalid configuration (#4856)
  - show SDP answers in logs (#4862)
  - solve domains in webrtcAdditionalHosts on server-side (#4817) (#4866)
  MPEG-TS
  - support MPEG-TS over unix sockets (#4388) (#4389) (#4828)
  - listen on default multicast interface (#4565) (#4820) ... instead of listening on all multicast interfaces.
  RPI Camera
  - add validity checks on rpiCameraProfile and rpiCameraLevel (#4783)
  - rename rpiCameraJPEGQuality in rpiCameraMJPEGQuality (#4784)
  - rename rpiCameraProfile into rpiCameraH264Profile, rpiCameraLevel into rpiCameraH264Level (#3965) (#4785)
  - allow setting software H264 profile and level (#3965) (#4786)
  - allow setting software H264 profile and level (#3965) (bluenviron/mediamtx-rpicamera#57)
  Dependencies
  - code.cloudfoundry.org/bytefmt updated from v0.44.0 to v0.45.0
  - github.com/MicahParks/keyfunc/v3 updated from v3.4.0 to v3.6.1
  - github.com/alecthomas/kong updated from v1.12.0 to v1.12.1
  - github.com/bluenviron/gortsplib/v4 updated from v4.16.0 to v4.16.2
  - github.com/bluenviron/mediacommon/v2 updated from v2.4.0 to v2.4.1
  - github.com/golang-jwt/jwt/v5 updated from v5.2.3 to v5.3.0
  - github.com/matthewhartstonge/argon2 updated from v1.3.3 to v1.3.4
  - github.com/pion/ice/v4 updated from v4.0.7 to v4.0.10
  - github.com/pion/webrtc/v4 updated from v4.0.7 to v4.1.3
  - golang.org/x/crypto updated from v0.40.0 to v0.41.0
  - golang.org/x/sys updated from v0.34.0 to v0.35.0
  - golang.org/x/term updated from v0.33.0 to v0.34.0
  - github.com/pion/dtls/v3 updated from v3.0.4 to v3.0.6
  - github.com/pion/sctp updated from v1.8.36 to v1.8.39
  - golang.org/x/net updated from v0.42.0 to v0.43.0
  - golang.org/x/text updated from v0.27.0 to v0.28.0
  - github.com/bluenviron/mediamtx-rpicamera updated from v2.4.3 to v2.4.4
  - hls.js updated from v1.6.7 to v1.6.9
  Security
  Binaries have been produced by the Release workflow without human intervention.
  You can verify that binaries have been produced by the workflow by using GitHub Attestations:
  ls mediamtx_* | xargs -L1 gh attestation verify --repo bluenviron/mediamtx
  You can verify the binaries checksum by downloading checksums.sha256 and running:
  cat checksums.sha256 | grep "$(ls mediamtx_*)" | sha256sum --check
ReleaseNotesUrl: https://github.com/bluenviron/mediamtx/releases/tag/v1.14.0
ManifestType: defaultLocale
ManifestVersion: 1.10.0
