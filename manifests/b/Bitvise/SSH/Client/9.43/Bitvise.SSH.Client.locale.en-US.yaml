# Created with YamlCreate.ps1 Dumplings Mod
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.9.0.schema.json

PackageIdentifier: Bitvise.SSH.Client
PackageVersion: "9.43"
PackageLocale: en-US
Publisher: Bitvise Limited
PublisherUrl: https://bitvise.com/
PublisherSupportUrl: https://bitvise.com/contact
PrivacyUrl: https://bitvise.com/privacy-policy
Author: Bitvise Limited
PackageName: Bitvise SSH Client
PackageUrl: https://bitvise.com/ssh-client
License: Freeware
LicenseUrl: https://bitvise.com/ssh-client-license
Copyright: Copyright (C) 2000-2024 by Bitvise Limited.
CopyrightUrl: https://bitvise.com/terms-of-use
ShortDescription: Free SSH file transfer, terminal and tunneling
Description: |-
  Our SSH client supports all desktop and server versions of Windows, 32-bit and 64-bit, from Windows XP SP3 and Windows Server 2003, up to the most recent â€“ Windows 11 and Windows Server 2025.
  Our client is free for use of all types, including in organizations.
  Our SSH and SFTP client for Windows incorporates:
  - One of the most advanced graphical SFTP clients.
  - Single-click Remote Desktop forwarding.
  - State-of-the-art terminal emulation with support for the bvterm, xterm, and vt100 protocols.
  - Support for corporation-wide single sign-on using SSPI (GSSAPI) Kerberos 5 and NTLM user authentication, as well as Kerberos 5 host authentication.
  - Support for ECDSA, RSA and DSA public key authentication with comprehensive user keypair management.
  - Encryption and security: Provides state-of-the-art encryption and security suitable as part of a standards-compliant solution meeting the requirements of PCI, HIPAA, or FIPS 140-2 validation.
  - SSH jump proxy: Connect to a final destination SSH or SFTP server by connecting through an SSH jump server. In the graphical SSH Client, this is configured in Proxy settings, on the Login tab.
  - Obfuscated SSH with an optional keyword. When supported and enabled in both the client and server, obfuscation makes it more difficult for an observer to detect that the protocol being used is SSH. (Protocol; OpenSSH patches)
  - Powerful SSH port forwarding capabilities, including dynamic forwarding through integrated SOCKS and HTTP CONNECT proxy.
  - Powerful command-line parameters which make the SSH client highly customizable and suitable for use in specific situations and controlled environments.
  - SFTP drive mapping: Access files on an SFTP server as if they were local, from any Windows application.
  - An FTP-to-SFTP bridge allowing you to connect to an SFTP server using legacy FTP applications.
  - An advanced, scriptable command-line SFTP client, sftpc.
  - A scriptable command-line remote execution client, sexec, and a command-line terminal console client, stermc.
  - A scriptable command-line tunneling client, stnlc, with support for static port forwarding rules, dynamic SOCKS-based tunneling, and FTP-to-SFTP bridge.
  - Our .NET SSH library, FlowSshNet, with example PowerShell scripts showing how to use the SSH library for file transfer and remote program execution from PowerShell.
  - Bitvise SSH Server remote administration features.
  Bitvise software does not contain ads, install product bundles or collect user data for sale. We are 100% supported by users who license our software. Thank you!
Moniker: bitvisessh
Tags:
- bvterm
- file
- file-transfer
- forwarding
- remote-desktop-forwarding
- sftp
- ssh
- terminal
- tunneling
- vt100
- xterm
Agreements:
- AgreementLabel: End User License Agreement (EULA)
  AgreementUrl: https://bitvise.com/ssh-client-license
ReleaseNotes: |-
  - SSH cryptography:
    - Starting with 9.43, the latest versions of Bitvise software no longer use OpenSSL:
      - OpenSSL no longer supports versions 1.1.1. Our recent software versions used this to support a handful of algorithms not supported by Windows.
      - There are new fixes only available in OpenSSL 3.x.
      - OpenSSL 3.x promotes opaque interfaces and hides details. This is the opposite of our requirements.
      - OpenSSL 3.x is even larger than 1.1.1, and dramatically increases linker bloat. Updating OpenSSL 1.1.1 to 3.4.1 increases the size of CiWinCng64.dll from 3.3 MB to 5.0 MB. Removing OpenSSL reduces the size to 1.4 MB. The difference, 3.6 MB, is a lot of complexity to support some marginal algorithms.
      This change does not affect most algorithms. We support most algorithms using Windows cryptography. Only the following is affected:
      - chacha20-poly1305: We now support this algorithm using public domain ChaCha20 implementations from Goll & Gueron (on most CPUs with AVX2), Daniel J. Bernstein (on CPUs without AVX2), and Poly1305 from Andrew Moon (poly1305-donna).
        In new Bitvise software installations, chacha20-poly1305 is disabled by default, because it is the most susceptible to the Terrapin attack if the counterparty does not implement strict key exchange. This algorithm is secure if both parties support strict key exchange. In Bitvise software, strict key exchange is supported in versions 9.32 and newer.
      - ECDSA and ECDH over the curve secp256k1: On Windows 10 and newer, and Windows Server 2016 and newer, we continue to support this curve using Windows cryptography. On these Windows versions, there is no change.
        On Windows Vista to 8.1, and Windows Server 2008 to 2012 R2, secp256k1 is now supported using Crypto++ 5.6. This implementation is not constant-time, so in this case, we enable signature timing mitigations. The timing mitigations favor security over performance: a signature is delayed to take e.g. 50 ms instead of 1 ms.
        In SSH, this prime field curve is rarely used. We support it for compatibility with previous versions. We originally added this curve because it is used in Bitcoin, so it is subject to intense scrutiny. However, users who want elliptic curve cryptography, but doubt the widely used NIST curves, have usually chosen Curve25519 and Ed25519.
      If FIPS 140-2 cryptography is enabled in Windows, there is no change. If FIPS mode is enabled, Bitvise software already restricts itself only to algorithms supported by Windows. In this case, chacha20-poly1305 is not available, and secp256k1 is available only on Windows versions 10 and newer, which support it.
    - Bitvise software versions 9.xx remain compatible with Windows XP and Windows Server 2003. To support SSH cryptography on these platforms, our installers include DLL files CiCpFips32/64.dll and CryptoPP530Fips32/64.dll. These DLLs are not used on Windows Vista and newer, but were previously installed on all Windows versions. They are now no longer installed on Windows versions where they are not used.
  - SFTP:
    - When resuming or updating files using hash-based synchronization, progress was being reported incorrectly. When the destination file was larger than the source, the final file size was also displayed incorrectly. Fixed.
  - Terminal:
    - In previous versions, the SSH Client's xterm implementation would stop parsing unrecognized CSI escape sequences at the first unrecognized byte, and render the bytes which follow. The SSH Client now continues to parse unrecognized CSI sequences according to ECMA-48, and ignores them. This avoids unexpected characters in output when a server application sends sequences which the SSH Client does not support. For example, the fish shell sends such sequences associated with the Kitty Keyboard Protocol.
ReleaseNotesUrl: https://www.bitvise.com/ssh-client-version-history-9#943
ManifestType: defaultLocale
ManifestVersion: 1.9.0
