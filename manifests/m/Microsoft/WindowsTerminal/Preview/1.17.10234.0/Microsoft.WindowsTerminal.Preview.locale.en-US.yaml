# Created with Komac v1.1.0
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.4.0.schema.json

PackageIdentifier: Microsoft.WindowsTerminal.Preview
PackageVersion: 1.17.10234.0
PackageLocale: en-US
Publisher: Microsoft Corporation
PublisherUrl: https://github.com/microsoft/terminal
PublisherSupportUrl: https://github.com/microsoft/terminal/issues
Author: Microsoft Corporation
PackageName: Windows Terminal Preview
PackageUrl: https://github.com/microsoft/terminal
License: MIT
LicenseUrl: https://github.com/microsoft/terminal/blob/master/LICENSE
Copyright: Copyright (c) Microsoft Corporation. All rights reserved.
CopyrightUrl: https://github.com/microsoft/terminal/blob/master/LICENSE
ShortDescription: The new Windows Terminal, a tabbed command line experience for Windows.
Description: |-
  Windows Terminal is a modern terminal application for users of command line tools and shells like Command Prompt, PowerShell, and Windows Subsystem for Linux (WSL).
   Its main features include multiple tabs, panes, Unicode and UTF-8 character support, a GPU accelerated text rendering engine, and the ability to create your own themes and customize text, colors, backgrounds, and shortcut key bindings.
Moniker: terminal-preview
Tags:
- command-line
- command-prompt
- console
- developer-tools
- powershell
- shell
- utilities
- wsl
ReleaseNotes: |-
  Features
  - You can now customize the order and contents of the New Tab menu (#13763) (thanks @fwest98!) (#14629)
  - Right now, you can only do this with JSON; check out the docs for newTabMenu
  - The first time you save your settings in 1.17, we'll convert your existing menu to the new format.
    This is
  - This feature includes support for adding folders, separators, and profiles that meet certain criteria in addition
  - You can now set the scroll bar to be "always" displayed (thanks @sotteson1!) (#14047)
  - JSON field $profile.scrollbarState has learned the new enum value always.
  - After a process terminates, you can press <kbd>Ctrl+D</kbd> to close its pane or <kbd>Enter</kbd> to relaunch it (#14060)
  - Terminal now supports the remaining FinalTerm mark types (command input start, command executed and command finished) (#14341)
  Themes
  - Terminal now supports using Mica as a background material on Windows 11 (#13935) (#14675) (#14567) (#14540) (#14644) (#14708)
  - > Note As a reminder, theme settings are only available via JSON.
  - To use Mica, set up a new theme with the following settings:
  - {"window": {"useMica": true}, "tabRow": {"background": "#00000000"}}
  - You can now configure a color scheme (per profile) to apply in System Light theme and System Dark theme (#14064) (thanks @bennettnicholas!)
  - Set $profile.colorScheme to an object containing the keys light and dark, ala { "light": "Scheme One", "dark": "Scheme Two" }.
  - When first implemented, this may have crashed; it no longer does so! (#14653) (thanks @jboelter!)
  - Likewise, you can do the same thing for the application theme (#14497)
  Fundamentals
  - The backing buffer now stores surrogate pairs inline, and measures columns differently (#13626) with bug fixes from @j4james (thanks!) (#14650)
  - Please report any unusual behavior regarding Unicode characters, including selection, copy, paste and display.
  - The contents of the Terminal package are now code-signed, so those of you who deploy it unzipped will no longer
  UI
  - We have changed how we display our version numbers, opting to hide "bookkeeping" information such as the final
  - You can now configure all of the launch position parameters in the _Startup_ section of the Settings UI (#14569) (#14518) (#14186) (#14190) (#13605) plus community bug fixes (#14522) (thanks @ianjoneill!)
  - We've revamped the color schemes page for ease of understanding and _sheer coolness_ (#14470) (#14706) (#14631) (#14550) (#14704)
  - When configuring a profile's color scheme, you will now see a tiny preview of that color scheme before you
  Usability
  - wt now supports the --pos and --size commandline arguments to control the position and size of the new
  - When you duplicate a tab, the new will open next to the current tab (#14521) (thanks @vamsiikrishnaak!)
  - You can now use exe and dll resources for icon paths, as in C:\Windows\system32\shell32.dll,41 (#14107)
  - However, it looks like we have an off-by-one error (that should be 42 above, but whoops.
    We'll fix that.)
  - The context menu now has tooltips (#14058)
  - ... added support for DEC macro operations (#14402)
  - ... added support for DECARM (Auto Repeat Mode) (#13981)
  - ... added support for IRM (Insert Replace Mode), which will be of particular interest to @vixie (sorry for the
  - ... added support for private options in DSR queries (#14290)
  - ... added support for selective erase operations (DECSED) (#14046)
  - ... added support for the DECRQM escape sequence (#14444)
  - ... added support for the rectangular area operations (DEC*RA) (#14285)
  - ... merged the legacy and extended attributes (#14036)
  - ... rewrote how we handled text embedded in a stream of VT, which closed like 8 bugs (seriously) (#14640)
  - ... added support for line rendition attributes (DECDHL) over ConPTY (#13933)
  - ... added support for soft fonts over (DECDLD) ConPTY as well (#13965)
  Bug Fixes
  - The Export and Find context menu items work on unfocused tabs (#14673) (#14379) (thanks @ianjoneill!)
  - We've retooled how we launch Terminal elevated when you use an elevate: true profile (or
  - The about dialog (and other dialogs) will finally block the entire window even if you resize it (#14722)
  - We now attempt to account for transparent tab backgrounds when calculating the text foreground color (#14643)
  - You can now drag/drop more than 16 items directly out of 7-Zip (and some other applications) (#14648) (thanks @jiejasonliu!)
  - Malformed settings objects will no longer cause an "Application error 0x%" settings warning (#14668)
  - Note that "Use Acrylic in Tab Row" no longer requires a relaunch (#14478)
  - Terminal now more reliably handles text selections in very scrolly environments (#14636)
  - Split pane borders no longer display in the wrong theme color (#14486)
  - We've updated the JSON schema to contain theme objects (#14672) (#14666)
  - In separate titlebar mode, Terminal will now default to a dark title bar when you are using a dark theme (#14536)
  Reliability
  - Voice Access will no longer crash Terminal (#14534)
  - We've removed a leading cause of crashes closing panes and tabs while screen reading was active (#14714)
  - Input will no longer (rarely) trigger a crash when a screen reader is enabled (#14694)
  - wpf: stop dereferencing null pointers already! _come on, it's 2023!_ (#14678)
  Performance
  - We've reworked how the locking around each terminal pane works (#13746)
  - We have removed our dependency on Microsoft.Toolkit.Win32.UI.XamlApplication.dll (#14520)
  Accessibility
  - The "Add Appearance" button will now be read out properly by screen readers (#14564)
  - ... so will the search box (#14519)
  - Our internal management window will no longer appear as an empty pane to screen readers (#14541)
  Compatibility
  - We will now properly track console handle inheritance so that cmd /c start /b cmd (et al) can properly
  VT
  - Wide characters will no longer cause weird cursor leavings (#14661) (thanks @j4james!)
  - VT reports once again work when DECARM is disabled (#14216) (thanks @j4james!)
  - When the alternate buffer is in use, the scroll bar will no longer overlap the content (#14329) (thanks @j4james!)
  Asset Hashes
  - Microsoft.WindowsTerminalPreview_Win10_1.17.10234.0_8wekyb3d8bbwe.msixbundle
  - SHA256 0D0FB3F81845AE76EB174484
  - Microsoft.WindowsTerminalPreview_Win11_1.17.10235.0_8wekyb3d8bbwe.msixbundle
  - SHA256 800CCDB224236C98682ED643
ReleaseNotesUrl: https://github.com/microsoft/terminal/releases/tag/v1.17.1023
ManifestType: defaultLocale
ManifestVersion: 1.4.0
