# Created with YamlCreate.ps1 Dumplings Mod
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.9.0.schema.json

PackageIdentifier: MartinStorsjo.LLVM-MinGW.UCRT
PackageVersion: 19.1.6-20241217
PackageLocale: en-US
Publisher: Martin Storsjö
PublisherUrl: https://github.com/mstorsjo
PublisherSupportUrl: https://github.com/mstorsjo/llvm-mingw/issues
Author: Martin Storsjö
PackageName: LLVM MinGW (UCRT runtime)
PackageUrl: https://github.com/mstorsjo/llvm-mingw
License: ISC
LicenseUrl: https://github.com/mstorsjo/llvm-mingw/blob/HEAD/LICENSE.txt
ShortDescription: An LLVM/Clang/LLD based mingw-w64 toolchain, with UCRT runtime library
Description: |-
  This is a recipe for reproducibly building a LLVM/Clang/LLD based mingw-w64 toolchain.
  Benefits of a LLVM based MinGW toolchain are:
  - Support for targeting ARM/ARM64 (while GCC obviously does support these architectures, it doesn't support Windows on ARM)
  - A single toolchain targeting all four architectures (i686, x86_64, armv7 and arm64) instead of separate compiler binaries for each architecture
  - Support for generating debug info in PDB format
  - Support for Address Sanitizer and Undefined Behaviour Sanitizer
  - Since LLVM 16: Support for Control Flow Guard (-mguard=cf compile and link flags)
  Clang on its own can also be used as compiler in the normal GNU binutils based environments though, so the main difference lies in replacing binutils with LLVM based tools.
Tags:
- binutils
- c
- c++
- clang
- compiler
- cpp
- gcc
- llvm
- make
- mingw
- mingw-w64
ReleaseNotesUrl: https://github.com/mstorsjo/llvm-mingw/releases/tag/20241217
ManifestType: defaultLocale
ManifestVersion: 1.9.0
