# Created with YamlCreate.ps1 Dumplings Mod
# yaml-language-server: $schema=https://aka.ms/winget-manifest.locale.1.10.0.schema.json

PackageIdentifier: Cisco.ChezScheme
PackageVersion: 10.2.0
PackageLocale: zh-CN
ShortDescription: Chez Scheme 既是一种编程语言，也是该语言的实现方案，包含配套工具与文档。
Description: |-
  Chez Scheme 既是一种编程语言，也是该语言的实现方案，包含配套工具与文档。
  作为《Revised⁶ Report on the Algorithmic Language Scheme》（R6RS）所描述语言的超集，Chez Scheme 完整支持 Scheme 的所有标准特性，包括对过程化的首要支持、正确的尾调用处理、continuation、用户自定义记录、库、异常以及卫生宏展开。
  它还提供与 C 等语言交互的广泛支持、多核多线程运行能力、非阻塞 I/O 等丰富功能。
  Chez Scheme 的实现由编译器、运行时系统和编程环境构成。虽然提供解释器，但默认所有代码均会被编译。无论是从源文件加载还是通过交互式环境输入，源代码都会即时编译。源文件也可预编译为二进制存储格式，并在依赖项变更时自动重新编译。无论即时编译还是预编译，编译器都会生成优化机器码，甚至支持跨库优化。通过全程序编译模式，还能实现跨库完全优化，并将程序及其依赖库合并为单一二进制文件。
  运行时系统负责与操作系统交互，主要支持二进制/文本（Unicode）I/O、自动存储管理（动态内存分配与分代垃圾回收）、库管理和异常处理。默认情况下，运行时系统内置编译器，允许程序在运行时生成并编译代码，且动态编译代码的存储空间会像其他动态分配内存一样由垃圾回收器自动回收。
  编程环境包含：源码级调试器、编译时启用性能分析后可生成热点代码 HTML 可视化报告的工具、内存使用检查工具、支持多行表达式编辑的交互式 Shell 环境（expression editor，简称“expeditor”）。
  Chez Scheme 的 R6RS 核心特性记载于《The Scheme Programming Language》中，该书同时包含 Scheme 入门指南和示例程序集。扩展语言特性、运行时系统及编程环境功能详见《Chez Scheme User's Guide》。后者提供共享索引和语法形式摘要，并适时关联前书内容，因此通常是最佳学习起点。
Tags:
- scheme
- 编程语言
ReleaseNotesUrl: https://cisco.github.io/ChezScheme/release_notes/v10.2.0/release_notes.html
Documentations:
- DocumentLabel: 文档
  DocumentUrl: https://cisco.github.io/ChezScheme/#docs
ManifestType: locale
ManifestVersion: 1.10.0
