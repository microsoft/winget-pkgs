# Created with komac v2.11.0
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.9.0.schema.json

PackageIdentifier: ClassicOldSong.Apollo
PackageVersion: 0.3.0
PackageLocale: en-US
Publisher: Yukino Song
PublisherUrl: https://github.com/ClassicOldSong
PublisherSupportUrl: https://github.com/ClassicOldSong/Apollo/issues
Author: Yukino Song
PackageName: Apollo
PackageUrl: https://github.com/ClassicOldSong/Apollo
License: GPL-3.0
LicenseUrl: https://github.com/ClassicOldSong/Apollo/blob/HEAD/LICENSE
ShortDescription: Sunshine fork - The easiest way to stream with the native resolution of your client device.
Description: |-
  Apollo is a self-hosted desktop stream host for Artemis(Moonlight Noir). Offering low latency,
  native client resolution, cloud gaming server capabilities with support for AMD, Intel, and
  Nvidia GPUs for hardware encoding. Software encoding is also available. A web UI is provided to
  allow configuration and client pairing from your favorite web browser. Pair from the local server
  or any mobile device.
Tags:
- gaming
- remote-control
- remote-desktop
- streaming
ReleaseNotes: |-
  Change log
  1.  Update dependencies
  2.  Configuration API upgrade - if you're using HTTP APIs, now the JSON formats are more valid, please update your scripts to support the new API.
  3.  Current running app is now visible in Application page (#328)
  4.  Track upstream
  5.  Hang workaround
  6.  Add Remote Input mode (disabled by defalt, enable Input Only mode in Input tab)
  7.  Add Double Refresh Rate mode, could improve stutter issue on some systems (disabled by default, enable in Audio/Video tab)
  8.  Add option in Advanced tab for limiting captured frame rate (on by default)
  9.  Add command support for client connect/disconnect.
  10. Trim app name input to prevent accidental space character remained when configuring MoonDeckStream
  11. Add per-app*per-client identity option
  12. Disable Advanced Display Device Config by default
  13. Log fail reason for pairing
  14. Update SudoVDA install script - fix certutil not found in PATH for some users
  15. SudoVDA upgrade (see here for configurations):
      - Decimal refresh rate support
      - SDR10bit support
      - HDR12bit support
      - Wide Color Gamut support
      - Add scaled requested resolution for upscaling tools (0.5x, 0.75x, 1x, 1.25x, 1.5x)
      - Adjusted built-in resolutions, added preset resolutions for popular VR headsets
  ðŸ†•Remote Input
  Can run parallel with any other apps, without transmitting video and audio packets. You can use your phone as your computer's trackpad/keyboard/controller receiver, or have a handy trackpad/keyboard when you're streaming to you TV/Box/Sticks which is hard to use mouse on, or even connect controllers that are unsupported by your TV/Box/Sticks.
  Remote Input mode is still compatible with ordinary Moonlight clients.
  ðŸ†•Client commands
  You can now configure connect and disconnect commands for individual clients. Here's an instruction for setting up auto game suspend, giving you a more console-grade experience when streaming: Just hit power button on your mobile device and your game will be suspended automatically, you can resume at any time: [detail]
  ðŸ†•Scaled resolutions
  Now besides the requested resolution and framerate, another 9 sets of modes are added for conveinence:
  - 0.5x resolution
  - 0.5x resolution with doubled refresh rate
  - 0.75x resolution
  - 0.75x resolution with doubled refresh rate
  - 1x resolution with doubled refresh rate
  - 1.25x resolution
  - 1.25x resolution with doubled refresh rate
  - 1.5x resolution
  - 1.5x resolution with doubled refresh rate
  So now your game can pickup lower resolutions but still keep the same aspect ratio of your streamed device. You can then use Lossless Scaling to upscale your game while keeping the aspect ratio of your client more easily.
  ðŸ†•Best practices
  1. If your client support high refresh rate, always use high refresh rate. Combined with Artemis's Warp modes, this is basically a poorman's GSync/FreeSync.
  2. If you're not able to use Artemis on your client, you can enable Double Refresh Rate option in Audio/Video tab. This will also help to a certain degree.
  3. Limit game framerate with RTSS can give more stable frame time than using in-game vsync/frame limit options.
  Warning
  It is highly recommend to remove any other virtual display solutions from your system and Apollo/Sunshine config, to reduce confusions and compatibility issues.
  Note
  VirusTotal scan report for this build
  Why Windows always report file as harmful?
ReleaseNotesUrl: https://github.com/ClassicOldSong/Apollo/releases/tag/v0.3.0
ManifestType: defaultLocale
ManifestVersion: 1.9.0

